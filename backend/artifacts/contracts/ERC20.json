{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_msgData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_msgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_txSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessController",
      "outputs": [
        {
          "internalType": "contract IAccessControl",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ac_acccount",
          "type": "address"
        }
      ],
      "name": "connectAccessController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "contracts/token/ERC20/ERC20.sol",
    "19": "contracts/utils/access/AccessControlAdapter.sol",
    "20": "contracts/utils/context/Context.sol",
    "26": "interfaces/token/ERC20/IERC20.sol",
    "29": "interfaces/utils/access/IAccessControlAdapter.sol"
  },
  "ast": {
    "absolutePath": "contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "AccessControlAdapter": [
        3132
      ],
      "Context": [
        3163
      ],
      "ContextAdapter": [
        3696
      ],
      "ERC20": [
        2920
      ],
      "IAccessControl": [
        3766
      ],
      "IAccessControlAdapter": [
        3785
      ],
      "IERC20": [
        2207
      ]
    },
    "id": 2921,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2357,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:23:16"
      },
      {
        "absolutePath": "interfaces/token/ERC20/IERC20.sol",
        "file": "interfaces/token/ERC20/IERC20.sol",
        "id": 2358,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2921,
        "sourceUnit": 2208,
        "src": "115:43:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/context/Context.sol",
        "file": "contracts/utils/context/Context.sol",
        "id": 2359,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2921,
        "sourceUnit": 3164,
        "src": "159:45:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/access/AccessControlAdapter.sol",
        "file": "contracts/utils/access/AccessControlAdapter.sol",
        "id": 2360,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2921,
        "sourceUnit": 3133,
        "src": "205:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2362,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3163,
              "src": "1455:7:16"
            },
            "id": 2363,
            "nodeType": "InheritanceSpecifier",
            "src": "1455:7:16"
          },
          {
            "baseName": {
              "id": 2364,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2207,
              "src": "1464:6:16"
            },
            "id": 2365,
            "nodeType": "InheritanceSpecifier",
            "src": "1464:6:16"
          },
          {
            "baseName": {
              "id": 2366,
              "name": "AccessControlAdapter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3132,
              "src": "1472:20:16"
            },
            "id": 2367,
            "nodeType": "InheritanceSpecifier",
            "src": "1472:20:16"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2361,
          "nodeType": "StructuredDocumentation",
          "src": "264:1172:16",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 2920,
        "linearizedBaseContracts": [
          2920,
          3132,
          3785,
          2207,
          3163
        ],
        "name": "ERC20",
        "nameLocation": "1446:5:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2371,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1535:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 2920,
            "src": "1499:45:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2370,
              "keyType": {
                "id": 2368,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1507:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1499:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2369,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1518:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2377,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1607:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 2920,
            "src": "1551:67:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2376,
              "keyType": {
                "id": 2372,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1559:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1551:47:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2375,
                "keyType": {
                  "id": 2373,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1578:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1570:27:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2374,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1589:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2379,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1641:12:16",
            "nodeType": "VariableDeclaration",
            "scope": 2920,
            "src": "1625:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2378,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1625:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2381,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1675:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 2920,
            "src": "1660:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2380,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1660:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2383,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1701:7:16",
            "nodeType": "VariableDeclaration",
            "scope": 2920,
            "src": "1686:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2382,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1686:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2399,
              "nodeType": "Block",
              "src": "2074:66:16",
              "statements": [
                {
                  "expression": {
                    "id": 2393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2391,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2381,
                      "src": "2084:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2392,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2386,
                      "src": "2092:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2084:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2394,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:13:16"
                },
                {
                  "expression": {
                    "id": 2397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2395,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2383,
                      "src": "2107:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2396,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2388,
                      "src": "2117:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2107:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2398,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:17:16"
                }
              ]
            },
            "documentation": {
              "id": 2384,
              "nodeType": "StructuredDocumentation",
              "src": "1715:298:16",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 2400,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2044:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2400,
                  "src": "2030:19:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2385,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2388,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2065:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2400,
                  "src": "2051:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2387,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2029:44:16"
            },
            "returnParameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:0:16"
            },
            "scope": 2920,
            "src": "2018:122:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2408,
              "nodeType": "Block",
              "src": "2266:29:16",
              "statements": [
                {
                  "expression": {
                    "id": 2406,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2381,
                    "src": "2283:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2405,
                  "id": 2407,
                  "nodeType": "Return",
                  "src": "2276:12:16"
                }
              ]
            },
            "documentation": {
              "id": 2401,
              "nodeType": "StructuredDocumentation",
              "src": "2146:54:16",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 2409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2214:4:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2218:2:16"
            },
            "returnParameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2409,
                  "src": "2251:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:15:16"
            },
            "scope": 2920,
            "src": "2205:90:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2417,
              "nodeType": "Block",
              "src": "2470:31:16",
              "statements": [
                {
                  "expression": {
                    "id": 2415,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2383,
                    "src": "2487:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2414,
                  "id": 2416,
                  "nodeType": "Return",
                  "src": "2480:14:16"
                }
              ]
            },
            "documentation": {
              "id": 2410,
              "nodeType": "StructuredDocumentation",
              "src": "2301:102:16",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 2418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2417:6:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2423:2:16"
            },
            "returnParameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2418,
                  "src": "2455:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2455:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2454:15:16"
            },
            "scope": 2920,
            "src": "2408:93:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "3182:26:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3199:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 2423,
                  "id": 2425,
                  "nodeType": "Return",
                  "src": "3192:9:16"
                }
              ]
            },
            "documentation": {
              "id": 2419,
              "nodeType": "StructuredDocumentation",
              "src": "2507:613:16",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 2427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3134:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3142:2:16"
            },
            "returnParameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2422,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "3175:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2421,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3175:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3174:7:16"
            },
            "scope": 2920,
            "src": "3125:83:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2131
            ],
            "body": {
              "id": 2436,
              "nodeType": "Block",
              "src": "3338:36:16",
              "statements": [
                {
                  "expression": {
                    "id": 2434,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2379,
                    "src": "3355:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2433,
                  "id": 2435,
                  "nodeType": "Return",
                  "src": "3348:19:16"
                }
              ]
            },
            "documentation": {
              "id": 2428,
              "nodeType": "StructuredDocumentation",
              "src": "3214:49:16",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 2437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3277:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2430,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3311:8:16"
            },
            "parameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3288:2:16"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "3329:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3328:9:16"
            },
            "scope": 2920,
            "src": "3268:106:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2139
            ],
            "body": {
              "id": 2450,
              "nodeType": "Block",
              "src": "3515:42:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2446,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2371,
                      "src": "3532:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2448,
                    "indexExpression": {
                      "id": 2447,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "3542:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3532:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2445,
                  "id": 2449,
                  "nodeType": "Return",
                  "src": "3525:25:16"
                }
              ]
            },
            "documentation": {
              "id": 2438,
              "nodeType": "StructuredDocumentation",
              "src": "3380:47:16",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3441:9:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2442,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3488:8:16"
            },
            "parameters": {
              "id": 2441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2440,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3459:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "3451:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3450:17:16"
            },
            "returnParameters": {
              "id": 2445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "3506:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3506:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3505:9:16"
            },
            "scope": 2920,
            "src": "3432:125:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2149
            ],
            "body": {
              "id": 2471,
              "nodeType": "Block",
              "src": "3852:80:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2463,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3144,
                          "src": "3872:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3872:12:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2465,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2454,
                        "src": "3886:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2466,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2456,
                        "src": "3897:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2462,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2702,
                      "src": "3862:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:42:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2468,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:42:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3921:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2461,
                  "id": 2470,
                  "nodeType": "Return",
                  "src": "3914:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2452,
              "nodeType": "StructuredDocumentation",
              "src": "3563:192:16",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 2472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3769:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2458,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3828:8:16"
            },
            "parameters": {
              "id": 2457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2454,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3786:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "3778:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3778:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2456,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3805:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "3797:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3777:35:16"
            },
            "returnParameters": {
              "id": 2461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "3846:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:6:16"
            },
            "scope": 2920,
            "src": "3760:172:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2159
            ],
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "4091:51:16",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2483,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2377,
                        "src": "4108:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2485,
                      "indexExpression": {
                        "id": 2484,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2475,
                        "src": "4120:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4108:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2487,
                    "indexExpression": {
                      "id": 2486,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2477,
                      "src": "4127:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4108:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2482,
                  "id": 2488,
                  "nodeType": "Return",
                  "src": "4101:34:16"
                }
              ]
            },
            "documentation": {
              "id": 2473,
              "nodeType": "StructuredDocumentation",
              "src": "3941:47:16",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 2490,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4002:9:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4064:8:16"
            },
            "parameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2475,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4020:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2490,
                  "src": "4012:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2477,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4035:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2490,
                  "src": "4027:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4011:32:16"
            },
            "returnParameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2490,
                  "src": "4082:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:9:16"
            },
            "scope": 2920,
            "src": "3993:149:16",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2169
            ],
            "body": {
              "id": 2510,
              "nodeType": "Block",
              "src": "4369:77:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2502,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3144,
                          "src": "4388:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4388:12:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2504,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2493,
                        "src": "4402:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2505,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "4411:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2501,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2893,
                      "src": "4379:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4379:39:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:39:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4435:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2500,
                  "id": 2509,
                  "nodeType": "Return",
                  "src": "4428:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2491,
              "nodeType": "StructuredDocumentation",
              "src": "4148:127:16",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 2511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4289:7:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2497,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4345:8:16"
            },
            "parameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4305:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2511,
                  "src": "4297:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4322:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2511,
                  "src": "4314:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4296:33:16"
            },
            "returnParameters": {
              "id": 2500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2511,
                  "src": "4363:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4362:6:16"
            },
            "scope": 2920,
            "src": "4280:166:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2188
            ],
            "body": {
              "id": 2558,
              "nodeType": "Block",
              "src": "5055:353:16",
              "statements": [
                {
                  "assignments": [
                    2525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2525,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5073:16:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2558,
                      "src": "5065:24:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2524,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5065:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2532,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2526,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2377,
                        "src": "5092:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2528,
                      "indexExpression": {
                        "id": 2527,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "5104:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5092:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2531,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2529,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3144,
                        "src": "5112:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 2530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5112:12:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5092:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5065:60:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2534,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2525,
                          "src": "5143:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2535,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2518,
                          "src": "5163:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5143:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 2537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 2533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5135:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5135:79:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2539,
                  "nodeType": "ExpressionStatement",
                  "src": "5135:79:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2541,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "5243:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2542,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2516,
                        "src": "5251:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2543,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2518,
                        "src": "5262:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2540,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2702,
                      "src": "5233:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5233:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "5233:36:16"
                },
                {
                  "id": 2555,
                  "nodeType": "UncheckedBlock",
                  "src": "5288:92:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2547,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2514,
                            "src": "5321:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2548,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3144,
                              "src": "5329:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5329:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2550,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2525,
                              "src": "5343:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2551,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2518,
                              "src": "5362:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5343:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2546,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2893,
                          "src": "5312:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5312:57:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2554,
                      "nodeType": "ExpressionStatement",
                      "src": "5312:57:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5397:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2523,
                  "id": 2557,
                  "nodeType": "Return",
                  "src": "5390:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2512,
              "nodeType": "StructuredDocumentation",
              "src": "4452:456:16",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 2559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4922:12:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2520,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5031:8:16"
            },
            "parameters": {
              "id": 2519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4952:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "4944:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4944:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2516,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4976:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "4968:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4968:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2518,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5003:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "4995:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4995:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4934:81:16"
            },
            "returnParameters": {
              "id": 2523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "5049:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5048:6:16"
            },
            "scope": 2920,
            "src": "4913:495:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2585,
              "nodeType": "Block",
              "src": "5897:118:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2570,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3144,
                          "src": "5916:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5916:12:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2572,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "5930:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2573,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2377,
                              "src": "5939:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 2576,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2574,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3144,
                                "src": "5951:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5951:12:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5939:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2578,
                          "indexExpression": {
                            "id": 2577,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2562,
                            "src": "5965:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5939:34:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2579,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2564,
                          "src": "5976:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5939:47:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2569,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2893,
                      "src": "5907:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5907:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "5907:80:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6004:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2568,
                  "id": 2584,
                  "nodeType": "Return",
                  "src": "5997:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2560,
              "nodeType": "StructuredDocumentation",
              "src": "5414:384:16",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 2586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5812:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2562,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5838:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "5830:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5830:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5855:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "5847:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5847:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5829:37:16"
            },
            "returnParameters": {
              "id": 2568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2586,
                  "src": "5891:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2566,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5891:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5890:6:16"
            },
            "scope": 2920,
            "src": "5803:212:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2624,
              "nodeType": "Block",
              "src": "6601:306:16",
              "statements": [
                {
                  "assignments": [
                    2597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2597,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6619:16:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2624,
                      "src": "6611:24:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6611:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2604,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2598,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2377,
                        "src": "6638:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2601,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2599,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3144,
                          "src": "6650:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6650:12:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6638:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2603,
                    "indexExpression": {
                      "id": 2602,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2589,
                      "src": "6664:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6638:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6611:61:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2606,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2597,
                          "src": "6690:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2607,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2591,
                          "src": "6710:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6690:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 2609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6727:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 2605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6682:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6682:85:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2611,
                  "nodeType": "ExpressionStatement",
                  "src": "6682:85:16"
                },
                {
                  "id": 2621,
                  "nodeType": "UncheckedBlock",
                  "src": "6777:102:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2613,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3144,
                              "src": "6810:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6810:12:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2615,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2589,
                            "src": "6824:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2616,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2597,
                              "src": "6833:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2617,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2591,
                              "src": "6852:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6833:34:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2612,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2893,
                          "src": "6801:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6801:67:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2620,
                      "nodeType": "ExpressionStatement",
                      "src": "6801:67:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6896:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2595,
                  "id": 2623,
                  "nodeType": "Return",
                  "src": "6889:11:16"
                }
              ]
            },
            "documentation": {
              "id": 2587,
              "nodeType": "StructuredDocumentation",
              "src": "6021:476:16",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 2625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6511:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2589,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6537:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "6529:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6529:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6554:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "6546:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6546:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6528:42:16"
            },
            "returnParameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "6595:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6594:6:16"
            },
            "scope": 2920,
            "src": "6502:405:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2701,
              "nodeType": "Block",
              "src": "7498:598:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2636,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2628,
                          "src": "7516:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7534:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7526:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2637,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7526:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7526:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7516:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7538:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 2635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7508:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:70:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2644,
                  "nodeType": "ExpressionStatement",
                  "src": "7508:70:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2646,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2630,
                          "src": "7596:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7617:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7609:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2647,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7609:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7609:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7596:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7621:37:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 2645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7588:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7588:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2654,
                  "nodeType": "ExpressionStatement",
                  "src": "7588:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2656,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "7691:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2657,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "7699:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2658,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "7710:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2655,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2904,
                      "src": "7670:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7670:47:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "7670:47:16"
                },
                {
                  "assignments": [
                    2662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2662,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7737:13:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2701,
                      "src": "7729:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2661,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7729:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2666,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2663,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2371,
                      "src": "7753:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2665,
                    "indexExpression": {
                      "id": 2664,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2628,
                      "src": "7763:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7753:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7729:41:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2668,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2662,
                          "src": "7789:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2669,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2632,
                          "src": "7806:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7789:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 2671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7814:40:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 2667,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7781:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:74:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2673,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:74:16"
                },
                {
                  "id": 2682,
                  "nodeType": "UncheckedBlock",
                  "src": "7865:77:16",
                  "statements": [
                    {
                      "expression": {
                        "id": 2680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2674,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2371,
                            "src": "7889:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2676,
                          "indexExpression": {
                            "id": 2675,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2628,
                            "src": "7899:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7889:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2677,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2662,
                            "src": "7909:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2678,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2632,
                            "src": "7925:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7909:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7889:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2681,
                      "nodeType": "ExpressionStatement",
                      "src": "7889:42:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2683,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2371,
                        "src": "7951:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2685,
                      "indexExpression": {
                        "id": 2684,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "7961:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7951:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2686,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "7975:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7951:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "7951:30:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2690,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "8006:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2691,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "8014:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2692,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "8025:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2689,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "7997:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7997:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2694,
                  "nodeType": "EmitStatement",
                  "src": "7992:40:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2696,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "8063:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2697,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2630,
                        "src": "8071:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2698,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "8082:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2695,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "8043:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8043:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2700,
                  "nodeType": "ExpressionStatement",
                  "src": "8043:46:16"
                }
              ]
            },
            "documentation": {
              "id": 2626,
              "nodeType": "StructuredDocumentation",
              "src": "6913:463:16",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 2702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7390:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7417:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "7409:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7409:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7441:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "7433:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7433:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2632,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7468:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "7460:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7460:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7399:81:16"
            },
            "returnParameters": {
              "id": 2634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7498:0:16"
            },
            "scope": 2920,
            "src": "7381:715:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2176
            ],
            "body": {
              "id": 2720,
              "nodeType": "Block",
              "src": "8468:39:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2716,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2705,
                        "src": "8484:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2717,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2707,
                        "src": "8493:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2715,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "8478:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8478:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2719,
                  "nodeType": "ExpressionStatement",
                  "src": "8478:22:16"
                }
              ]
            },
            "documentation": {
              "id": 2703,
              "nodeType": "StructuredDocumentation",
              "src": "8102:265:16",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "40c10f19",
            "id": 2721,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2711,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3144,
                      "src": "8454:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8454:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2710,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3101,
                  "src": "8444:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "8444:23:16"
              }
            ],
            "name": "mint",
            "nameLocation": "8382:4:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8435:8:16"
            },
            "parameters": {
              "id": 2708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8395:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2721,
                  "src": "8387:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8387:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2707,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8412:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2721,
                  "src": "8404:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8404:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8386:33:16"
            },
            "returnParameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8468:0:16"
            },
            "scope": 2920,
            "src": "8373:134:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2775,
              "nodeType": "Block",
              "src": "8578:324:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2729,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2723,
                          "src": "8596:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8615:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8607:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8607:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8607:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8596:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8619:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 2728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8588:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:65:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2737,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:65:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8693:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8685:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8685:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8685:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2743,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "8697:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2744,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "8706:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2738,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2904,
                      "src": "8664:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8664:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2746,
                  "nodeType": "ExpressionStatement",
                  "src": "8664:49:16"
                },
                {
                  "expression": {
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2747,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2379,
                      "src": "8724:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2748,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2725,
                      "src": "8740:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8724:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2750,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:22:16"
                },
                {
                  "expression": {
                    "id": 2755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2751,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2371,
                        "src": "8756:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2753,
                      "indexExpression": {
                        "id": 2752,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "8766:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8756:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2754,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2725,
                      "src": "8778:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8756:28:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2756,
                  "nodeType": "ExpressionStatement",
                  "src": "8756:28:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8816:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8808:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8808:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8808:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2762,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "8820:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2763,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "8829:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2757,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "8799:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8799:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2765,
                  "nodeType": "EmitStatement",
                  "src": "8794:42:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8875:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8867:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8867:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8867:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2771,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "8879:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2772,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2725,
                        "src": "8888:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2766,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "8847:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8847:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2774,
                  "nodeType": "ExpressionStatement",
                  "src": "8847:48:16"
                }
              ]
            },
            "id": 2776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8522:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8536:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "8528:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8528:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8553:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2776,
                  "src": "8545:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8545:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8527:33:16"
            },
            "returnParameters": {
              "id": 2727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8578:0:16"
            },
            "scope": 2920,
            "src": "8513:389:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2847,
              "nodeType": "Block",
              "src": "9287:511:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2785,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2779,
                          "src": "9305:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9324:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9316:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2786,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9316:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9316:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9305:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9328:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 2784,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9297:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9297:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2793,
                  "nodeType": "ExpressionStatement",
                  "src": "9297:67:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2795,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "9396:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9413:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9405:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2796,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9405:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9405:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2800,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "9417:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2794,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2904,
                      "src": "9375:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9375:49:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2802,
                  "nodeType": "ExpressionStatement",
                  "src": "9375:49:16"
                },
                {
                  "assignments": [
                    2804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2804,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9443:14:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2847,
                      "src": "9435:22:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9435:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2808,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2805,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2371,
                      "src": "9460:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2807,
                    "indexExpression": {
                      "id": 2806,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2779,
                      "src": "9470:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9460:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9435:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2810,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2804,
                          "src": "9496:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2811,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2781,
                          "src": "9514:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9496:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9522:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9488:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9488:71:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2815,
                  "nodeType": "ExpressionStatement",
                  "src": "9488:71:16"
                },
                {
                  "id": 2824,
                  "nodeType": "UncheckedBlock",
                  "src": "9569:79:16",
                  "statements": [
                    {
                      "expression": {
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2816,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2371,
                            "src": "9593:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2818,
                          "indexExpression": {
                            "id": 2817,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2779,
                            "src": "9603:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9593:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2819,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2804,
                            "src": "9614:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2820,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2781,
                            "src": "9631:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9614:23:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9593:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2823,
                      "nodeType": "ExpressionStatement",
                      "src": "9593:44:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2825,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2379,
                      "src": "9657:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2826,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2781,
                      "src": "9673:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9657:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:22:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2830,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "9704:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9721:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9713:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9713:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9713:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2835,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "9725:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2829,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2197,
                      "src": "9695:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9695:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2837,
                  "nodeType": "EmitStatement",
                  "src": "9690:42:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2839,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2779,
                        "src": "9763:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9780:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9772:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2840,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9772:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9772:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2844,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "9784:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2838,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "9743:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9743:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "9743:48:16"
                }
              ]
            },
            "documentation": {
              "id": 2777,
              "nodeType": "StructuredDocumentation",
              "src": "8908:309:16",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 2848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9231:5:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9245:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "9237:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9237:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2781,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9262:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "9254:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9254:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9236:33:16"
            },
            "returnParameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9287:0:16"
            },
            "scope": 2920,
            "src": "9222:576:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2892,
              "nodeType": "Block",
              "src": "10334:257:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2859,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2851,
                          "src": "10352:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10369:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10361:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2860,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10361:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10361:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10352:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 2865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10373:38:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 2858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10344:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10344:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2867,
                  "nodeType": "ExpressionStatement",
                  "src": "10344:68:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2869,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2853,
                          "src": "10430:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10449:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10441:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2870,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10441:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10441:10:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10430:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 2875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10453:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 2868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10422:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10422:68:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2877,
                  "nodeType": "ExpressionStatement",
                  "src": "10422:68:16"
                },
                {
                  "expression": {
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2878,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2377,
                          "src": "10501:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2881,
                        "indexExpression": {
                          "id": 2879,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2851,
                          "src": "10513:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10501:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2882,
                      "indexExpression": {
                        "id": 2880,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "10520:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10501:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2883,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2855,
                      "src": "10531:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10501:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2885,
                  "nodeType": "ExpressionStatement",
                  "src": "10501:36:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2887,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2851,
                        "src": "10561:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2888,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2853,
                        "src": "10568:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2889,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2855,
                        "src": "10577:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2886,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "10552:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10552:32:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2891,
                  "nodeType": "EmitStatement",
                  "src": "10547:37:16"
                }
              ]
            },
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "9804:412:16",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 2893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10230:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10256:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "10248:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10248:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10279:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "10271:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10271:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10304:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "10296:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10296:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10238:78:16"
            },
            "returnParameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10334:0:16"
            },
            "scope": 2920,
            "src": "10221:370:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2903,
              "nodeType": "Block",
              "src": "11294:2:16",
              "statements": []
            },
            "documentation": {
              "id": 2894,
              "nodeType": "StructuredDocumentation",
              "src": "10597:573:16",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "11184:20:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2896,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11222:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2904,
                  "src": "11214:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11214:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2898,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11244:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2904,
                  "src": "11236:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11236:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2900,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11264:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2904,
                  "src": "11256:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11256:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11204:72:16"
            },
            "returnParameters": {
              "id": 2902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11294:0:16"
            },
            "scope": 2920,
            "src": "11175:121:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2914,
              "nodeType": "Block",
              "src": "12002:2:16",
              "statements": []
            },
            "documentation": {
              "id": 2905,
              "nodeType": "StructuredDocumentation",
              "src": "11302:577:16",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "11893:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11930:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "11922:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11922:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2909,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11952:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "11944:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11944:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2911,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11972:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "11964:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11964:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11912:72:16"
            },
            "returnParameters": {
              "id": 2913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12002:0:16"
            },
            "scope": 2920,
            "src": "11884:120:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2918,
              "nodeType": "Block",
              "src": "12046:2:16",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 2919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "12019:7:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12026:2:16"
            },
            "returnParameters": {
              "id": 2917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12046:0:16"
            },
            "scope": 2920,
            "src": "12010:38:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2921,
        "src": "1437:10613:16",
        "usedErrors": []
      }
    ],
    "src": "90:11961:16"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200106e3803806200106e8339810160408190526200003491620001db565b81516200004990600490602085019062000068565b5080516200005f90600590602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b610ddd80620002916000396000f3fe6080604052600436106101145760003560e01c80636c9cd097116100a0578063a9059cbb11610064578063a9059cbb1461031e578063bc43cbaf1461033e578063c877097d1461035e578063d0e30db014610236578063dd62ed3e1461037157600080fd5b80636c9cd0971461027557806370a08231146102955780638b49d47e146102cb57806395d89b41146102e9578063a457c2d7146102fe57600080fd5b806323b872dd116100e757806323b872dd146101ba578063313ce567146101da57806339509351146101f657806340c10f191461021657806352e5eb791461023857600080fd5b806306fdde0314610119578063095ea7b314610144578063119df25f1461017457806318160ddd1461019b575b600080fd5b34801561012557600080fd5b5061012e6103b7565b60405161013b9190610b1a565b60405180910390f35b34801561015057600080fd5b5061016461015f366004610b49565b610449565b604051901515815260200161013b565b34801561018057600080fd5b50335b6040516001600160a01b03909116815260200161013b565b3480156101a757600080fd5b506003545b60405190815260200161013b565b3480156101c657600080fd5b506101646101d5366004610b73565b61045f565b3480156101e657600080fd5b506040516012815260200161013b565b34801561020257600080fd5b50610164610211366004610b49565b61050c565b34801561022257600080fd5b50610236610231366004610b49565b610548565b005b34801561024457600080fd5b50610236610253366004610baf565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b34801561028157600080fd5b50610164610290366004610be0565b6105cb565b3480156102a157600080fd5b506101ac6102b0366004610baf565b6001600160a01b031660009081526001602052604090205490565b3480156102d757600080fd5b5060003660405161013b929190610ca2565b3480156102f557600080fd5b5061012e610646565b34801561030a57600080fd5b50610164610319366004610b49565b610655565b34801561032a57600080fd5b50610164610339366004610b49565b6106ee565b34801561034a57600080fd5b50600054610183906001600160a01b031681565b34801561036a57600080fd5b5032610183565b34801561037d57600080fd5b506101ac61038c366004610cd1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6060600480546103c690610cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f290610cfb565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b5050505050905090565b60006104563384846106fb565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054828110156104e95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104f485858561081f565b61050185338584036106fb565b506001949350505050565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091610456918590610543908690610d35565b6106fb565b336105706040518060400160405280600581526020016437bbb732b960d91b815250826105cb565b6105bc5760405162461bcd60e51b815260206004820152601c60248201527f746865206163636f756e74206973206e6f74207468652061646d696e0000000060448201526064016104e0565b6105c683836109ee565b505050565b60008054604051636c9cd09760e01b81526001600160a01b0390911690636c9cd097906105fe9086908690600401610d5b565b602060405180830381865afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190610d85565b9392505050565b6060600580546103c690610cfb565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156106d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e0565b6106e433858584036106fb565b5060019392505050565b600061045633848461081f565b6001600160a01b03831661075d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e0565b6001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166108835760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e0565b6001600160a01b0382166108e55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e0565b6001600160a01b0383166000908152600160205260409020548181101561095d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e0565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610994908490610d35565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109e091815260200190565b60405180910390a350505050565b6001600160a01b038216610a445760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e0565b8060036000828254610a569190610d35565b90915550506001600160a01b03821660009081526001602052604081208054839290610a83908490610d35565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000815180845260005b81811015610af357602081850181015186830182015201610ad7565b81811115610b05576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061063f6020830184610acd565b80356001600160a01b0381168114610b4457600080fd5b919050565b60008060408385031215610b5c57600080fd5b610b6583610b2d565b946020939093013593505050565b600080600060608486031215610b8857600080fd5b610b9184610b2d565b9250610b9f60208501610b2d565b9150604084013590509250925092565b600060208284031215610bc157600080fd5b61063f82610b2d565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610bf357600080fd5b823567ffffffffffffffff80821115610c0b57600080fd5b818501915085601f830112610c1f57600080fd5b813581811115610c3157610c31610bca565b604051601f8201601f19908116603f01168101908382118183101715610c5957610c59610bca565b81604052828152886020848701011115610c7257600080fd5b826020860160208301376000602084830101528096505050505050610c9960208401610b2d565b90509250929050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060408385031215610ce457600080fd5b610ced83610b2d565b9150610c9960208401610b2d565b600181811c90821680610d0f57607f821691505b602082108103610d2f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610d5657634e487b7160e01b600052601160045260246000fd5b500190565b604081526000610d6e6040830185610acd565b905060018060a01b03831660208301529392505050565b600060208284031215610d9757600080fd5b8151801515811461063f57600080fdfea2646970667358221220b9c739d05f7d78e924f96033c2a32a4639bf2efd438572472fad26d69d86ab5d64736f6c634300080d0033",
  "bytecodeSha1": "35b9d33e29d6b00a81b71fa944d0d9ac9f9e5e8d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "16": {
        "ERC20._approve": {
          "38": [
            10352,
            10371,
            true
          ],
          "39": [
            10430,
            10451,
            true
          ]
        },
        "ERC20._mint": {
          "43": [
            8596,
            8617,
            true
          ]
        },
        "ERC20._transfer": {
          "40": [
            7516,
            7536,
            true
          ],
          "41": [
            7596,
            7619,
            true
          ],
          "42": [
            7789,
            7812,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "37": [
            6690,
            6725,
            true
          ]
        },
        "ERC20.transferFrom": {
          "36": [
            5143,
            5169,
            true
          ]
        }
      },
      "19": {
        "Context._msgSender": {
          "44": [
            588,
            613,
            true
          ]
        }
      },
      "20": {},
      "26": {},
      "29": {}
    },
    "statements": {
      "16": {
        "ERC20._approve": {
          "22": [
            10344,
            10412
          ],
          "23": [
            10422,
            10490
          ],
          "24": [
            10501,
            10537
          ],
          "25": [
            10547,
            10584
          ]
        },
        "ERC20._mint": {
          "32": [
            8588,
            8653
          ],
          "33": [
            8724,
            8746
          ],
          "34": [
            8756,
            8784
          ],
          "35": [
            8794,
            8836
          ]
        },
        "ERC20._transfer": {
          "26": [
            7508,
            7578
          ],
          "27": [
            7588,
            7659
          ],
          "28": [
            7781,
            7855
          ],
          "29": [
            7889,
            7931
          ],
          "30": [
            7951,
            7981
          ],
          "31": [
            7992,
            8032
          ]
        },
        "ERC20.allowance": {
          "6": [
            4101,
            4135
          ]
        },
        "ERC20.approve": {
          "8": [
            4379,
            4418
          ],
          "9": [
            4428,
            4439
          ]
        },
        "ERC20.balanceOf": {
          "4": [
            3525,
            3550
          ]
        },
        "ERC20.decimals": {
          "2": [
            3192,
            3201
          ]
        },
        "ERC20.decreaseAllowance": {
          "18": [
            6682,
            6767
          ],
          "19": [
            6801,
            6868
          ],
          "20": [
            6889,
            6900
          ]
        },
        "ERC20.increaseAllowance": {
          "14": [
            5907,
            5987
          ]
        },
        "ERC20.mint": {
          "15": [
            8478,
            8500
          ]
        },
        "ERC20.name": {
          "7": [
            2276,
            2288
          ]
        },
        "ERC20.symbol": {
          "17": [
            2480,
            2494
          ]
        },
        "ERC20.totalSupply": {
          "1": [
            3348,
            3367
          ]
        },
        "ERC20.transfer": {
          "21": [
            3862,
            3904
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            5135,
            5214
          ],
          "11": [
            5233,
            5269
          ],
          "12": [
            5312,
            5369
          ],
          "13": [
            5390,
            5401
          ]
        }
      },
      "19": {
        "AccessControlAdapter.connectAccessController": {
          "3": [
            755,
            802
          ]
        },
        "AccessControlAdapter.hasRole": {
          "16": [
            912,
            958
          ]
        }
      },
      "20": {
        "Context._msgSender": {
          "0": [
            702,
            719
          ]
        },
        "Context._txSender": {
          "5": [
            904,
            920
          ]
        }
      },
      "26": {},
      "29": {}
    }
  },
  "dependencies": [
    "AccessControlAdapter",
    "Context",
    "IAccessControlAdapter",
    "IERC20"
  ],
  "deployedBytecode": "6080604052600436106101145760003560e01c80636c9cd097116100a0578063a9059cbb11610064578063a9059cbb1461031e578063bc43cbaf1461033e578063c877097d1461035e578063d0e30db014610236578063dd62ed3e1461037157600080fd5b80636c9cd0971461027557806370a08231146102955780638b49d47e146102cb57806395d89b41146102e9578063a457c2d7146102fe57600080fd5b806323b872dd116100e757806323b872dd146101ba578063313ce567146101da57806339509351146101f657806340c10f191461021657806352e5eb791461023857600080fd5b806306fdde0314610119578063095ea7b314610144578063119df25f1461017457806318160ddd1461019b575b600080fd5b34801561012557600080fd5b5061012e6103b7565b60405161013b9190610b1a565b60405180910390f35b34801561015057600080fd5b5061016461015f366004610b49565b610449565b604051901515815260200161013b565b34801561018057600080fd5b50335b6040516001600160a01b03909116815260200161013b565b3480156101a757600080fd5b506003545b60405190815260200161013b565b3480156101c657600080fd5b506101646101d5366004610b73565b61045f565b3480156101e657600080fd5b506040516012815260200161013b565b34801561020257600080fd5b50610164610211366004610b49565b61050c565b34801561022257600080fd5b50610236610231366004610b49565b610548565b005b34801561024457600080fd5b50610236610253366004610baf565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b34801561028157600080fd5b50610164610290366004610be0565b6105cb565b3480156102a157600080fd5b506101ac6102b0366004610baf565b6001600160a01b031660009081526001602052604090205490565b3480156102d757600080fd5b5060003660405161013b929190610ca2565b3480156102f557600080fd5b5061012e610646565b34801561030a57600080fd5b50610164610319366004610b49565b610655565b34801561032a57600080fd5b50610164610339366004610b49565b6106ee565b34801561034a57600080fd5b50600054610183906001600160a01b031681565b34801561036a57600080fd5b5032610183565b34801561037d57600080fd5b506101ac61038c366004610cd1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6060600480546103c690610cfb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f290610cfb565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b5050505050905090565b60006104563384846106fb565b50600192915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054828110156104e95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104f485858561081f565b61050185338584036106fb565b506001949350505050565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091610456918590610543908690610d35565b6106fb565b336105706040518060400160405280600581526020016437bbb732b960d91b815250826105cb565b6105bc5760405162461bcd60e51b815260206004820152601c60248201527f746865206163636f756e74206973206e6f74207468652061646d696e0000000060448201526064016104e0565b6105c683836109ee565b505050565b60008054604051636c9cd09760e01b81526001600160a01b0390911690636c9cd097906105fe9086908690600401610d5b565b602060405180830381865afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190610d85565b9392505050565b6060600580546103c690610cfb565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156106d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e0565b6106e433858584036106fb565b5060019392505050565b600061045633848461081f565b6001600160a01b03831661075d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e0565b6001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166108835760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e0565b6001600160a01b0382166108e55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e0565b6001600160a01b0383166000908152600160205260409020548181101561095d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e0565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610994908490610d35565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109e091815260200190565b60405180910390a350505050565b6001600160a01b038216610a445760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e0565b8060036000828254610a569190610d35565b90915550506001600160a01b03821660009081526001602052604081208054839290610a83908490610d35565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000815180845260005b81811015610af357602081850181015186830182015201610ad7565b81811115610b05576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061063f6020830184610acd565b80356001600160a01b0381168114610b4457600080fd5b919050565b60008060408385031215610b5c57600080fd5b610b6583610b2d565b946020939093013593505050565b600080600060608486031215610b8857600080fd5b610b9184610b2d565b9250610b9f60208501610b2d565b9150604084013590509250925092565b600060208284031215610bc157600080fd5b61063f82610b2d565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610bf357600080fd5b823567ffffffffffffffff80821115610c0b57600080fd5b818501915085601f830112610c1f57600080fd5b813581811115610c3157610c31610bca565b604051601f8201601f19908116603f01168101908382118183101715610c5957610c59610bca565b81604052828152886020848701011115610c7257600080fd5b826020860160208301376000602084830101528096505050505050610c9960208401610b2d565b90509250929050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060408385031215610ce457600080fd5b610ced83610b2d565b9150610c9960208401610b2d565b600181811c90821680610d0f57607f821691505b602082108103610d2f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610d5657634e487b7160e01b600052601160045260246000fd5b500190565b604081526000610d6e6040830185610acd565b905060018060a01b03831660208301529392505050565b600060208284031215610d9757600080fd5b8151801515811461063f57600080fdfea2646970667358221220b9c739d05f7d78e924f96033c2a32a4639bf2efd438572472fad26d69d86ab5d64736f6c634300080d0033",
  "deployedSourceMap": "1437:10613:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4280:166;;;;;;;;;;-1:-1:-1;4280:166:16;;;;;:::i;:::-;;:::i;:::-;;;1318:14:30;;1311:22;1293:41;;1281:2;1266:18;4280:166:16;1153:187:30;632:94:20;;;;;;;;;;-1:-1:-1;709:10:20;632:94;;;-1:-1:-1;;;;;1509:32:30;;;1491:51;;1479:2;1464:18;632:94:20;1345:203:30;3268:106:16;;;;;;;;;;-1:-1:-1;3355:12:16;;3268:106;;;1699:25:30;;;1687:2;1672:18;3268:106:16;1553:177:30;4913:495:16;;;;;;;;;;-1:-1:-1;4913:495:16;;;;;:::i;:::-;;:::i;3125:83::-;;;;;;;;;;-1:-1:-1;3125:83:16;;3199:2;2210:36:30;;2198:2;2183:18;3125:83:16;2068:184:30;5803:212:16;;;;;;;;;;-1:-1:-1;5803:212:16;;;;;:::i;:::-;;:::i;8373:134::-;;;;;;;;;;-1:-1:-1;8373:134:16;;;;;:::i;:::-;;:::i;:::-;;674:135:19;;;;;;;;;;-1:-1:-1;674:135:19;;;;;:::i;:::-;755:16;:47;;-1:-1:-1;;;;;;755:47:19;-1:-1:-1;;;;;755:47:19;;;;;;;;;;674:135;814:151;;;;;;;;;;-1:-1:-1;814:151:19;;;;;:::i;:::-;;:::i;3432:125:16:-;;;;;;;;;;-1:-1:-1;3432:125:16;;;;;:::i;:::-;-1:-1:-1;;;;;3532:18:16;3506:7;3532:18;;;:9;:18;;;;;;;3432:125;732:97:20;;;;;;;;;;-1:-1:-1;781:14:20;;732:97;;;;;;;:::i;2408:93:16:-;;;;;;;;;;;;;:::i;6502:405::-;;;;;;;;;;-1:-1:-1;6502:405:16;;;;;:::i;:::-;;:::i;3760:172::-;;;;;;;;;;-1:-1:-1;3760:172:16;;;;;:::i;:::-;;:::i;348:38:19:-;;;;;;;;;;-1:-1:-1;348:38:19;;;;-1:-1:-1;;;;;348:38:19;;;835:92:20;;;;;;;;;;-1:-1:-1;911:9:20;835:92;;3993:149:16;;;;;;;;;;-1:-1:-1;3993:149:16;;;;;:::i;:::-;-1:-1:-1;;;;;4108:18:16;;;4082:7;4108:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3993:149;2205:90;2251:13;2283:5;2276:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:90;:::o;4280:166::-;4363:4;4379:39;709:10:20;4402:7:16;4411:6;4379:8;:39::i;:::-;-1:-1:-1;4435:4:16;4280:166;;;;:::o;4913:495::-;-1:-1:-1;;;;;5092:19:16;;5049:4;5092:19;;;:11;:19;;;;;;;;709:10:20;5092:33:16;;;;;;;;5143:26;;;;5135:79;;;;-1:-1:-1;;;5135:79:16;;5067:2:30;5135:79:16;;;5049:21:30;5106:2;5086:18;;;5079:30;5145:34;5125:18;;;5118:62;-1:-1:-1;;;5196:18:30;;;5189:38;5244:19;;5135:79:16;;;;;;;;;5233:36;5243:6;5251:9;5262:6;5233:9;:36::i;:::-;5312:57;5321:6;709:10:20;5362:6:16;5343:16;:25;5312:8;:57::i;:::-;-1:-1:-1;5397:4:16;;4913:495;-1:-1:-1;;;;4913:495:16:o;5803:212::-;709:10:20;5891:4:16;5939:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5939:34:16;;;;;;;;;;5891:4;;5907:80;;5930:7;;5939:47;;5976:10;;5939:47;:::i;:::-;5907:8;:80::i;8373:134::-;709:10:20;588:25:19;;;;;;;;;;;;;;-1:-1:-1;;;588:25:19;;;605:7;588;:25::i;:::-;580:66;;;;-1:-1:-1;;;580:66:19;;5706:2:30;580:66:19;;;5688:21:30;5745:2;5725:18;;;5718:30;5784;5764:18;;;5757:58;5832:18;;580:66:19;5504:352:30;580:66:19;8478:22:16::1;8484:7;8493:6;8478:5;:22::i;:::-;8373:134:::0;;;:::o;814:151:19:-;897:4;919:16;;:39;;-1:-1:-1;;;919:39:19;;-1:-1:-1;;;;;919:16:19;;;;:24;;:39;;944:4;;950:7;;919:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;912:46;814:151;-1:-1:-1;;;814:151:19:o;2408:93:16:-;2455:13;2487:7;2480:14;;;;;:::i;6502:405::-;709:10:20;6595:4:16;6638:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6638:34:16;;;;;;;;;;6690:35;;;;6682:85;;;;-1:-1:-1;;;6682:85:16;;6667:2:30;6682:85:16;;;6649:21:30;6706:2;6686:18;;;6679:30;6745:34;6725:18;;;6718:62;-1:-1:-1;;;6796:18:30;;;6789:35;6841:19;;6682:85:16;6465:401:30;6682:85:16;6801:67;709:10:20;6824:7:16;6852:15;6833:16;:34;6801:8;:67::i;:::-;-1:-1:-1;6896:4:16;;6502:405;-1:-1:-1;;;6502:405:16:o;3760:172::-;3846:4;3862:42;709:10:20;3886:9:16;3897:6;3862:9;:42::i;10221:370::-;-1:-1:-1;;;;;10352:19:16;;10344:68;;;;-1:-1:-1;;;10344:68:16;;7073:2:30;10344:68:16;;;7055:21:30;7112:2;7092:18;;;7085:30;7151:34;7131:18;;;7124:62;-1:-1:-1;;;7202:18:30;;;7195:34;7246:19;;10344:68:16;6871:400:30;10344:68:16;-1:-1:-1;;;;;10430:21:16;;10422:68;;;;-1:-1:-1;;;10422:68:16;;7478:2:30;10422:68:16;;;7460:21:30;7517:2;7497:18;;;7490:30;7556:34;7536:18;;;7529:62;-1:-1:-1;;;7607:18:30;;;7600:32;7649:19;;10422:68:16;7276:398:30;10422:68:16;-1:-1:-1;;;;;10501:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10552:32;;1699:25:30;;;10552:32:16;;1672:18:30;10552:32:16;;;;;;;10221:370;;;:::o;7381:715::-;-1:-1:-1;;;;;7516:20:16;;7508:70;;;;-1:-1:-1;;;7508:70:16;;7881:2:30;7508:70:16;;;7863:21:30;7920:2;7900:18;;;7893:30;7959:34;7939:18;;;7932:62;-1:-1:-1;;;8010:18:30;;;8003:35;8055:19;;7508:70:16;7679:401:30;7508:70:16;-1:-1:-1;;;;;7596:23:16;;7588:71;;;;-1:-1:-1;;;7588:71:16;;8287:2:30;7588:71:16;;;8269:21:30;8326:2;8306:18;;;8299:30;8365:34;8345:18;;;8338:62;-1:-1:-1;;;8416:18:30;;;8409:33;8459:19;;7588:71:16;8085:399:30;7588:71:16;-1:-1:-1;;;;;7753:17:16;;7729:21;7753:17;;;:9;:17;;;;;;7789:23;;;;7781:74;;;;-1:-1:-1;;;7781:74:16;;8691:2:30;7781:74:16;;;8673:21:30;8730:2;8710:18;;;8703:30;8769:34;8749:18;;;8742:62;-1:-1:-1;;;8820:18:30;;;8813:36;8866:19;;7781:74:16;8489:402:30;7781:74:16;-1:-1:-1;;;;;7889:17:16;;;;;;;:9;:17;;;;;;7909:22;;;7889:42;;7951:20;;;;;;;;:30;;7925:6;;7889:17;7951:30;;7925:6;;7951:30;:::i;:::-;;;;;;;;8014:9;-1:-1:-1;;;;;7997:35:16;8006:6;-1:-1:-1;;;;;7997:35:16;;8025:6;7997:35;;;;1699:25:30;;1687:2;1672:18;;1553:177;7997:35:16;;;;;;;;7498:598;7381:715;;;:::o;8513:389::-;-1:-1:-1;;;;;8596:21:16;;8588:65;;;;-1:-1:-1;;;8588:65:16;;9098:2:30;8588:65:16;;;9080:21:30;9137:2;9117:18;;;9110:30;9176:33;9156:18;;;9149:61;9227:18;;8588:65:16;8896:355:30;8588:65:16;8740:6;8724:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8756:18:16;;;;;;:9;:18;;;;;:28;;8778:6;;8756:18;:28;;8778:6;;8756:28;:::i;:::-;;;;-1:-1:-1;;8799:37:16;;1699:25:30;;;-1:-1:-1;;;;;8799:37:16;;;8816:1;;8799:37;;1687:2:30;1672:18;8799:37:16;;;;;;;8513:389;;:::o;14:472:30:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;336:6;333:1;330:13;327:87;;;402:1;395:4;386:6;381:3;377:16;373:27;366:38;327:87;-1:-1:-1;468:2:30;447:15;-1:-1:-1;;443:29:30;434:39;;;;475:4;430:50;;14:472;-1:-1:-1;;14:472:30:o;491:220::-;640:2;629:9;622:21;603:4;660:45;701:2;690:9;686:18;678:6;660:45;:::i;716:173::-;784:20;;-1:-1:-1;;;;;833:31:30;;823:42;;813:70;;879:1;876;869:12;813:70;716:173;;;:::o;894:254::-;962:6;970;1023:2;1011:9;1002:7;998:23;994:32;991:52;;;1039:1;1036;1029:12;991:52;1062:29;1081:9;1062:29;:::i;:::-;1052:39;1138:2;1123:18;;;;1110:32;;-1:-1:-1;;;894:254:30:o;1735:328::-;1812:6;1820;1828;1881:2;1869:9;1860:7;1856:23;1852:32;1849:52;;;1897:1;1894;1887:12;1849:52;1920:29;1939:9;1920:29;:::i;:::-;1910:39;;1968:38;2002:2;1991:9;1987:18;1968:38;:::i;:::-;1958:48;;2053:2;2042:9;2038:18;2025:32;2015:42;;1735:328;;;;;:::o;2257:186::-;2316:6;2369:2;2357:9;2348:7;2344:23;2340:32;2337:52;;;2385:1;2382;2375:12;2337:52;2408:29;2427:9;2408:29;:::i;2448:127::-;2509:10;2504:3;2500:20;2497:1;2490:31;2540:4;2537:1;2530:15;2564:4;2561:1;2554:15;2580:1006;2658:6;2666;2719:2;2707:9;2698:7;2694:23;2690:32;2687:52;;;2735:1;2732;2725:12;2687:52;2775:9;2762:23;2804:18;2845:2;2837:6;2834:14;2831:34;;;2861:1;2858;2851:12;2831:34;2899:6;2888:9;2884:22;2874:32;;2944:7;2937:4;2933:2;2929:13;2925:27;2915:55;;2966:1;2963;2956:12;2915:55;3002:2;2989:16;3024:2;3020;3017:10;3014:36;;;3030:18;;:::i;:::-;3105:2;3099:9;3073:2;3159:13;;-1:-1:-1;;3155:22:30;;;3179:2;3151:31;3147:40;3135:53;;;3203:18;;;3223:22;;;3200:46;3197:72;;;3249:18;;:::i;:::-;3289:10;3285:2;3278:22;3324:2;3316:6;3309:18;3366:7;3359:4;3354:2;3350;3346:11;3342:22;3339:35;3336:55;;;3387:1;3384;3377:12;3336:55;3447:2;3440:4;3436:2;3432:13;3425:4;3417:6;3413:17;3400:50;3494:1;3487:4;3482:2;3474:6;3470:15;3466:26;3459:37;3515:6;3505:16;;;;;;;3540:40;3574:4;3563:9;3559:20;3540:40;:::i;:::-;3530:50;;2580:1006;;;;;:::o;3591:388::-;3748:2;3737:9;3730:21;3787:6;3782:2;3771:9;3767:18;3760:34;3844:6;3836;3831:2;3820:9;3816:18;3803:48;3900:1;3871:22;;;3895:2;3867:31;;;3860:42;;;;3963:2;3942:15;;;-1:-1:-1;;3938:29:30;3923:45;3919:54;;3591:388;-1:-1:-1;3591:388:30:o;4215:260::-;4283:6;4291;4344:2;4332:9;4323:7;4319:23;4315:32;4312:52;;;4360:1;4357;4350:12;4312:52;4383:29;4402:9;4383:29;:::i;:::-;4373:39;;4431:38;4465:2;4454:9;4450:18;4431:38;:::i;4480:380::-;4559:1;4555:12;;;;4602;;;4623:61;;4677:4;4669:6;4665:17;4655:27;;4623:61;4730:2;4722:6;4719:14;4699:18;4696:38;4693:161;;4776:10;4771:3;4767:20;4764:1;4757:31;4811:4;4808:1;4801:15;4839:4;4836:1;4829:15;4693:161;;4480:380;;;:::o;5274:225::-;5314:3;5345:1;5341:6;5338:1;5335:13;5332:136;;;5390:10;5385:3;5381:20;5378:1;5371:31;5425:4;5422:1;5415:15;5453:4;5450:1;5443:15;5332:136;-1:-1:-1;5484:9:30;;5274:225::o;5861:317::-;6038:2;6027:9;6020:21;6001:4;6058:45;6099:2;6088:9;6084:18;6076:6;6058:45;:::i;:::-;6050:53;;6168:1;6164;6159:3;6155:11;6151:19;6143:6;6139:32;6134:2;6123:9;6119:18;6112:60;5861:317;;;;;:::o;6183:277::-;6250:6;6303:2;6291:9;6282:7;6278:23;6274:32;6271:52;;;6319:1;6316;6309:12;6271:52;6351:9;6345:16;6404:5;6397:13;6390:21;6383:5;6380:32;6370:60;;6426:1;6423;6416:12",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements: - `account` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1437,
    12050
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C9CD097 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xBC43CBAF EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC877097D EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C9CD097 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x8B49D47E EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x52E5EB79 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x119DF25F EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x13B SWAP3 SWAP2 SWAP1 PUSH2 0xCA2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x646 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x183 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ORIGIN PUSH2 0x183 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AC PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3C6 SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F2 SWAP1 PUSH2 0xCFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x414 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x422 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 CALLER DUP5 DUP5 PUSH2 0x6FB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F4 DUP6 DUP6 DUP6 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x501 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x6FB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x456 SWAP2 DUP6 SWAP1 PUSH2 0x543 SWAP1 DUP7 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST CALLER PUSH2 0x570 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL DUP2 MSTORE POP DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746865206163636F756E74206973206E6F74207468652061646D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x5C6 DUP4 DUP4 PUSH2 0x9EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6C9CD097 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6C9CD097 SWAP1 PUSH2 0x5FE SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0xD85 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3C6 SWAP1 PUSH2 0xCFB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x6E4 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x6FB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x456 CALLER DUP5 DUP5 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x994 SWAP1 DUP5 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E0 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA83 SWAP1 DUP5 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xAD7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB05 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x63F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xACD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB65 DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP5 PUSH2 0xB2D JUMP JUMPDEST SWAP3 POP PUSH2 0xB9F PUSH1 0x20 DUP6 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63F DUP3 PUSH2 0xB2D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC31 JUMPI PUSH2 0xC31 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC59 PUSH2 0xBCA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP PUSH2 0xC99 PUSH1 0x20 DUP5 ADD PUSH2 0xB2D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCED DUP4 PUSH2 0xB2D JUMP JUMPDEST SWAP2 POP PUSH2 0xC99 PUSH1 0x20 DUP5 ADD PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD56 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD6E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x63F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xC7 CODECOPY 0xD0 0x5F PUSH30 0x78E924F96033C2A32A4639BF2EFD438572472FAD26D69D86AB5D64736F6C PUSH4 0x4300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x114"
    },
    "12": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C9CD097"
    },
    "25": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "36": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "47": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x31E"
    },
    "51": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBC43CBAF"
    },
    "58": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x33E"
    },
    "62": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC877097D"
    },
    "69": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x35E"
    },
    "73": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xD0E30DB0"
    },
    "80": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x236"
    },
    "84": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "91": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x371"
    },
    "95": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "REVERT",
      "path": "16"
    },
    "100": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "101": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "102": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6C9CD097"
    },
    "107": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "108": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x275"
    },
    "111": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "118": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x295"
    },
    "122": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8B49D47E"
    },
    "129": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CB"
    },
    "133": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "135": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95D89B41"
    },
    "140": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "141": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E9"
    },
    "144": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "145": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA457C2D7"
    },
    "151": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "152": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FE"
    },
    "155": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "156": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "159": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "REVERT",
      "path": "16"
    },
    "160": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "167": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "GT",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "178": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BA"
    },
    "182": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x313CE567"
    },
    "189": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DA"
    },
    "193": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "195": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x39509351"
    },
    "200": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "201": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F6"
    },
    "204": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "205": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x40C10F19"
    },
    "211": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "212": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x216"
    },
    "215": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "216": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "217": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x52E5EB79"
    },
    "222": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "223": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x238"
    },
    "226": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "227": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "230": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "REVERT",
      "path": "16"
    },
    "231": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "233": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6FDDE03"
    },
    "238": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "239": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x119"
    },
    "242": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "243": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x95EA7B3"
    },
    "249": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "250": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x144"
    },
    "253": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "254": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "255": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x119DF25F"
    },
    "260": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "261": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x174"
    },
    "264": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "265": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x18160DDD"
    },
    "271": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "EQ",
      "path": "16"
    },
    "272": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x19B"
    },
    "275": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "276": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "279": {
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "DUP1",
      "path": "16"
    },
    "280": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1437,
        12050
      ],
      "op": "REVERT",
      "path": "16"
    },
    "281": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "282": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "283": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "DUP1",
      "path": "16"
    },
    "284": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "285": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x125"
    },
    "288": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "289": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "291": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "DUP1",
      "path": "16"
    },
    "292": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "REVERT",
      "path": "16"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "POP",
      "path": "16"
    },
    "295": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12E"
    },
    "298": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3B7"
    },
    "301": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMP",
      "path": "16"
    },
    "302": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "303": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B"
    },
    "309": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "310": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "311": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB1A"
    },
    "314": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMP",
      "path": "16"
    },
    "315": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "316": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "318": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "319": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "DUP1",
      "path": "16"
    },
    "320": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "SUB",
      "path": "16"
    },
    "322": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "323": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "RETURN",
      "path": "16"
    },
    "324": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "325": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "326": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "DUP1",
      "path": "16"
    },
    "327": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "328": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x150"
    },
    "331": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "332": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "334": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "DUP1",
      "path": "16"
    },
    "335": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "REVERT",
      "path": "16"
    },
    "336": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "337": {
      "op": "POP"
    },
    "338": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "341": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "345": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "350": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "351": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "352": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x449"
    },
    "355": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "356": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "359": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "360": {
      "op": "SWAP1"
    },
    "361": {
      "op": "ISZERO"
    },
    "362": {
      "op": "ISZERO"
    },
    "363": {
      "op": "DUP2"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "367": {
      "op": "ADD"
    },
    "368": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B"
    },
    "371": {
      "op": "JUMP"
    },
    "372": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "373": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "374": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "DUP1",
      "path": "20"
    },
    "375": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "376": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "379": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "380": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "382": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "DUP1",
      "path": "20"
    },
    "383": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "REVERT",
      "path": "20"
    },
    "384": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 0
    },
    "387": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "388": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "390": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "op": "SWAP1"
    },
    "400": {
      "op": "SWAP2"
    },
    "401": {
      "op": "AND"
    },
    "402": {
      "op": "DUP2"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "fn": "Context._msgSender",
      "offset": [
        632,
        726
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13B"
    },
    "410": {
      "op": "JUMP"
    },
    "411": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "412": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "413": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "DUP1",
      "path": "16"
    },
    "414": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "415": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A7"
    },
    "418": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "419": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "421": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "DUP1",
      "path": "16"
    },
    "422": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "REVERT",
      "path": "16"
    },
    "423": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "424": {
      "op": "POP"
    },
    "425": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3355,
        3367
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x3"
    },
    "427": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3355,
        3367
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "428": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "429": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "431": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "432": {
      "op": "SWAP1"
    },
    "433": {
      "op": "DUP2"
    },
    "434": {
      "op": "MSTORE"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3268,
        3374
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B"
    },
    "441": {
      "op": "JUMP"
    },
    "442": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "443": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "444": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "DUP1",
      "path": "16"
    },
    "445": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "446": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C6"
    },
    "449": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "450": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "452": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "DUP1",
      "path": "16"
    },
    "453": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "REVERT",
      "path": "16"
    },
    "454": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "459": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D5"
    },
    "462": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "463": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "465": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB73"
    },
    "468": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMP",
      "path": "16"
    },
    "469": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "470": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x45F"
    },
    "473": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMP",
      "path": "16"
    },
    "474": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "475": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "476": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "477": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "478": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "481": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "482": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "484": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "DUP1",
      "path": "16"
    },
    "485": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "REVERT",
      "path": "16"
    },
    "486": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "490": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "491": {
      "fn": "ERC20.decimals",
      "offset": [
        3199,
        3201
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0x12"
    },
    "493": {
      "op": "DUP2"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "fn": "ERC20.decimals",
      "offset": [
        3125,
        3208
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13B"
    },
    "501": {
      "op": "JUMP"
    },
    "502": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "503": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "504": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "DUP1",
      "path": "16"
    },
    "505": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "506": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x202"
    },
    "509": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "510": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "512": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "DUP1",
      "path": "16"
    },
    "513": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "REVERT",
      "path": "16"
    },
    "514": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "515": {
      "op": "POP"
    },
    "516": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "519": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x211"
    },
    "522": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "523": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "525": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "528": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMP",
      "path": "16"
    },
    "529": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "530": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x50C"
    },
    "533": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMP",
      "path": "16"
    },
    "534": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "535": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "536": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "DUP1",
      "path": "16"
    },
    "537": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "538": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x222"
    },
    "541": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "542": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "544": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "DUP1",
      "path": "16"
    },
    "545": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "REVERT",
      "path": "16"
    },
    "546": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "547": {
      "op": "POP"
    },
    "548": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x236"
    },
    "551": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x231"
    },
    "554": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "555": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "557": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "560": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "561": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "562": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x548"
    },
    "565": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "566": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "567": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "STOP",
      "path": "16"
    },
    "568": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "569": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "570": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "DUP1",
      "path": "19"
    },
    "571": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "572": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x244"
    },
    "575": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "576": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "578": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "DUP1",
      "path": "19"
    },
    "579": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "REVERT",
      "path": "19"
    },
    "580": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x236"
    },
    "585": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x253"
    },
    "588": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "589": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "591": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBAF"
    },
    "594": {
      "fn": "AccessControlAdapter.connectAccessController",
      "jump": "i",
      "offset": [
        674,
        809
      ],
      "op": "JUMP",
      "path": "19"
    },
    "595": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "596": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        771
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 3,
      "value": "0x0"
    },
    "598": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "DUP1",
      "path": "19"
    },
    "599": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "606": {
      "op": "SHL"
    },
    "607": {
      "op": "SUB"
    },
    "608": {
      "op": "NOT"
    },
    "609": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "AND",
      "path": "19"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "op": "SUB"
    },
    "618": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "619": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "620": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "621": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "AND",
      "path": "19"
    },
    "622": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "623": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "624": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "625": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "OR",
      "path": "19"
    },
    "626": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "627": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "628": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMP",
      "path": "19"
    },
    "629": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "630": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "631": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "DUP1",
      "path": "19"
    },
    "632": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "633": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x281"
    },
    "636": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "637": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "639": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "DUP1",
      "path": "19"
    },
    "640": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "REVERT",
      "path": "19"
    },
    "641": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "642": {
      "op": "POP"
    },
    "643": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x164"
    },
    "646": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x290"
    },
    "649": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "650": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "652": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBE0"
    },
    "655": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        814,
        965
      ],
      "op": "JUMP",
      "path": "19"
    },
    "656": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "657": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CB"
    },
    "660": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        814,
        965
      ],
      "op": "JUMP",
      "path": "19"
    },
    "661": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "662": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "663": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "DUP1",
      "path": "16"
    },
    "664": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "665": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "668": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "669": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "671": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "DUP1",
      "path": "16"
    },
    "672": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "REVERT",
      "path": "16"
    },
    "673": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "678": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B0"
    },
    "681": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "682": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "684": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBAF"
    },
    "687": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3432,
        3557
      ],
      "op": "JUMP",
      "path": "16"
    },
    "688": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "695": {
      "op": "SHL"
    },
    "696": {
      "op": "SUB"
    },
    "697": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "AND",
      "path": "16",
      "statement": 4
    },
    "698": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3513
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "700": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "701": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "DUP2",
      "path": "16"
    },
    "702": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "703": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3541
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "705": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "707": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "708": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "711": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "712": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "713": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3532,
        3550
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "714": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3432,
        3557
      ],
      "op": "JUMP",
      "path": "16"
    },
    "715": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "716": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "717": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "DUP1",
      "path": "20"
    },
    "718": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "719": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D7"
    },
    "722": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "723": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "725": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "DUP1",
      "path": "20"
    },
    "726": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "REVERT",
      "path": "20"
    },
    "727": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "728": {
      "op": "POP"
    },
    "729": {
      "fn": "Context._msgData",
      "offset": [
        781,
        795
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "731": {
      "fn": "Context._msgData",
      "offset": [
        781,
        795
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "732": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "734": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "735": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13B"
    },
    "738": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "739": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "740": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "741": {
      "fn": "Context._msgData",
      "offset": [
        732,
        829
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCA2"
    },
    "744": {
      "fn": "Context._msgData",
      "jump": "i",
      "offset": [
        732,
        829
      ],
      "op": "JUMP",
      "path": "20"
    },
    "745": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "746": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "747": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "DUP1",
      "path": "16"
    },
    "748": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "749": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F5"
    },
    "752": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "753": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "755": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "DUP1",
      "path": "16"
    },
    "756": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "REVERT",
      "path": "16"
    },
    "757": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "758": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "POP",
      "path": "16"
    },
    "759": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x12E"
    },
    "762": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x646"
    },
    "765": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2408,
        2501
      ],
      "op": "JUMP",
      "path": "16"
    },
    "766": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "767": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "768": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "770": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30A"
    },
    "773": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "774": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "776": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "DUP1",
      "path": "16"
    },
    "777": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "REVERT",
      "path": "16"
    },
    "778": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "783": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x319"
    },
    "786": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "787": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "789": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "792": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "793": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "794": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x655"
    },
    "797": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "798": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "799": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "800": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "801": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "802": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x32A"
    },
    "805": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "806": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "808": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "DUP1",
      "path": "16"
    },
    "809": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "REVERT",
      "path": "16"
    },
    "810": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164"
    },
    "815": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x339"
    },
    "818": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "819": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "821": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB49"
    },
    "824": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "825": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "826": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6EE"
    },
    "829": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMP",
      "path": "16"
    },
    "830": {
      "offset": [
        348,
        386
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "831": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "832": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "DUP1",
      "path": "19"
    },
    "833": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "834": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34A"
    },
    "837": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "838": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "840": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "DUP1",
      "path": "19"
    },
    "841": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "REVERT",
      "path": "19"
    },
    "842": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "offset": [
        348,
        386
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "846": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "847": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x183"
    },
    "850": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "offset": [
        348,
        386
      ],
      "op": "AND",
      "path": "19"
    },
    "860": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "DUP2",
      "path": "19"
    },
    "861": {
      "fn": "ERC20.transfer",
      "offset": [
        348,
        386
      ],
      "op": "JUMP",
      "path": "19"
    },
    "862": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "863": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "864": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "DUP1",
      "path": "20"
    },
    "865": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "866": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36A"
    },
    "869": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "870": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "872": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "DUP1",
      "path": "20"
    },
    "873": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "REVERT",
      "path": "20"
    },
    "874": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "fn": "Context._txSender",
      "offset": [
        911,
        920
      ],
      "op": "ORIGIN",
      "path": "20",
      "statement": 5
    },
    "877": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x183"
    },
    "880": {
      "fn": "Context._txSender",
      "offset": [
        835,
        927
      ],
      "op": "JUMP",
      "path": "20"
    },
    "881": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "882": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "883": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "DUP1",
      "path": "16"
    },
    "884": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "885": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x37D"
    },
    "888": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "889": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "DUP1",
      "path": "16"
    },
    "892": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "REVERT",
      "path": "16"
    },
    "893": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "894": {
      "op": "POP"
    },
    "895": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AC"
    },
    "898": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38C"
    },
    "901": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "902": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "904": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD1"
    },
    "907": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3993,
        4142
      ],
      "op": "JUMP",
      "path": "16"
    },
    "908": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "915": {
      "op": "SHL"
    },
    "916": {
      "op": "SUB"
    },
    "917": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 6
    },
    "918": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "DUP3",
      "path": "16"
    },
    "919": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "AND",
      "path": "16"
    },
    "920": {
      "fn": "ERC20.allowance",
      "offset": [
        4082,
        4089
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "922": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "923": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "DUP2",
      "path": "16"
    },
    "924": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "925": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4119
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "927": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "929": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "930": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "DUP2",
      "path": "16"
    },
    "931": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "932": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "934": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "DUP1",
      "path": "16"
    },
    "935": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "DUP4",
      "path": "16"
    },
    "936": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4126
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "937": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "938": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "939": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "940": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "AND",
      "path": "16"
    },
    "941": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "DUP3",
      "path": "16"
    },
    "942": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "943": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "944": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "945": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "946": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "947": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "948": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "949": {
      "fn": "ERC20.allowance",
      "offset": [
        4108,
        4135
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "950": {
      "fn": "ERC20.allowance",
      "offset": [
        3993,
        4142
      ],
      "op": "JUMP",
      "path": "16"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2251,
        2264
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2283,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 7,
      "value": "0x4"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C6"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCFB"
    },
    "965": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "971": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "973": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DIV",
      "path": "16"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MUL",
      "path": "16"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "983": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "984": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP2",
      "path": "16"
    },
    "985": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "986": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "988": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "991": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "992": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "993": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP2",
      "path": "16"
    },
    "994": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP2",
      "path": "16"
    },
    "995": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "996": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "998": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "999": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1000": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1002": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F2"
    },
    "1005": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1006": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCFB"
    },
    "1009": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1010": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1011": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1012": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1013": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43F"
    },
    "1016": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1017": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1018": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1020": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "LT",
      "path": "16"
    },
    "1021": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x414"
    },
    "1024": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1025": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1028": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1029": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1030": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1031": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DIV",
      "path": "16"
    },
    "1032": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MUL",
      "path": "16"
    },
    "1033": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1034": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1035": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1036": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1038": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "1039": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1040": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x43F"
    },
    "1043": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1044": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1045": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1046": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "1047": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1048": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1049": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1051": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1052": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1054": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1056": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1057": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1058": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1059": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1060": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1061": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1062": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1063": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1064": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1066": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "1067": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1068": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1070": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "1071": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1072": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1073": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "GT",
      "path": "16"
    },
    "1074": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x422"
    },
    "1077": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1078": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1079": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1080": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SUB",
      "path": "16"
    },
    "1081": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1083": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "AND",
      "path": "16"
    },
    "1084": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1085": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "ADD",
      "path": "16"
    },
    "1086": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1087": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1088": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "POP",
      "path": "16"
    },
    "1089": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "POP",
      "path": "16"
    },
    "1090": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "POP",
      "path": "16"
    },
    "1091": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "POP",
      "path": "16"
    },
    "1092": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "POP",
      "path": "16"
    },
    "1093": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1094": {
      "fn": "ERC20.name",
      "offset": [
        2276,
        2288
      ],
      "op": "POP",
      "path": "16"
    },
    "1095": {
      "fn": "ERC20.name",
      "offset": [
        2205,
        2295
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1096": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1097": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1098": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4367
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1100": {
      "fn": "ERC20.approve",
      "offset": [
        4379,
        4418
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 8,
      "value": "0x456"
    },
    "1103": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1104": {
      "fn": "ERC20.approve",
      "offset": [
        4402,
        4409
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1105": {
      "fn": "ERC20.approve",
      "offset": [
        4411,
        4417
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1106": {
      "fn": "ERC20.approve",
      "offset": [
        4379,
        4387
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "1109": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4379,
        4418
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1110": {
      "fn": "ERC20.approve",
      "offset": [
        4379,
        4418
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1111": {
      "op": "POP"
    },
    "1112": {
      "fn": "ERC20.approve",
      "offset": [
        4435,
        4439
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 9,
      "value": "0x1"
    },
    "1114": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1115": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1116": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "POP",
      "path": "16"
    },
    "1117": {
      "fn": "ERC20.approve",
      "offset": [
        4280,
        4446
      ],
      "op": "POP",
      "path": "16"
    },
    "1118": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4280,
        4446
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "op": "SUB"
    },
    "1128": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "AND",
      "path": "16"
    },
    "1130": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5049,
        5053
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1132": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5103
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1142": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1146": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5111
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1147": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5092,
        5125
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5143,
        5169
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 10
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5143,
        5169
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1158": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5143,
        5169
      ],
      "op": "LT",
      "path": "16"
    },
    "1159": {
      "branch": 36,
      "fn": "ERC20.transferFrom",
      "offset": [
        5143,
        5169
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1160": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E9"
    },
    "1163": {
      "branch": 36,
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1178": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "ADD",
      "path": "16"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1225": {
      "op": "DUP3"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1242": {
      "op": "DUP3"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "MSTORE"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1249": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "SUB",
      "path": "16"
    },
    "1255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1256": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "1257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5135,
        5214
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5269
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 11,
      "value": "0x4F4"
    },
    "1261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5243,
        5249
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1262": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5251,
        5260
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1263": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5262,
        5268
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5242
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81F"
    },
    "1267": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5233,
        5269
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5233,
        5269
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5312,
        5369
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 12,
      "value": "0x501"
    },
    "1272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5327
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1273": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5362,
        5368
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5343,
        5359
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1276": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5343,
        5368
      ],
      "op": "SUB",
      "path": "16"
    },
    "1277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5312,
        5320
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "1280": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5312,
        5369
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5312,
        5369
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1282": {
      "op": "POP"
    },
    "1283": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5397,
        5401
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 13,
      "value": "0x1"
    },
    "1285": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5397,
        5401
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1286": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4913,
        5408
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "op": "POP"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4913,
        5408
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5803,
        6015
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1293": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1294": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5891,
        5895
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1296": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 14
    },
    "1297": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5950
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1303": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1304": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1308": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1309": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1310": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5964
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1320": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "AND",
      "path": "16"
    },
    "1321": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1322": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1323": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1325": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1326": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1327": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1328": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5973
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1329": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5891,
        5895
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5891,
        5895
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5907,
        5987
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x456"
    },
    "1334": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5907,
        5987
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1335": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5930,
        5937
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1336": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5930,
        5937
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1337": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x543"
    },
    "1340": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5986
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1341": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5976,
        5986
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1342": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5976,
        5986
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1343": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5986
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD35"
    },
    "1346": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5939,
        5986
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1347": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5939,
        5986
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1348": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5907,
        5915
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "1351": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5907,
        5987
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1352": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1353": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1354": {
      "offset": [
        588,
        613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x570"
    },
    "1357": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1359": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1360": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1361": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1363": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "1364": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1366": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1367": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1368": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1370": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1371": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1372": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1374": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "1375": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "offset": [
        588,
        613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1385": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1386": {
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "POP",
      "path": "19"
    },
    "1387": {
      "offset": [
        605,
        612
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1388": {
      "offset": [
        588,
        595
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CB"
    },
    "1391": {
      "jump": "i",
      "offset": [
        588,
        613
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1392": {
      "branch": 44,
      "fn": "Context._msgSender",
      "offset": [
        588,
        613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1393": {
      "offset": [
        580,
        646
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5BC"
    },
    "1396": {
      "branch": 44,
      "offset": [
        580,
        646
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1397": {
      "fn": "Context._msgSender",
      "offset": [
        580,
        646
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1399": {
      "fn": "Context._msgSender",
      "offset": [
        580,
        646
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "offset": [
        580,
        646
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1408": {
      "fn": "Context._msgSender",
      "offset": [
        580,
        646
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1411": {
      "offset": [
        580,
        646
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1413": {
      "fn": "Context._msgSender",
      "offset": [
        580,
        646
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1414": {
      "fn": "Context._msgSender",
      "offset": [
        580,
        646
      ],
      "op": "ADD",
      "path": "19"
    },
    "1415": {
      "op": "MSTORE"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1420": {
      "op": "DUP3"
    },
    "1421": {
      "op": "ADD"
    },
    "1422": {
      "op": "MSTORE"
    },
    "1423": {
      "op": "PUSH32",
      "value": "0x746865206163636F756E74206973206E6F74207468652061646D696E00000000"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "offset": [
        580,
        646
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E0"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "offset": [
        580,
        646
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1469": {
      "fn": "ERC20.mint",
      "offset": [
        8478,
        8500
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 15,
      "value": "0x5C6"
    },
    "1472": {
      "fn": "ERC20.mint",
      "offset": [
        8484,
        8491
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1473": {
      "fn": "ERC20.mint",
      "offset": [
        8493,
        8499
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1474": {
      "fn": "ERC20.mint",
      "offset": [
        8478,
        8483
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9EE"
    },
    "1477": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [
        8478,
        8500
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1478": {
      "fn": "ERC20.mint",
      "offset": [
        8478,
        8500
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1479": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "POP",
      "path": "16"
    },
    "1480": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "POP",
      "path": "16"
    },
    "1481": {
      "fn": "ERC20.mint",
      "offset": [
        8373,
        8507
      ],
      "op": "POP",
      "path": "16"
    },
    "1482": {
      "fn": "ERC20.mint",
      "jump": "o",
      "offset": [
        8373,
        8507
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1483": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1484": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        897,
        901
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1486": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 16
    },
    "1487": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1488": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1490": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1491": {
      "op": "PUSH4",
      "value": "0x6C9CD097"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1500": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1510": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1511": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "AND",
      "path": "19"
    },
    "1512": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1513": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        943
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6C9CD097"
    },
    "1518": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        943
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1519": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5FE"
    },
    "1522": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1523": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        944,
        948
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1524": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        944,
        948
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1525": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        950,
        957
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1526": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        950,
        957
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1527": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1529": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1530": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD5B"
    },
    "1533": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        919,
        958
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1534": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1535": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1537": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1539": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1540": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1541": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1542": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SUB",
      "path": "19"
    },
    "1543": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1544": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1545": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "GAS",
      "path": "19"
    },
    "1546": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1547": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1548": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1549": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1550": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x61B"
    },
    "1553": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1554": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1555": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1557": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1558": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "1559": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1560": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1562": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1563": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1564": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "1565": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "1566": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "1567": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "1568": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1570": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1571": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1572": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1574": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "NOT",
      "path": "19"
    },
    "1575": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1577": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1578": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1579": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "AND",
      "path": "19"
    },
    "1580": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1581": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1582": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1583": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1585": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1586": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "1587": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1588": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1589": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1590": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x63F"
    },
    "1593": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1594": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1595": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD85"
    },
    "1598": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        919,
        958
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1599": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1600": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        912,
        958
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1601": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1602": {
      "op": "POP"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "op": "POP"
    },
    "1605": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "o",
      "offset": [
        814,
        965
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1606": {
      "fn": "ERC20.symbol",
      "offset": [
        2408,
        2501
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1607": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2468
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1609": {
      "fn": "ERC20.symbol",
      "offset": [
        2487,
        2494
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 17,
      "value": "0x5"
    },
    "1611": {
      "fn": "ERC20.symbol",
      "offset": [
        2480,
        2494
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1612": {
      "fn": "ERC20.symbol",
      "offset": [
        2480,
        2494
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1613": {
      "fn": "ERC20.symbol",
      "offset": [
        2480,
        2494
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C6"
    },
    "1616": {
      "fn": "ERC20.symbol",
      "offset": [
        2480,
        2494
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1617": {
      "fn": "ERC20.symbol",
      "offset": [
        2480,
        2494
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCFB"
    },
    "1620": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2480,
        2494
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1621": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1622": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1623": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6595,
        6599
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1625": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1626": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1627": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6649
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "1630": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1633": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1634": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1635": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1637": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1638": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1639": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6663
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1649": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "AND",
      "path": "16"
    },
    "1650": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1651": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1652": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1653": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1654": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1655": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1656": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1657": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6638,
        6672
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1658": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6690,
        6725
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 18
    },
    "1659": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6690,
        6725
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1660": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6690,
        6725
      ],
      "op": "LT",
      "path": "16"
    },
    "1661": {
      "branch": 37,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6690,
        6725
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1662": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6D7"
    },
    "1665": {
      "branch": 37,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1666": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1668": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1677": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1683": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "ADD",
      "path": "16"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1727": {
      "op": "DUP3"
    },
    "1728": {
      "op": "ADD"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1741": {
      "op": "DUP3"
    },
    "1742": {
      "op": "ADD"
    },
    "1743": {
      "op": "MSTORE"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "1750": {
      "op": "JUMP"
    },
    "1751": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6767
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1752": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6868
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 19,
      "value": "0x6E4"
    },
    "1755": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1756": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6824,
        6831
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1757": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6852,
        6867
      ],
      "op": "DUP6",
      "path": "16"
    },
    "1758": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6833,
        6849
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1759": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6833,
        6867
      ],
      "op": "SUB",
      "path": "16"
    },
    "1760": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6809
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6FB"
    },
    "1763": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6801,
        6868
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1764": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6801,
        6868
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6896,
        6900
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 20,
      "value": "0x1"
    },
    "1768": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6896,
        6900
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1769": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6502,
        6907
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6502,
        6907
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1774": {
      "fn": "ERC20.transfer",
      "offset": [
        3760,
        3932
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1775": {
      "fn": "ERC20.transfer",
      "offset": [
        3846,
        3850
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1777": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3904
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 21,
      "value": "0x456"
    },
    "1780": {
      "fn": "Context._msgSender",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "20"
    },
    "1781": {
      "fn": "ERC20.transfer",
      "offset": [
        3886,
        3895
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1782": {
      "fn": "ERC20.transfer",
      "offset": [
        3897,
        3903
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1783": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81F"
    },
    "1786": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3904
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1787": {
      "fn": "ERC20._approve",
      "offset": [
        10221,
        10591
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "SUB"
    },
    "1796": {
      "fn": "ERC20._approve",
      "offset": [
        10352,
        10371
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 22
    },
    "1797": {
      "branch": 38,
      "fn": "ERC20._approve",
      "offset": [
        10352,
        10371
      ],
      "op": "AND",
      "path": "16"
    },
    "1798": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x75D"
    },
    "1801": {
      "branch": 38,
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1802": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1804": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1813": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1816": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1818": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1819": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "ADD",
      "path": "16"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1823": {
      "op": "DUP1"
    },
    "1824": {
      "op": "DUP3"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "op": "MSTORE"
    },
    "1827": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1862": {
      "op": "DUP3"
    },
    "1863": {
      "op": "ADD"
    },
    "1864": {
      "op": "MSTORE"
    },
    "1865": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1872": {
      "op": "SHL"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1875": {
      "op": "DUP3"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "1884": {
      "op": "JUMP"
    },
    "1885": {
      "fn": "ERC20._approve",
      "offset": [
        10344,
        10412
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "fn": "ERC20._approve",
      "offset": [
        10430,
        10451
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 23
    },
    "1895": {
      "branch": 39,
      "fn": "ERC20._approve",
      "offset": [
        10430,
        10451
      ],
      "op": "AND",
      "path": "16"
    },
    "1896": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7BE"
    },
    "1899": {
      "branch": 39,
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1900": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1902": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1911": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1914": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1916": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1917": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "ADD",
      "path": "16"
    },
    "1918": {
      "op": "MSTORE"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1923": {
      "op": "DUP3"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "op": "MSTORE"
    },
    "1926": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1972": {
      "op": "DUP3"
    },
    "1973": {
      "op": "ADD"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "1981": {
      "op": "JUMP"
    },
    "1982": {
      "fn": "ERC20._approve",
      "offset": [
        10422,
        10490
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 24
    },
    "1992": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1993": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "AND",
      "path": "16"
    },
    "1994": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1996": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1997": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1998": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1999": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10512
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "2001": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2003": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2004": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2005": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2006": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2008": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2009": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2010": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10519
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2011": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2012": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2013": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "AND",
      "path": "16"
    },
    "2014": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2015": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2016": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2017": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2018": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2019": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2020": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2021": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2022": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2023": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10528
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2024": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10537
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2025": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10537
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2026": {
      "fn": "ERC20._approve",
      "offset": [
        10501,
        10537
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2027": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 25
    },
    "2028": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2029": {
      "op": "DUP5"
    },
    "2030": {
      "op": "DUP2"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2065": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2070": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2071": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2072": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "SUB",
      "path": "16"
    },
    "2073": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2074": {
      "fn": "ERC20._approve",
      "offset": [
        10552,
        10584
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2075": {
      "fn": "ERC20._approve",
      "offset": [
        10221,
        10591
      ],
      "op": "POP",
      "path": "16"
    },
    "2076": {
      "fn": "ERC20._approve",
      "offset": [
        10221,
        10591
      ],
      "op": "POP",
      "path": "16"
    },
    "2077": {
      "fn": "ERC20._approve",
      "offset": [
        10221,
        10591
      ],
      "op": "POP",
      "path": "16"
    },
    "2078": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10221,
        10591
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2079": {
      "fn": "ERC20._transfer",
      "offset": [
        7381,
        8096
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "SUB"
    },
    "2088": {
      "fn": "ERC20._transfer",
      "offset": [
        7516,
        7536
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 26
    },
    "2089": {
      "branch": 40,
      "fn": "ERC20._transfer",
      "offset": [
        7516,
        7536
      ],
      "op": "AND",
      "path": "16"
    },
    "2090": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x883"
    },
    "2093": {
      "branch": 40,
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2094": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2096": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2097": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2103": {
      "op": "SHL"
    },
    "2104": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2105": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2108": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2110": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2111": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "ADD",
      "path": "16"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2117": {
      "op": "DUP3"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2169": {
      "op": "DUP3"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "op": "MSTORE"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "2178": {
      "op": "JUMP"
    },
    "2179": {
      "fn": "ERC20._transfer",
      "offset": [
        7508,
        7578
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "ERC20._transfer",
      "offset": [
        7596,
        7619
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 27
    },
    "2189": {
      "branch": 41,
      "fn": "ERC20._transfer",
      "offset": [
        7596,
        7619
      ],
      "op": "AND",
      "path": "16"
    },
    "2190": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8E5"
    },
    "2193": {
      "branch": 41,
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2194": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2196": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2205": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2208": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2210": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2211": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "ADD",
      "path": "16"
    },
    "2212": {
      "op": "MSTORE"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2217": {
      "op": "DUP3"
    },
    "2218": {
      "op": "ADD"
    },
    "2219": {
      "op": "MSTORE"
    },
    "2220": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "2276": {
      "op": "JUMP"
    },
    "2277": {
      "fn": "ERC20._transfer",
      "offset": [
        7588,
        7659
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "SUB"
    },
    "2286": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2287": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "AND",
      "path": "16"
    },
    "2288": {
      "fn": "ERC20._transfer",
      "offset": [
        7729,
        7750
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2290": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2291": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2292": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2293": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2295": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2297": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2298": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2300": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2301": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2302": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7770
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2303": {
      "fn": "ERC20._transfer",
      "offset": [
        7789,
        7812
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 28
    },
    "2304": {
      "fn": "ERC20._transfer",
      "offset": [
        7789,
        7812
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2305": {
      "fn": "ERC20._transfer",
      "offset": [
        7789,
        7812
      ],
      "op": "LT",
      "path": "16"
    },
    "2306": {
      "branch": 42,
      "fn": "ERC20._transfer",
      "offset": [
        7789,
        7812
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2307": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x95D"
    },
    "2310": {
      "branch": 42,
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2311": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2313": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2322": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2325": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2327": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2328": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "ADD",
      "path": "16"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2334": {
      "op": "DUP3"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "MSTORE"
    },
    "2337": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2384": {
      "op": "SHL"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2387": {
      "op": "DUP3"
    },
    "2388": {
      "op": "ADD"
    },
    "2389": {
      "op": "MSTORE"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "2396": {
      "op": "JUMP"
    },
    "2397": {
      "fn": "ERC20._transfer",
      "offset": [
        7781,
        7855
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "op": "SUB"
    },
    "2406": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 29
    },
    "2407": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2408": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "AND",
      "path": "16"
    },
    "2409": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2411": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2412": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2413": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2414": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7898
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2416": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2418": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2419": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2421": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2422": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2423": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2424": {
      "fn": "ERC20._transfer",
      "offset": [
        7909,
        7931
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2425": {
      "fn": "ERC20._transfer",
      "offset": [
        7909,
        7931
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2426": {
      "fn": "ERC20._transfer",
      "offset": [
        7909,
        7931
      ],
      "op": "SUB",
      "path": "16"
    },
    "2427": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2428": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7931
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2429": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 30
    },
    "2430": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2431": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "AND",
      "path": "16"
    },
    "2432": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2433": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2434": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2435": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2436": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7971
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2437": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2438": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2439": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7931
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2440": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7931
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2441": {
      "fn": "ERC20._transfer",
      "offset": [
        7889,
        7906
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2442": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x994"
    },
    "2445": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2446": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7931
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2447": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7931
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2448": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD35"
    },
    "2451": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7951,
        7981
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2452": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2453": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2454": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "POP",
      "path": "16"
    },
    "2455": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "POP",
      "path": "16"
    },
    "2456": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2457": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2458": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2459": {
      "fn": "ERC20._transfer",
      "offset": [
        7951,
        7981
      ],
      "op": "POP",
      "path": "16"
    },
    "2460": {
      "fn": "ERC20._transfer",
      "offset": [
        8014,
        8023
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 31
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "AND",
      "path": "16"
    },
    "2470": {
      "fn": "ERC20._transfer",
      "offset": [
        8006,
        8012
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2477": {
      "op": "SHL"
    },
    "2478": {
      "op": "SUB"
    },
    "2479": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "AND",
      "path": "16"
    },
    "2480": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2513": {
      "fn": "ERC20._transfer",
      "offset": [
        8025,
        8031
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2514": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2516": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2517": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9E0"
    },
    "2520": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2521": {
      "op": "DUP2"
    },
    "2522": {
      "op": "MSTORE"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2525": {
      "op": "ADD"
    },
    "2526": {
      "op": "SWAP1"
    },
    "2527": {
      "op": "JUMP"
    },
    "2528": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2529": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2531": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2532": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2533": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2534": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "SUB",
      "path": "16"
    },
    "2535": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2536": {
      "fn": "ERC20._transfer",
      "offset": [
        7997,
        8032
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2537": {
      "fn": "ERC20._transfer",
      "offset": [
        7498,
        8096
      ],
      "op": "POP",
      "path": "16"
    },
    "2538": {
      "fn": "ERC20._transfer",
      "offset": [
        7381,
        8096
      ],
      "op": "POP",
      "path": "16"
    },
    "2539": {
      "fn": "ERC20._transfer",
      "offset": [
        7381,
        8096
      ],
      "op": "POP",
      "path": "16"
    },
    "2540": {
      "fn": "ERC20._transfer",
      "offset": [
        7381,
        8096
      ],
      "op": "POP",
      "path": "16"
    },
    "2541": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7381,
        8096
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2542": {
      "fn": "ERC20._mint",
      "offset": [
        8513,
        8902
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2549": {
      "op": "SHL"
    },
    "2550": {
      "op": "SUB"
    },
    "2551": {
      "fn": "ERC20._mint",
      "offset": [
        8596,
        8617
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 32
    },
    "2552": {
      "branch": 43,
      "fn": "ERC20._mint",
      "offset": [
        8596,
        8617
      ],
      "op": "AND",
      "path": "16"
    },
    "2553": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA44"
    },
    "2556": {
      "branch": 43,
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2557": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2559": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2566": {
      "op": "SHL"
    },
    "2567": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2568": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2571": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2573": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2574": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "ADD",
      "path": "16"
    },
    "2575": {
      "op": "MSTORE"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2580": {
      "op": "DUP3"
    },
    "2581": {
      "op": "ADD"
    },
    "2582": {
      "op": "MSTORE"
    },
    "2583": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2618": {
      "op": "DUP3"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4E0"
    },
    "2627": {
      "op": "JUMP"
    },
    "2628": {
      "fn": "ERC20._mint",
      "offset": [
        8588,
        8653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2629": {
      "fn": "ERC20._mint",
      "offset": [
        8740,
        8746
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 33
    },
    "2630": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8736
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2632": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8736
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2634": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2635": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2636": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2637": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA56"
    },
    "2640": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2641": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2642": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD35"
    },
    "2645": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8724,
        8746
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2646": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2647": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2648": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2649": {
      "fn": "ERC20._mint",
      "offset": [
        8724,
        8746
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "op": "SUB"
    },
    "2660": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 34
    },
    "2661": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "AND",
      "path": "16"
    },
    "2662": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2664": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2665": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2666": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2667": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8765
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2669": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2671": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2672": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2674": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2675": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2676": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2677": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2678": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8784
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2679": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8784
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2680": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2681": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA83"
    },
    "2684": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2685": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8784
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2686": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8784
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2687": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD35"
    },
    "2690": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8756,
        8784
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2691": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2692": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2693": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2694": {
      "fn": "ERC20._mint",
      "offset": [
        8756,
        8784
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2695": {
      "op": "POP"
    },
    "2696": {
      "op": "POP"
    },
    "2697": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 35,
      "value": "0x40"
    },
    "2699": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2700": {
      "op": "DUP2"
    },
    "2701": {
      "op": "DUP2"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2709": {
      "op": "SHL"
    },
    "2710": {
      "op": "SUB"
    },
    "2711": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2712": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "AND",
      "path": "16"
    },
    "2713": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2714": {
      "fn": "ERC20._mint",
      "offset": [
        8816,
        8817
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2716": {
      "fn": "ERC20._mint",
      "offset": [
        8816,
        8817
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2717": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2750": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2753": {
      "op": "ADD"
    },
    "2754": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2756": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2757": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2758": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2759": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "SUB",
      "path": "16"
    },
    "2760": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2761": {
      "fn": "ERC20._mint",
      "offset": [
        8799,
        8836
      ],
      "op": "LOG3",
      "path": "16"
    },
    "2762": {
      "fn": "ERC20._mint",
      "offset": [
        8513,
        8902
      ],
      "op": "POP",
      "path": "16"
    },
    "2763": {
      "fn": "ERC20._mint",
      "offset": [
        8513,
        8902
      ],
      "op": "POP",
      "path": "16"
    },
    "2764": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8513,
        8902
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2765": {
      "op": "JUMPDEST"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2768": {
      "op": "DUP2"
    },
    "2769": {
      "op": "MLOAD"
    },
    "2770": {
      "op": "DUP1"
    },
    "2771": {
      "op": "DUP5"
    },
    "2772": {
      "op": "MSTORE"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2775": {
      "op": "JUMPDEST"
    },
    "2776": {
      "op": "DUP2"
    },
    "2777": {
      "op": "DUP2"
    },
    "2778": {
      "op": "LT"
    },
    "2779": {
      "op": "ISZERO"
    },
    "2780": {
      "op": "PUSH2",
      "value": "0xAF3"
    },
    "2783": {
      "op": "JUMPI"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2786": {
      "op": "DUP2"
    },
    "2787": {
      "op": "DUP6"
    },
    "2788": {
      "op": "ADD"
    },
    "2789": {
      "op": "DUP2"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "MLOAD"
    },
    "2792": {
      "op": "DUP7"
    },
    "2793": {
      "op": "DUP4"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "DUP3"
    },
    "2796": {
      "op": "ADD"
    },
    "2797": {
      "op": "MSTORE"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "PUSH2",
      "value": "0xAD7"
    },
    "2802": {
      "op": "JUMP"
    },
    "2803": {
      "op": "JUMPDEST"
    },
    "2804": {
      "op": "DUP2"
    },
    "2805": {
      "op": "DUP2"
    },
    "2806": {
      "op": "GT"
    },
    "2807": {
      "op": "ISZERO"
    },
    "2808": {
      "op": "PUSH2",
      "value": "0xB05"
    },
    "2811": {
      "op": "JUMPI"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2816": {
      "op": "DUP4"
    },
    "2817": {
      "op": "DUP8"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "op": "ADD"
    },
    "2820": {
      "op": "MSTORE"
    },
    "2821": {
      "op": "JUMPDEST"
    },
    "2822": {
      "op": "POP"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2828": {
      "op": "NOT"
    },
    "2829": {
      "op": "AND"
    },
    "2830": {
      "op": "SWAP3"
    },
    "2831": {
      "op": "SWAP1"
    },
    "2832": {
      "op": "SWAP3"
    },
    "2833": {
      "op": "ADD"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2836": {
      "op": "ADD"
    },
    "2837": {
      "op": "SWAP3"
    },
    "2838": {
      "op": "SWAP2"
    },
    "2839": {
      "op": "POP"
    },
    "2840": {
      "op": "POP"
    },
    "2841": {
      "jump": "o",
      "op": "JUMP"
    },
    "2842": {
      "op": "JUMPDEST"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2845": {
      "op": "DUP2"
    },
    "2846": {
      "op": "MSTORE"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2849": {
      "op": "PUSH2",
      "value": "0x63F"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2854": {
      "op": "DUP4"
    },
    "2855": {
      "op": "ADD"
    },
    "2856": {
      "op": "DUP5"
    },
    "2857": {
      "op": "PUSH2",
      "value": "0xACD"
    },
    "2860": {
      "jump": "i",
      "op": "JUMP"
    },
    "2861": {
      "op": "JUMPDEST"
    },
    "2862": {
      "op": "DUP1"
    },
    "2863": {
      "op": "CALLDATALOAD"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "op": "SUB"
    },
    "2872": {
      "op": "DUP2"
    },
    "2873": {
      "op": "AND"
    },
    "2874": {
      "op": "DUP2"
    },
    "2875": {
      "op": "EQ"
    },
    "2876": {
      "op": "PUSH2",
      "value": "0xB44"
    },
    "2879": {
      "op": "JUMPI"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2882": {
      "op": "DUP1"
    },
    "2883": {
      "op": "REVERT"
    },
    "2884": {
      "op": "JUMPDEST"
    },
    "2885": {
      "op": "SWAP2"
    },
    "2886": {
      "op": "SWAP1"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "jump": "o",
      "op": "JUMP"
    },
    "2889": {
      "op": "JUMPDEST"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2892": {
      "op": "DUP1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2895": {
      "op": "DUP4"
    },
    "2896": {
      "op": "DUP6"
    },
    "2897": {
      "op": "SUB"
    },
    "2898": {
      "op": "SLT"
    },
    "2899": {
      "op": "ISZERO"
    },
    "2900": {
      "op": "PUSH2",
      "value": "0xB5C"
    },
    "2903": {
      "op": "JUMPI"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2906": {
      "op": "DUP1"
    },
    "2907": {
      "op": "REVERT"
    },
    "2908": {
      "op": "JUMPDEST"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0xB65"
    },
    "2912": {
      "op": "DUP4"
    },
    "2913": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "2916": {
      "jump": "i",
      "op": "JUMP"
    },
    "2917": {
      "op": "JUMPDEST"
    },
    "2918": {
      "op": "SWAP5"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2921": {
      "op": "SWAP4"
    },
    "2922": {
      "op": "SWAP1"
    },
    "2923": {
      "op": "SWAP4"
    },
    "2924": {
      "op": "ADD"
    },
    "2925": {
      "op": "CALLDATALOAD"
    },
    "2926": {
      "op": "SWAP4"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "op": "POP"
    },
    "2929": {
      "op": "POP"
    },
    "2930": {
      "jump": "o",
      "op": "JUMP"
    },
    "2931": {
      "op": "JUMPDEST"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "DUP1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2939": {
      "op": "DUP5"
    },
    "2940": {
      "op": "DUP7"
    },
    "2941": {
      "op": "SUB"
    },
    "2942": {
      "op": "SLT"
    },
    "2943": {
      "op": "ISZERO"
    },
    "2944": {
      "op": "PUSH2",
      "value": "0xB88"
    },
    "2947": {
      "op": "JUMPI"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "REVERT"
    },
    "2952": {
      "op": "JUMPDEST"
    },
    "2953": {
      "op": "PUSH2",
      "value": "0xB91"
    },
    "2956": {
      "op": "DUP5"
    },
    "2957": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "2960": {
      "jump": "i",
      "op": "JUMP"
    },
    "2961": {
      "op": "JUMPDEST"
    },
    "2962": {
      "op": "SWAP3"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "op": "PUSH2",
      "value": "0xB9F"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2969": {
      "op": "DUP6"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "2974": {
      "jump": "i",
      "op": "JUMP"
    },
    "2975": {
      "op": "JUMPDEST"
    },
    "2976": {
      "op": "SWAP2"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2980": {
      "op": "DUP5"
    },
    "2981": {
      "op": "ADD"
    },
    "2982": {
      "op": "CALLDATALOAD"
    },
    "2983": {
      "op": "SWAP1"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "op": "SWAP3"
    },
    "2986": {
      "op": "POP"
    },
    "2987": {
      "op": "SWAP3"
    },
    "2988": {
      "op": "POP"
    },
    "2989": {
      "op": "SWAP3"
    },
    "2990": {
      "jump": "o",
      "op": "JUMP"
    },
    "2991": {
      "op": "JUMPDEST"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2996": {
      "op": "DUP3"
    },
    "2997": {
      "op": "DUP5"
    },
    "2998": {
      "op": "SUB"
    },
    "2999": {
      "op": "SLT"
    },
    "3000": {
      "op": "ISZERO"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0xBC1"
    },
    "3004": {
      "op": "JUMPI"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3007": {
      "op": "DUP1"
    },
    "3008": {
      "op": "REVERT"
    },
    "3009": {
      "op": "JUMPDEST"
    },
    "3010": {
      "op": "PUSH2",
      "value": "0x63F"
    },
    "3013": {
      "op": "DUP3"
    },
    "3014": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "3017": {
      "jump": "i",
      "op": "JUMP"
    },
    "3018": {
      "op": "JUMPDEST"
    },
    "3019": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3026": {
      "op": "SHL"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3034": {
      "op": "MSTORE"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3039": {
      "op": "REVERT"
    },
    "3040": {
      "op": "JUMPDEST"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3043": {
      "op": "DUP1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3046": {
      "op": "DUP4"
    },
    "3047": {
      "op": "DUP6"
    },
    "3048": {
      "op": "SUB"
    },
    "3049": {
      "op": "SLT"
    },
    "3050": {
      "op": "ISZERO"
    },
    "3051": {
      "op": "PUSH2",
      "value": "0xBF3"
    },
    "3054": {
      "op": "JUMPI"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3057": {
      "op": "DUP1"
    },
    "3058": {
      "op": "REVERT"
    },
    "3059": {
      "op": "JUMPDEST"
    },
    "3060": {
      "op": "DUP3"
    },
    "3061": {
      "op": "CALLDATALOAD"
    },
    "3062": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3071": {
      "op": "DUP1"
    },
    "3072": {
      "op": "DUP3"
    },
    "3073": {
      "op": "GT"
    },
    "3074": {
      "op": "ISZERO"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0xC0B"
    },
    "3078": {
      "op": "JUMPI"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3081": {
      "op": "DUP1"
    },
    "3082": {
      "op": "REVERT"
    },
    "3083": {
      "op": "JUMPDEST"
    },
    "3084": {
      "op": "DUP2"
    },
    "3085": {
      "op": "DUP6"
    },
    "3086": {
      "op": "ADD"
    },
    "3087": {
      "op": "SWAP2"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "op": "DUP6"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3092": {
      "op": "DUP4"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "SLT"
    },
    "3095": {
      "op": "PUSH2",
      "value": "0xC1F"
    },
    "3098": {
      "op": "JUMPI"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3101": {
      "op": "DUP1"
    },
    "3102": {
      "op": "REVERT"
    },
    "3103": {
      "op": "JUMPDEST"
    },
    "3104": {
      "op": "DUP2"
    },
    "3105": {
      "op": "CALLDATALOAD"
    },
    "3106": {
      "op": "DUP2"
    },
    "3107": {
      "op": "DUP2"
    },
    "3108": {
      "op": "GT"
    },
    "3109": {
      "op": "ISZERO"
    },
    "3110": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3113": {
      "op": "JUMPI"
    },
    "3114": {
      "op": "PUSH2",
      "value": "0xC31"
    },
    "3117": {
      "op": "PUSH2",
      "value": "0xBCA"
    },
    "3120": {
      "jump": "i",
      "op": "JUMP"
    },
    "3121": {
      "op": "JUMPDEST"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3124": {
      "op": "MLOAD"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3127": {
      "op": "DUP3"
    },
    "3128": {
      "op": "ADD"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3131": {
      "op": "NOT"
    },
    "3132": {
      "op": "SWAP1"
    },
    "3133": {
      "op": "DUP2"
    },
    "3134": {
      "op": "AND"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3137": {
      "op": "ADD"
    },
    "3138": {
      "op": "AND"
    },
    "3139": {
      "op": "DUP2"
    },
    "3140": {
      "op": "ADD"
    },
    "3141": {
      "op": "SWAP1"
    },
    "3142": {
      "op": "DUP4"
    },
    "3143": {
      "op": "DUP3"
    },
    "3144": {
      "op": "GT"
    },
    "3145": {
      "op": "DUP2"
    },
    "3146": {
      "op": "DUP4"
    },
    "3147": {
      "op": "LT"
    },
    "3148": {
      "op": "OR"
    },
    "3149": {
      "op": "ISZERO"
    },
    "3150": {
      "op": "PUSH2",
      "value": "0xC59"
    },
    "3153": {
      "op": "JUMPI"
    },
    "3154": {
      "op": "PUSH2",
      "value": "0xC59"
    },
    "3157": {
      "op": "PUSH2",
      "value": "0xBCA"
    },
    "3160": {
      "jump": "i",
      "op": "JUMP"
    },
    "3161": {
      "op": "JUMPDEST"
    },
    "3162": {
      "op": "DUP2"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "DUP2"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "DUP9"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3172": {
      "op": "DUP5"
    },
    "3173": {
      "op": "DUP8"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "op": "ADD"
    },
    "3176": {
      "op": "GT"
    },
    "3177": {
      "op": "ISZERO"
    },
    "3178": {
      "op": "PUSH2",
      "value": "0xC72"
    },
    "3181": {
      "op": "JUMPI"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3184": {
      "op": "DUP1"
    },
    "3185": {
      "op": "REVERT"
    },
    "3186": {
      "op": "JUMPDEST"
    },
    "3187": {
      "op": "DUP3"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3190": {
      "op": "DUP7"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3194": {
      "op": "DUP4"
    },
    "3195": {
      "op": "ADD"
    },
    "3196": {
      "op": "CALLDATACOPY"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3201": {
      "op": "DUP5"
    },
    "3202": {
      "op": "DUP4"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "op": "MSTORE"
    },
    "3206": {
      "op": "DUP1"
    },
    "3207": {
      "op": "SWAP7"
    },
    "3208": {
      "op": "POP"
    },
    "3209": {
      "op": "POP"
    },
    "3210": {
      "op": "POP"
    },
    "3211": {
      "op": "POP"
    },
    "3212": {
      "op": "POP"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3219": {
      "op": "DUP5"
    },
    "3220": {
      "op": "ADD"
    },
    "3221": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "3224": {
      "jump": "i",
      "op": "JUMP"
    },
    "3225": {
      "op": "JUMPDEST"
    },
    "3226": {
      "op": "SWAP1"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "op": "SWAP3"
    },
    "3229": {
      "op": "POP"
    },
    "3230": {
      "op": "SWAP3"
    },
    "3231": {
      "op": "SWAP1"
    },
    "3232": {
      "op": "POP"
    },
    "3233": {
      "jump": "o",
      "op": "JUMP"
    },
    "3234": {
      "op": "JUMPDEST"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3237": {
      "op": "DUP2"
    },
    "3238": {
      "op": "MSTORE"
    },
    "3239": {
      "op": "DUP2"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3242": {
      "op": "DUP3"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "MSTORE"
    },
    "3245": {
      "op": "DUP2"
    },
    "3246": {
      "op": "DUP4"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3249": {
      "op": "DUP4"
    },
    "3250": {
      "op": "ADD"
    },
    "3251": {
      "op": "CALLDATACOPY"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3254": {
      "op": "DUP2"
    },
    "3255": {
      "op": "DUP4"
    },
    "3256": {
      "op": "ADD"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3259": {
      "op": "SWAP1"
    },
    "3260": {
      "op": "DUP2"
    },
    "3261": {
      "op": "ADD"
    },
    "3262": {
      "op": "SWAP2"
    },
    "3263": {
      "op": "SWAP1"
    },
    "3264": {
      "op": "SWAP2"
    },
    "3265": {
      "op": "MSTORE"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3268": {
      "op": "SWAP1"
    },
    "3269": {
      "op": "SWAP3"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3273": {
      "op": "NOT"
    },
    "3274": {
      "op": "AND"
    },
    "3275": {
      "op": "ADD"
    },
    "3276": {
      "op": "ADD"
    },
    "3277": {
      "op": "SWAP2"
    },
    "3278": {
      "op": "SWAP1"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "jump": "o",
      "op": "JUMP"
    },
    "3281": {
      "op": "JUMPDEST"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3284": {
      "op": "DUP1"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3287": {
      "op": "DUP4"
    },
    "3288": {
      "op": "DUP6"
    },
    "3289": {
      "op": "SUB"
    },
    "3290": {
      "op": "SLT"
    },
    "3291": {
      "op": "ISZERO"
    },
    "3292": {
      "op": "PUSH2",
      "value": "0xCE4"
    },
    "3295": {
      "op": "JUMPI"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3298": {
      "op": "DUP1"
    },
    "3299": {
      "op": "REVERT"
    },
    "3300": {
      "op": "JUMPDEST"
    },
    "3301": {
      "op": "PUSH2",
      "value": "0xCED"
    },
    "3304": {
      "op": "DUP4"
    },
    "3305": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "3308": {
      "jump": "i",
      "op": "JUMP"
    },
    "3309": {
      "op": "JUMPDEST"
    },
    "3310": {
      "op": "SWAP2"
    },
    "3311": {
      "op": "POP"
    },
    "3312": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3317": {
      "op": "DUP5"
    },
    "3318": {
      "op": "ADD"
    },
    "3319": {
      "op": "PUSH2",
      "value": "0xB2D"
    },
    "3322": {
      "jump": "i",
      "op": "JUMP"
    },
    "3323": {
      "op": "JUMPDEST"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "DUP2"
    },
    "3327": {
      "op": "DUP2"
    },
    "3328": {
      "op": "SHR"
    },
    "3329": {
      "op": "SWAP1"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "AND"
    },
    "3332": {
      "op": "DUP1"
    },
    "3333": {
      "op": "PUSH2",
      "value": "0xD0F"
    },
    "3336": {
      "op": "JUMPI"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "AND"
    },
    "3341": {
      "op": "SWAP2"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "JUMPDEST"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "LT"
    },
    "3348": {
      "op": "DUP2"
    },
    "3349": {
      "op": "SUB"
    },
    "3350": {
      "op": "PUSH2",
      "value": "0xD2F"
    },
    "3353": {
      "op": "JUMPI"
    },
    "3354": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3364": {
      "op": "MSTORE"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3374": {
      "op": "REVERT"
    },
    "3375": {
      "op": "JUMPDEST"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "op": "SWAP2"
    },
    "3378": {
      "op": "SWAP1"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "jump": "o",
      "op": "JUMP"
    },
    "3381": {
      "op": "JUMPDEST"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "NOT"
    },
    "3386": {
      "op": "DUP3"
    },
    "3387": {
      "op": "GT"
    },
    "3388": {
      "op": "ISZERO"
    },
    "3389": {
      "op": "PUSH2",
      "value": "0xD56"
    },
    "3392": {
      "op": "JUMPI"
    },
    "3393": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3403": {
      "op": "MSTORE"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3408": {
      "op": "MSTORE"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3413": {
      "op": "REVERT"
    },
    "3414": {
      "op": "JUMPDEST"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "SWAP1"
    },
    "3418": {
      "jump": "o",
      "op": "JUMP"
    },
    "3419": {
      "op": "JUMPDEST"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3422": {
      "op": "DUP2"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3426": {
      "op": "PUSH2",
      "value": "0xD6E"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3431": {
      "op": "DUP4"
    },
    "3432": {
      "op": "ADD"
    },
    "3433": {
      "op": "DUP6"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xACD"
    },
    "3437": {
      "jump": "i",
      "op": "JUMP"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "SWAP1"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "DUP1"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3446": {
      "op": "SHL"
    },
    "3447": {
      "op": "SUB"
    },
    "3448": {
      "op": "DUP4"
    },
    "3449": {
      "op": "AND"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3452": {
      "op": "DUP4"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "SWAP4"
    },
    "3456": {
      "op": "SWAP3"
    },
    "3457": {
      "op": "POP"
    },
    "3458": {
      "op": "POP"
    },
    "3459": {
      "op": "POP"
    },
    "3460": {
      "jump": "o",
      "op": "JUMP"
    },
    "3461": {
      "op": "JUMPDEST"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "DUP5"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "op": "SLT"
    },
    "3470": {
      "op": "ISZERO"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD97"
    },
    "3474": {
      "op": "JUMPI"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3477": {
      "op": "DUP1"
    },
    "3478": {
      "op": "REVERT"
    },
    "3479": {
      "op": "JUMPDEST"
    },
    "3480": {
      "op": "DUP2"
    },
    "3481": {
      "op": "MLOAD"
    },
    "3482": {
      "op": "DUP1"
    },
    "3483": {
      "op": "ISZERO"
    },
    "3484": {
      "op": "ISZERO"
    },
    "3485": {
      "op": "DUP2"
    },
    "3486": {
      "op": "EQ"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0x63F"
    },
    "3490": {
      "op": "JUMPI"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "DUP1"
    },
    "3494": {
      "op": "REVERT"
    }
  },
  "sha1": "2386bf97a9c6794d771e65578ef900e2b51cfd22",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"interfaces/token/ERC20/IERC20.sol\";\nimport \"contracts/utils/context/Context.sol\";\nimport \"contracts/utils/access/AccessControlAdapter.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, AccessControlAdapter {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        \n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual  returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual  returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n\n\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        \n        _transfer(sender, recipient, amount);\n        \n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n\n        uint256 senderBalance = _balances[sender];\n\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n\n    function mint(address account, uint256 amount) public virtual override onlyAdmin(_msgSender()) {\n        _mint(account, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    function deposit() external payable {}\n}\n",
  "sourceMap": "1437:10613:16:-:0;;;2018:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2084:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2107:17:16;;;;:7;;:17;;;;;:::i;:::-;;2018:122;;1437:10613;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1437:10613:16;;;-1:-1:-1;1437:10613:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:30;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:30;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:30;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:30:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:30;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1437:10613:16;;;;;;",
  "sourcePath": "contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}