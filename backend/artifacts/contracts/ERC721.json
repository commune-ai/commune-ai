{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/ERC165.sol",
    "11": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/IERC165.sol",
    "24": "contracts/token/ERC721/ERC721.sol",
    "4": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721Receiver.sol",
    "43": "interfaces/token/ERC721/IERC721.sol",
    "6": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Address.sol",
    "7": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
    "9": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        6415
      ],
      "Context": [
        6437
      ],
      "ERC165": [
        6664
      ],
      "ERC721": [
        3426
      ],
      "IERC165": [
        7435
      ],
      "IERC721": [
        6781
      ],
      "IERC721Metadata": [
        6118
      ],
      "IERC721Receiver": [
        6091
      ],
      "Strings": [
        6640
      ]
    },
    "id": 3427,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2642,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:24"
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 2643,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6092,
        "src": "117:66:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "id": 2645,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6119,
        "src": "184:100:24",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2644,
              "name": "IERC721Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6118,
              "src": "192:15:24",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$6118_$",
                "typeString": "type(contract IERC721Metadata)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 2646,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6416,
        "src": "285:51:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2647,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6438,
        "src": "337:51:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 2648,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6641,
        "src": "389:51:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 2649,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6665,
        "src": "441:64:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/token/ERC721/IERC721.sol",
        "file": "interfaces/token/ERC721/IERC721.sol",
        "id": 2650,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3427,
        "sourceUnit": 6782,
        "src": "506:45:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2652,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6437,
              "src": "821:7:24"
            },
            "id": 2653,
            "nodeType": "InheritanceSpecifier",
            "src": "821:7:24"
          },
          {
            "baseName": {
              "id": 2654,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6664,
              "src": "830:6:24"
            },
            "id": 2655,
            "nodeType": "InheritanceSpecifier",
            "src": "830:6:24"
          },
          {
            "baseName": {
              "id": 2656,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6781,
              "src": "838:7:24"
            },
            "id": 2657,
            "nodeType": "InheritanceSpecifier",
            "src": "838:7:24"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2651,
          "nodeType": "StructuredDocumentation",
          "src": "555:246:24",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 3426,
        "linearizedBaseContracts": [
          3426,
          6781,
          6664,
          7435,
          6437
        ],
        "name": "ERC721",
        "nameLocation": "811:6:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2660,
            "libraryName": {
              "id": 2658,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6415,
              "src": "858:7:24"
            },
            "nodeType": "UsingForDirective",
            "src": "852:26:24",
            "typeName": {
              "id": 2659,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "870:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2663,
            "libraryName": {
              "id": 2661,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6640,
              "src": "889:7:24"
            },
            "nodeType": "UsingForDirective",
            "src": "883:26:24",
            "typeName": {
              "id": 2662,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "901:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2665,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "948:5:24",
            "nodeType": "VariableDeclaration",
            "scope": 3426,
            "src": "933:20:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2664,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "933:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2667,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "995:7:24",
            "nodeType": "VariableDeclaration",
            "scope": 3426,
            "src": "980:22:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2666,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "980:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2671,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "1091:7:24",
            "nodeType": "VariableDeclaration",
            "scope": 3426,
            "src": "1055:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2670,
              "keyType": {
                "id": 2668,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1063:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1055:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2669,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1074:7:24",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2675,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1185:9:24",
            "nodeType": "VariableDeclaration",
            "scope": 3426,
            "src": "1149:45:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2674,
              "keyType": {
                "id": 2672,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1157:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1149:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2673,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1168:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2679,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1286:15:24",
            "nodeType": "VariableDeclaration",
            "scope": 3426,
            "src": "1250:51:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2678,
              "keyType": {
                "id": 2676,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1258:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1250:27:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2677,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1269:7:24",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2685,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1409:18:24",
            "nodeType": "VariableDeclaration",
            "scope": 3426,
            "src": "1356:71:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 2684,
              "keyType": {
                "id": 2680,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1364:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1356:44:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 2683,
                "keyType": {
                  "id": 2681,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1383:7:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1375:24:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2682,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1394:4:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2701,
              "nodeType": "Block",
              "src": "1603:57:24",
              "statements": [
                {
                  "expression": {
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2693,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "1613:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2694,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2688,
                      "src": "1621:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1613:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:13:24"
                },
                {
                  "expression": {
                    "id": 2699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2697,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "1636:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2698,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2690,
                      "src": "1646:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1636:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2700,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:17:24"
                }
              ]
            },
            "documentation": {
              "id": 2686,
              "nodeType": "StructuredDocumentation",
              "src": "1434:108:24",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 2702,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2688,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1573:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "1559:19:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2687,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2690,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1594:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2702,
                  "src": "1580:21:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2689,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:44:24"
            },
            "returnParameters": {
              "id": 2692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1603:0:24"
            },
            "scope": 3426,
            "src": "1547:113:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6663,
              7434
            ],
            "body": {
              "id": 2732,
              "nodeType": "Block",
              "src": "1835:192:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2713,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2705,
                          "src": "1864:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2715,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6781,
                                "src": "1884:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$6781_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$6781_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 2714,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1879:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1879:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$6781",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 2717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1879:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1864:40:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2719,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2705,
                          "src": "1920:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2721,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6118,
                                "src": "1940:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$6118_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$6118_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 2720,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1935:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1935:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$6118",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 2723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1935:33:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1920:48:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1864:104:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2728,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2705,
                          "src": "2008:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 2726,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1984:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$3426_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 2727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6663,
                        "src": "1984:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1984:36:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1864:156:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2712,
                  "id": 2731,
                  "nodeType": "Return",
                  "src": "1845:175:24"
                }
              ]
            },
            "documentation": {
              "id": 2703,
              "nodeType": "StructuredDocumentation",
              "src": "1666:56:24",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2733,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1736:17:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2709,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2707,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6664,
                  "src": "1803:6:24"
                },
                {
                  "id": 2708,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7435,
                  "src": "1811:7:24"
                }
              ],
              "src": "1794:25:24"
            },
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1761:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "1754:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:20:24"
            },
            "returnParameters": {
              "id": 2712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "1829:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1828:6:24"
            },
            "scope": 3426,
            "src": "1727:300:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6706
            ],
            "body": {
              "id": 2756,
              "nodeType": "Block",
              "src": "2167:124:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2743,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2736,
                          "src": "2185:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2202:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2194:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2744,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2194:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2194:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2185:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 2749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2206:44:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 2742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2177:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:74:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2751,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:74:24"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2752,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2675,
                      "src": "2268:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2754,
                    "indexExpression": {
                      "id": 2753,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "2278:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2268:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2741,
                  "id": 2755,
                  "nodeType": "Return",
                  "src": "2261:23:24"
                }
              ]
            },
            "documentation": {
              "id": 2734,
              "nodeType": "StructuredDocumentation",
              "src": "2033:48:24",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2095:9:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2738,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2140:8:24"
            },
            "parameters": {
              "id": 2737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2736,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2113:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2757,
                  "src": "2105:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2104:15:24"
            },
            "returnParameters": {
              "id": 2741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2757,
                  "src": "2158:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2157:9:24"
            },
            "scope": 3426,
            "src": "2086:205:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6714
            ],
            "body": {
              "id": 2784,
              "nodeType": "Block",
              "src": "2429:154:24",
              "statements": [
                {
                  "assignments": [
                    2767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2767,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2447:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2784,
                      "src": "2439:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2766,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2439:7:24",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2771,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2768,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2671,
                      "src": "2455:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2770,
                    "indexExpression": {
                      "id": 2769,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2760,
                      "src": "2463:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2455:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2439:32:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2773,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2767,
                          "src": "2489:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2506:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2498:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2498:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2498:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2489:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2510:43:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 2772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2481:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:73:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:73:24"
                },
                {
                  "expression": {
                    "id": 2782,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2767,
                    "src": "2571:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2765,
                  "id": 2783,
                  "nodeType": "Return",
                  "src": "2564:12:24"
                }
              ]
            },
            "documentation": {
              "id": 2758,
              "nodeType": "StructuredDocumentation",
              "src": "2297:46:24",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 2785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2357:7:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2762,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2402:8:24"
            },
            "parameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2760,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2373:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "2365:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2364:17:24"
            },
            "returnParameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2764,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "2420:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:9:24"
            },
            "scope": 3426,
            "src": "2348:235:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2793,
              "nodeType": "Block",
              "src": "2697:29:24",
              "statements": [
                {
                  "expression": {
                    "id": 2791,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2665,
                    "src": "2714:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2790,
                  "id": 2792,
                  "nodeType": "Return",
                  "src": "2707:12:24"
                }
              ]
            },
            "documentation": {
              "id": 2786,
              "nodeType": "StructuredDocumentation",
              "src": "2589:51:24",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 2794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2654:4:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:2:24"
            },
            "returnParameters": {
              "id": 2790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "2682:13:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2681:15:24"
            },
            "scope": 3426,
            "src": "2645:81:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2802,
              "nodeType": "Block",
              "src": "2845:31:24",
              "statements": [
                {
                  "expression": {
                    "id": 2800,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2667,
                    "src": "2862:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2799,
                  "id": 2801,
                  "nodeType": "Return",
                  "src": "2855:14:24"
                }
              ]
            },
            "documentation": {
              "id": 2795,
              "nodeType": "StructuredDocumentation",
              "src": "2732:53:24",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 2803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2799:6:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2805:2:24"
            },
            "returnParameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2803,
                  "src": "2830:13:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2829:15:24"
            },
            "scope": 3426,
            "src": "2790:86:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2811,
              "nodeType": "Block",
              "src": "3244:26:24",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3261:2:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 2808,
                  "id": 2810,
                  "nodeType": "Return",
                  "src": "3254:9:24"
                }
              ]
            },
            "documentation": {
              "id": 2804,
              "nodeType": "StructuredDocumentation",
              "src": "2943:230:24",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 2812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3187:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3195:2:24"
            },
            "returnParameters": {
              "id": 2808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2807,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2812,
                  "src": "3229:13:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2806,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3228:15:24"
            },
            "scope": 3426,
            "src": "3178:92:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6742
            ],
            "body": {
              "id": 2854,
              "nodeType": "Block",
              "src": "3397:331:24",
              "statements": [
                {
                  "assignments": [
                    2822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2822,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3415:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2854,
                      "src": "3407:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2821,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3407:7:24",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2827,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2825,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "3438:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2823,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "3423:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3426_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2785,
                      "src": "3423:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3407:39:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2829,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2815,
                          "src": "3464:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2830,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2822,
                          "src": "3470:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3464:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3477:35:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 2828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3456:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:57:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:57:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2836,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6427,
                              "src": "3545:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3545:12:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2838,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2822,
                            "src": "3561:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3545:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2841,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2822,
                              "src": "3587:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2842,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6427,
                                "src": "3594:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3594:12:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2840,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "3570:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3570:37:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3545:62:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 2846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3621:58:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 2835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3524:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3524:165:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2848,
                  "nodeType": "ExpressionStatement",
                  "src": "3524:165:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2850,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2815,
                        "src": "3709:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2851,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "3713:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2849,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "3700:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3700:21:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "3700:21:24"
                }
              ]
            },
            "documentation": {
              "id": 2813,
              "nodeType": "StructuredDocumentation",
              "src": "3276:46:24",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 2855,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3336:7:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2819,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3388:8:24"
            },
            "parameters": {
              "id": 2818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2815,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3352:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "3344:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2817,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3364:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "3356:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3343:29:24"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3397:0:24"
            },
            "scope": 3426,
            "src": "3327:401:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6750
            ],
            "body": {
              "id": 2875,
              "nodeType": "Block",
              "src": "3874:132:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2866,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2858,
                            "src": "3900:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2865,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3034,
                          "src": "3892:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3892:16:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3910:46:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 2864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3884:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:73:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2870,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:73:24"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2871,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2679,
                      "src": "3975:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2873,
                    "indexExpression": {
                      "id": 2872,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2858,
                      "src": "3991:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3975:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2863,
                  "id": 2874,
                  "nodeType": "Return",
                  "src": "3968:31:24"
                }
              ]
            },
            "documentation": {
              "id": 2856,
              "nodeType": "StructuredDocumentation",
              "src": "3734:50:24",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 2876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3798:11:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2860,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3847:8:24"
            },
            "parameters": {
              "id": 2859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2858,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3818:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "3810:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3810:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3809:17:24"
            },
            "returnParameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "3865:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3864:9:24"
            },
            "scope": 3426,
            "src": "3789:217:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6758
            ],
            "body": {
              "id": 2892,
              "nodeType": "Block",
              "src": "4157:69:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2886,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6427,
                          "src": "4186:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4186:12:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2888,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2879,
                        "src": "4200:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2889,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2881,
                        "src": "4210:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2885,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3352,
                      "src": "4167:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4167:52:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2891,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:52:24"
                }
              ]
            },
            "documentation": {
              "id": 2877,
              "nodeType": "StructuredDocumentation",
              "src": "4012:56:24",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 2893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4082:17:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2883,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4148:8:24"
            },
            "parameters": {
              "id": 2882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2879,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4108:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "4100:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4100:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2881,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4123:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "4118:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2880,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4118:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4099:33:24"
            },
            "returnParameters": {
              "id": 2884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4157:0:24"
            },
            "scope": 3426,
            "src": "4073:153:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6768
            ],
            "body": {
              "id": 2910,
              "nodeType": "Block",
              "src": "4395:59:24",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2904,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "4412:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 2906,
                      "indexExpression": {
                        "id": 2905,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2896,
                        "src": "4431:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4412:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2908,
                    "indexExpression": {
                      "id": 2907,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2898,
                      "src": "4438:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4412:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2903,
                  "id": 2909,
                  "nodeType": "Return",
                  "src": "4405:42:24"
                }
              ]
            },
            "documentation": {
              "id": 2894,
              "nodeType": "StructuredDocumentation",
              "src": "4232:55:24",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 2911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4301:16:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2900,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4371:8:24"
            },
            "parameters": {
              "id": 2899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2896,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4326:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2911,
                  "src": "4318:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2898,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4341:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2911,
                  "src": "4333:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4317:33:24"
            },
            "returnParameters": {
              "id": 2903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2911,
                  "src": "4389:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2901,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:6:24"
            },
            "scope": 3426,
            "src": "4292:162:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6734
            ],
            "body": {
              "id": 2937,
              "nodeType": "Block",
              "src": "4635:211:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2924,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6427,
                              "src": "4724:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4724:12:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2926,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2918,
                            "src": "4738:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2923,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3075,
                          "src": "4705:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4705:41:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4748:51:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4697:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4697:103:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2930,
                  "nodeType": "ExpressionStatement",
                  "src": "4697:103:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2932,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2914,
                        "src": "4821:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2933,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2916,
                        "src": "4827:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2934,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2918,
                        "src": "4831:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2931,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3296,
                      "src": "4811:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2936,
                  "nodeType": "ExpressionStatement",
                  "src": "4811:28:24"
                }
              ]
            },
            "documentation": {
              "id": 2912,
              "nodeType": "StructuredDocumentation",
              "src": "4460:51:24",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 2938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4525:12:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2920,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4626:8:24"
            },
            "parameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2914,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4555:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "4547:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4547:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2916,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4577:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "4569:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2918,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4597:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "4589:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4537:73:24"
            },
            "returnParameters": {
              "id": 2921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4635:0:24"
            },
            "scope": 3426,
            "src": "4516:330:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6724
            ],
            "body": {
              "id": 2956,
              "nodeType": "Block",
              "src": "5035:56:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2950,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2941,
                        "src": "5062:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2951,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2943,
                        "src": "5068:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2952,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2945,
                        "src": "5072:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5081:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2949,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2957,
                        2987
                      ],
                      "referencedDeclaration": 2987,
                      "src": "5045:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5045:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2955,
                  "nodeType": "ExpressionStatement",
                  "src": "5045:39:24"
                }
              ]
            },
            "documentation": {
              "id": 2939,
              "nodeType": "StructuredDocumentation",
              "src": "4852:55:24",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 2957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4921:16:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2947,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5026:8:24"
            },
            "parameters": {
              "id": 2946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2941,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4955:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2957,
                  "src": "4947:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4947:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2943,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4977:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2957,
                  "src": "4969:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4969:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2945,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4997:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2957,
                  "src": "4989:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4989:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4937:73:24"
            },
            "returnParameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5035:0:24"
            },
            "scope": 3426,
            "src": "4912:179:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6780
            ],
            "body": {
              "id": 2986,
              "nodeType": "Block",
              "src": "5308:169:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2972,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6427,
                              "src": "5345:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5345:12:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2974,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2964,
                            "src": "5359:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2971,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3075,
                          "src": "5326:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5326:41:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5369:51:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5318:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:103:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2978,
                  "nodeType": "ExpressionStatement",
                  "src": "5318:103:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2980,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2960,
                        "src": "5445:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2981,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2962,
                        "src": "5451:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2982,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2964,
                        "src": "5455:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2983,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "5464:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2979,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "5431:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5431:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2985,
                  "nodeType": "ExpressionStatement",
                  "src": "5431:39:24"
                }
              ]
            },
            "documentation": {
              "id": 2958,
              "nodeType": "StructuredDocumentation",
              "src": "5097:55:24",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 2987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5166:16:24",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2968,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5299:8:24"
            },
            "parameters": {
              "id": 2967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2960,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5200:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "5192:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5192:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2962,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5222:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "5214:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5214:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2964,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5242:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "5234:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2966,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5272:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "5259:18:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2965,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5259:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5182:101:24"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5308:0:24"
            },
            "scope": 3426,
            "src": "5157:320:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3015,
              "nodeType": "Block",
              "src": "6480:166:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3000,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2990,
                        "src": "6500:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3001,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2992,
                        "src": "6506:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3002,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2994,
                        "src": "6510:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2999,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3296,
                      "src": "6490:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6490:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3004,
                  "nodeType": "ExpressionStatement",
                  "src": "6490:28:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3007,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "6559:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3008,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2992,
                            "src": "6565:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3009,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2994,
                            "src": "6569:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3010,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2996,
                            "src": "6578:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3006,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3414,
                          "src": "6536:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 3011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6536:48:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 3012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6586:52:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 3005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6528:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6528:111:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3014,
                  "nodeType": "ExpressionStatement",
                  "src": "6528:111:24"
                }
              ]
            },
            "documentation": {
              "id": 2988,
              "nodeType": "StructuredDocumentation",
              "src": "5483:851:24",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 3016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6348:13:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6379:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "6371:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6371:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2992,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6401:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "6393:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6393:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2994,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6421:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "6413:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6413:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2996,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6451:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3016,
                  "src": "6438:18:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2995,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6438:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6361:101:24"
            },
            "returnParameters": {
              "id": 2998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6480:0:24"
            },
            "scope": 3426,
            "src": "6339:307:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3033,
              "nodeType": "Block",
              "src": "7020:54:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 3024,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "7037:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3026,
                      "indexExpression": {
                        "id": 3025,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3019,
                        "src": "7045:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7037:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7065:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7057:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7057:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7057:10:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7037:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3023,
                  "id": 3032,
                  "nodeType": "Return",
                  "src": "7030:37:24"
                }
              ]
            },
            "documentation": {
              "id": 3017,
              "nodeType": "StructuredDocumentation",
              "src": "6652:292:24",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 3034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "6958:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6974:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "6966:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6966:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6965:17:24"
            },
            "returnParameters": {
              "id": 3023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "7014:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7014:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7013:6:24"
            },
            "scope": 3426,
            "src": "6949:125:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3074,
              "nodeType": "Block",
              "src": "7331:245:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3046,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3039,
                            "src": "7357:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3045,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3034,
                          "src": "7349:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7349:16:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7367:46:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 3044,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7341:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7341:73:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3050,
                  "nodeType": "ExpressionStatement",
                  "src": "7341:73:24"
                },
                {
                  "assignments": [
                    3052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3052,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7432:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 3074,
                      "src": "7424:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7424:7:24",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3057,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3055,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3039,
                        "src": "7455:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3053,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "7440:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3426_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 3054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2785,
                      "src": "7440:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 3056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7440:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7424:39:24"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3058,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3037,
                              "src": "7481:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3059,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3052,
                              "src": "7492:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7481:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 3062,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3039,
                                  "src": "7513:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3061,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2876,
                                "src": "7501:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 3063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7501:20:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3064,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3037,
                              "src": "7525:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7501:31:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7481:51:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3068,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3052,
                              "src": "7553:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3069,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3037,
                              "src": "7560:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3067,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "7536:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 3070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7536:32:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7481:87:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 3072,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7480:89:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3043,
                  "id": 3073,
                  "nodeType": "Return",
                  "src": "7473:96:24"
                }
              ]
            },
            "documentation": {
              "id": 3035,
              "nodeType": "StructuredDocumentation",
              "src": "7080:147:24",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 3075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7241:18:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3037,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7268:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3075,
                  "src": "7260:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7260:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7285:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3075,
                  "src": "7277:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7277:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7259:34:24"
            },
            "returnParameters": {
              "id": 3043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3075,
                  "src": "7325:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3041,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7325:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7324:6:24"
            },
            "scope": 3426,
            "src": "7232:344:24",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3089,
              "nodeType": "Block",
              "src": "7971:43:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3084,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3078,
                        "src": "7991:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3085,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "7995:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 3086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8004:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 3083,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3090,
                        3119
                      ],
                      "referencedDeclaration": 3119,
                      "src": "7981:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 3087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7981:26:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3088,
                  "nodeType": "ExpressionStatement",
                  "src": "7981:26:24"
                }
              ]
            },
            "documentation": {
              "id": 3076,
              "nodeType": "StructuredDocumentation",
              "src": "7582:319:24",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 3090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "7915:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3078,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7933:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3090,
                  "src": "7925:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7925:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3080,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7945:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3090,
                  "src": "7937:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7937:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7924:29:24"
            },
            "returnParameters": {
              "id": 3082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7971:0:24"
            },
            "scope": 3426,
            "src": "7906:108:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3118,
              "nodeType": "Block",
              "src": "8350:196:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3101,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3093,
                        "src": "8366:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3102,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3095,
                        "src": "8370:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3100,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3176,
                      "src": "8360:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:18:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3104,
                  "nodeType": "ExpressionStatement",
                  "src": "8360:18:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8440:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8432:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8432:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8432:10:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3111,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3093,
                            "src": "8444:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3112,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3095,
                            "src": "8448:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 3113,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3097,
                            "src": "8457:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3106,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3414,
                          "src": "8409:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 3114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8409:54:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 3115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8477:52:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 3105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8388:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8388:151:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "8388:151:24"
                }
              ]
            },
            "documentation": {
              "id": 3091,
              "nodeType": "StructuredDocumentation",
              "src": "8020:210:24",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 3119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8244:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3093,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8271:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "8263:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8263:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3095,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8291:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "8283:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8283:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3097,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8321:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "8308:18:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3096,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8308:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8253:79:24"
            },
            "returnParameters": {
              "id": 3099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8350:0:24"
            },
            "scope": 3426,
            "src": "8235:311:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3175,
              "nodeType": "Block",
              "src": "8929:311:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3128,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3122,
                          "src": "8947:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8961:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8953:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3129,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8953:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8953:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8947:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 3134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8965:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 3127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8939:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8939:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "8939:61:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9018:17:24",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3139,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3124,
                              "src": "9027:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3138,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3034,
                            "src": "9019:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 3140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9019:16:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 3142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9037:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 3137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9010:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:58:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3144,
                  "nodeType": "ExpressionStatement",
                  "src": "9010:58:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9108:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9100:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9100:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9100:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3150,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3122,
                        "src": "9112:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3151,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3124,
                        "src": "9116:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3145,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3425,
                      "src": "9079:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9079:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3153,
                  "nodeType": "ExpressionStatement",
                  "src": "9079:45:24"
                },
                {
                  "expression": {
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3154,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "9135:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3156,
                      "indexExpression": {
                        "id": 3155,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3122,
                        "src": "9145:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9135:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9152:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9135:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "9135:18:24"
                },
                {
                  "expression": {
                    "id": 3164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3160,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "9163:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3162,
                      "indexExpression": {
                        "id": 3161,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3124,
                        "src": "9171:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9163:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3163,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "9182:2:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9163:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3165,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:21:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9217:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9209:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3167,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9209:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9209:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3171,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3122,
                        "src": "9221:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3172,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3124,
                        "src": "9225:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3166,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6680,
                      "src": "9200:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9200:33:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3174,
                  "nodeType": "EmitStatement",
                  "src": "9195:38:24"
                }
              ]
            },
            "documentation": {
              "id": 3120,
              "nodeType": "StructuredDocumentation",
              "src": "8552:311:24",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 3176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8877:5:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3122,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8891:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "8883:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8883:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8903:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "8895:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8895:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8882:29:24"
            },
            "returnParameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8929:0:24"
            },
            "scope": 3426,
            "src": "8868:372:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3226,
              "nodeType": "Block",
              "src": "9506:299:24",
              "statements": [
                {
                  "assignments": [
                    3183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3183,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9524:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 3226,
                      "src": "9516:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3182,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9516:7:24",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3186,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "9547:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3184,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "9532:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$3426_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 3185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2785,
                      "src": "9532:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 3187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9532:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9516:39:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3190,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "9587:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9602:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9594:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9594:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9594:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "9606:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3189,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3425,
                      "src": "9566:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9566:48:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3197,
                  "nodeType": "ExpressionStatement",
                  "src": "9566:48:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9669:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9661:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9661:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9661:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3203,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "9673:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3198,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "9652:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9652:29:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3205,
                  "nodeType": "ExpressionStatement",
                  "src": "9652:29:24"
                },
                {
                  "expression": {
                    "id": 3210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3206,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "9692:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3208,
                      "indexExpression": {
                        "id": 3207,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "9702:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9692:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9712:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9692:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3211,
                  "nodeType": "ExpressionStatement",
                  "src": "9692:21:24"
                },
                {
                  "expression": {
                    "id": 3215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9723:23:24",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3212,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "9730:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3214,
                      "indexExpression": {
                        "id": 3213,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "9738:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9730:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3216,
                  "nodeType": "ExpressionStatement",
                  "src": "9723:23:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3218,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "9771:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9786:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9778:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9778:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9778:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3223,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3179,
                        "src": "9790:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3217,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6680,
                      "src": "9762:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9762:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3225,
                  "nodeType": "EmitStatement",
                  "src": "9757:41:24"
                }
              ]
            },
            "documentation": {
              "id": 3177,
              "nodeType": "StructuredDocumentation",
              "src": "9246:206:24",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 3227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9466:5:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3179,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9480:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3227,
                  "src": "9472:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9472:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9471:17:24"
            },
            "returnParameters": {
              "id": 3181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9506:0:24"
            },
            "scope": 3426,
            "src": "9457:348:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3295,
              "nodeType": "Block",
              "src": "10238:451:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3240,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3234,
                              "src": "10271:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3238,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3426,
                              "src": "10256:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$3426_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 3239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2785,
                            "src": "10256:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10256:23:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3242,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3230,
                          "src": "10283:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10256:31:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10289:43:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 3237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10248:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10248:85:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3246,
                  "nodeType": "ExpressionStatement",
                  "src": "10248:85:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3248,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3232,
                          "src": "10351:2:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10365:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10357:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3249,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10357:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10357:10:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10351:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10369:38:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 3247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10343:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10343:65:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3256,
                  "nodeType": "ExpressionStatement",
                  "src": "10343:65:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3258,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10440:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3259,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "10446:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3260,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3234,
                        "src": "10450:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3257,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3425,
                      "src": "10419:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10419:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3262,
                  "nodeType": "ExpressionStatement",
                  "src": "10419:39:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10537:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10529:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10529:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10529:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3268,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3234,
                        "src": "10541:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3263,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3320,
                      "src": "10520:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10520:29:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3270,
                  "nodeType": "ExpressionStatement",
                  "src": "10520:29:24"
                },
                {
                  "expression": {
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3271,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "10560:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3273,
                      "indexExpression": {
                        "id": 3272,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10570:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10560:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10579:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10560:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "10560:20:24"
                },
                {
                  "expression": {
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3277,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "10590:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3279,
                      "indexExpression": {
                        "id": 3278,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "10600:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10590:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10607:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10590:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "10590:18:24"
                },
                {
                  "expression": {
                    "id": 3287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3283,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2671,
                        "src": "10618:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3285,
                      "indexExpression": {
                        "id": 3284,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3234,
                        "src": "10626:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10618:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3286,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3232,
                      "src": "10637:2:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10618:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3288,
                  "nodeType": "ExpressionStatement",
                  "src": "10618:21:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3290,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "10664:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3291,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "10670:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3292,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3234,
                        "src": "10674:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3289,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6680,
                      "src": "10655:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10655:27:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3294,
                  "nodeType": "EmitStatement",
                  "src": "10650:32:24"
                }
              ]
            },
            "documentation": {
              "id": 3228,
              "nodeType": "StructuredDocumentation",
              "src": "9811:313:24",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 3296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10138:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10165:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3296,
                  "src": "10157:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10157:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3232,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10187:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3296,
                  "src": "10179:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10179:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3234,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10207:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3296,
                  "src": "10199:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10199:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10147:73:24"
            },
            "returnParameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10238:0:24"
            },
            "scope": 3426,
            "src": "10129:560:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3319,
              "nodeType": "Block",
              "src": "10864:107:24",
              "statements": [
                {
                  "expression": {
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3304,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2679,
                        "src": "10874:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 3306,
                      "indexExpression": {
                        "id": 3305,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3301,
                        "src": "10890:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10874:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3307,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3299,
                      "src": "10901:2:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10874:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3309,
                  "nodeType": "ExpressionStatement",
                  "src": "10874:29:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3313,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3301,
                            "src": "10942:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3311,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3426,
                            "src": "10927:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$3426_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 3312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2785,
                          "src": "10927:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 3314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10927:23:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3315,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3299,
                        "src": "10952:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3316,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3301,
                        "src": "10956:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3310,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6689,
                      "src": "10918:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10918:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3318,
                  "nodeType": "EmitStatement",
                  "src": "10913:51:24"
                }
              ]
            },
            "documentation": {
              "id": 3297,
              "nodeType": "StructuredDocumentation",
              "src": "10695:100:24",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 3320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10809:8:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3299,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10826:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "10818:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10818:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3301,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10838:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3320,
                  "src": "10830:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10830:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10817:29:24"
            },
            "returnParameters": {
              "id": 3303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10864:0:24"
            },
            "scope": 3426,
            "src": "10800:171:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3351,
              "nodeType": "Block",
              "src": "11229:184:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3331,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3323,
                          "src": "11247:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 3332,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3325,
                          "src": "11256:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11247:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 3334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11266:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 3330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11239:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11239:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3336,
                  "nodeType": "ExpressionStatement",
                  "src": "11239:55:24"
                },
                {
                  "expression": {
                    "id": 3343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3337,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2685,
                          "src": "11304:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 3340,
                        "indexExpression": {
                          "id": 3338,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3323,
                          "src": "11323:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11304:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3341,
                      "indexExpression": {
                        "id": 3339,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "11330:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11304:35:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3342,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3327,
                      "src": "11342:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11304:46:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3344,
                  "nodeType": "ExpressionStatement",
                  "src": "11304:46:24"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3346,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "11380:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3347,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "11387:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3348,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3327,
                        "src": "11397:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3345,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6698,
                      "src": "11365:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 3349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11365:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3350,
                  "nodeType": "EmitStatement",
                  "src": "11360:46:24"
                }
              ]
            },
            "documentation": {
              "id": 3321,
              "nodeType": "StructuredDocumentation",
              "src": "10977:124:24",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 3352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11115:18:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3323,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11151:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "11143:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11143:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11174:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "11166:16:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11166:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3327,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11197:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3352,
                  "src": "11192:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3326,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11192:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11133:78:24"
            },
            "returnParameters": {
              "id": 3329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11229:0:24"
            },
            "scope": 3426,
            "src": "11106:307:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3413,
              "nodeType": "Block",
              "src": "12122:622:24",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3366,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3357,
                        "src": "12136:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6138,
                      "src": "12136:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 3368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12136:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3411,
                    "nodeType": "Block",
                    "src": "12702:36:24",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 3409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12723:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 3365,
                        "id": 3410,
                        "nodeType": "Return",
                        "src": "12716:11:24"
                      }
                    ]
                  },
                  "id": 3412,
                  "nodeType": "IfStatement",
                  "src": "12132:606:24",
                  "trueBody": {
                    "id": 3408,
                    "nodeType": "Block",
                    "src": "12153:543:24",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 3388,
                              "nodeType": "Block",
                              "src": "12268:91:24",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 3386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 3382,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3380,
                                      "src": "12293:6:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 3383,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6091,
                                          "src": "12303:15:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$6091_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 3384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6090,
                                        "src": "12303:32:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 3385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12303:41:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12293:51:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 3365,
                                  "id": 3387,
                                  "nodeType": "Return",
                                  "src": "12286:58:24"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 3389,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 3381,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 3380,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12260:6:24",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3389,
                                  "src": "12253:13:24",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 3379,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12253:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12252:15:24"
                            },
                            "src": "12244:115:24"
                          },
                          {
                            "block": {
                              "id": 3405,
                              "nodeType": "Block",
                              "src": "12388:298:24",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 3393,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3391,
                                        "src": "12410:6:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 3394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12410:13:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 3395,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12427:1:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12410:18:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 3403,
                                    "nodeType": "Block",
                                    "src": "12537:135:24",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12568:86:24",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12605:2:24",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12609:6:24"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12601:3:24"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12601:15:24"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12624:6:24"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12618:5:24"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12618:13:24"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12594:6:24"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12594:38:24"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12594:38:24"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 3391,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12609:6:24",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 3391,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12624:6:24",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 3402,
                                        "nodeType": "InlineAssembly",
                                        "src": "12559:95:24"
                                      }
                                    ]
                                  },
                                  "id": 3404,
                                  "nodeType": "IfStatement",
                                  "src": "12406:266:24",
                                  "trueBody": {
                                    "id": 3401,
                                    "nodeType": "Block",
                                    "src": "12430:101:24",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 3398,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12459:52:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 3397,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12452:6:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 3399,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12452:60:24",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 3400,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12452:60:24"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 3406,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 3392,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 3391,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12380:6:24",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3406,
                                  "src": "12367:19:24",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 3390,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12367:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12366:21:24"
                            },
                            "src": "12360:326:24"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3373,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6427,
                                "src": "12208:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12208:12:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3375,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3355,
                              "src": "12222:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3376,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3359,
                              "src": "12228:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3377,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3361,
                              "src": "12237:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3370,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3357,
                                  "src": "12187:2:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3369,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6091,
                                "src": "12171:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$6091_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 3371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12171:19:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$6091",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 3372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6090,
                            "src": "12171:36:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 3378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12171:72:24",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 3407,
                        "nodeType": "TryStatement",
                        "src": "12167:519:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3353,
              "nodeType": "StructuredDocumentation",
              "src": "11419:542:24",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 3414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11975:22:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3355,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12015:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "12007:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12007:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12037:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "12029:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12029:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3359,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12057:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "12049:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12049:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3361,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12087:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "12074:18:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3360,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12074:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11997:101:24"
            },
            "returnParameters": {
              "id": 3365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "12116:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12116:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12115:6:24"
            },
            "scope": 3426,
            "src": "11966:778:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3424,
              "nodeType": "Block",
              "src": "13420:2:24",
              "statements": []
            },
            "documentation": {
              "id": 3415,
              "nodeType": "StructuredDocumentation",
              "src": "12750:545:24",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13309:20:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3417,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13347:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3425,
                  "src": "13339:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13339:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3419,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13369:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3425,
                  "src": "13361:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13361:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3421,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13389:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 3425,
                  "src": "13381:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13381:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13329:73:24"
            },
            "returnParameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13420:0:24"
            },
            "scope": 3426,
            "src": "13300:122:24",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3427,
        "src": "802:12622:24",
        "usedErrors": []
      }
    ],
    "src": "92:13333:24"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200122c3803806200122c8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b610f9a80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636352211e116100715780636352211e1461015c57806370a082311461016f57806395d89b4114610190578063a22cb46514610198578063b88d4fde146101ab578063e985e9c5146101be57600080fd5b806301ffc9a7146100b957806306fdde03146100e1578063081812fc146100f6578063095ea7b31461012157806323b872dd1461013657806342842e0e14610149575b600080fd5b6100cc6100c7366004610b4c565b6101fa565b60405190151581526020015b60405180910390f35b6100e961024c565b6040516100d89190610bbd565b610109610104366004610bd0565b6102de565b6040516001600160a01b0390911681526020016100d8565b61013461012f366004610c05565b610378565b005b610134610144366004610c2f565b61048e565b610134610157366004610c2f565b6104bf565b61010961016a366004610bd0565b6104da565b61018261017d366004610c6b565b610551565b6040519081526020016100d8565b6100e96105d8565b6101346101a6366004610c86565b6105e7565b6101346101b9366004610cd8565b6105f6565b6100cc6101cc366004610db4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061022b57506001600160e01b03198216635b5e139f60e01b145b8061024657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025b90610de7565b80601f016020809104026020016040519081016040528092919081815260200182805461028790610de7565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661035c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610383826104da565b9050806001600160a01b0316836001600160a01b031614156103f15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610353565b336001600160a01b038216148061040d575061040d81336101cc565b61047f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610353565b610489838361062e565b505050565b610498338261069c565b6104b45760405162461bcd60e51b815260040161035390610e22565b610489838383610793565b610489838383604051806020016040528060008152506105f6565b6000818152600260205260408120546001600160a01b0316806102465760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610353565b60006001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610353565b506001600160a01b031660009081526003602052604090205490565b60606001805461025b90610de7565b6105f2338383610933565b5050565b610600338361069c565b61061c5760405162461bcd60e51b815260040161035390610e22565b61062884848484610a02565b50505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610663826104da565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166107155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610353565b6000610720836104da565b9050806001600160a01b0316846001600160a01b0316148061075b5750836001600160a01b0316610750846102de565b6001600160a01b0316145b8061078b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166107a6826104da565b6001600160a01b03161461080e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610353565b6001600160a01b0382166108705760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610353565b61087b60008261062e565b6001600160a01b03831660009081526003602052604081208054600192906108a4908490610e89565b90915550506001600160a01b03821660009081526003602052604081208054600192906108d2908490610ea0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156109955760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610353565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a0d848484610793565b610a1984848484610a35565b6106285760405162461bcd60e51b815260040161035390610eb8565b60006001600160a01b0384163b15610b2857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610a79903390899088908890600401610f0a565b6020604051808303816000875af1925050508015610ab4575060408051601f3d908101601f19168201909252610ab191810190610f47565b60015b610b0e573d808015610ae2576040519150601f19603f3d011682016040523d82523d6000602084013e610ae7565b606091505b508051610b065760405162461bcd60e51b815260040161035390610eb8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061078b565b506001949350505050565b6001600160e01b031981168114610b4957600080fd5b50565b600060208284031215610b5e57600080fd5b8135610b6981610b33565b9392505050565b6000815180845260005b81811015610b9657602081850181015186830182015201610b7a565b81811115610ba8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b696020830184610b70565b600060208284031215610be257600080fd5b5035919050565b80356001600160a01b0381168114610c0057600080fd5b919050565b60008060408385031215610c1857600080fd5b610c2183610be9565b946020939093013593505050565b600080600060608486031215610c4457600080fd5b610c4d84610be9565b9250610c5b60208501610be9565b9150604084013590509250925092565b600060208284031215610c7d57600080fd5b610b6982610be9565b60008060408385031215610c9957600080fd5b610ca283610be9565b915060208301358015158114610cb757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cee57600080fd5b610cf785610be9565b9350610d0560208601610be9565b925060408501359150606085013567ffffffffffffffff80821115610d2957600080fd5b818701915087601f830112610d3d57600080fd5b813581811115610d4f57610d4f610cc2565b604051601f8201601f19908116603f01168101908382118183101715610d7757610d77610cc2565b816040528281528a6020848701011115610d9057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610dc757600080fd5b610dd083610be9565b9150610dde60208401610be9565b90509250929050565b600181811c90821680610dfb57607f821691505b60208210811415610e1c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015610e9b57610e9b610e73565b500390565b60008219821115610eb357610eb3610e73565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f3d90830184610b70565b9695505050505050565b600060208284031215610f5957600080fd5b8151610b6981610b3356fea2646970667358221220e78578aa14b989e0f6fb3ffc1037d4189345308a5ae49426feeefcfc2f84c0f764736f6c634300080c0033",
  "bytecodeSha1": "b941e4ebdd9a719d16fbe6d8f929c6de43efc87f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "24": {
        "ERC721._safeTransfer": {
          "51": [
            6536,
            6584,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "50": [
            11247,
            11264,
            true
          ]
        },
        "ERC721._transfer": {
          "48": [
            10256,
            10287,
            true
          ],
          "49": [
            10351,
            10367,
            true
          ]
        },
        "ERC721.approve": {
          "41": [
            3464,
            3475,
            true
          ],
          "42": [
            3545,
            3566,
            true
          ],
          "43": [
            3570,
            3607,
            true
          ]
        },
        "ERC721.balanceOf": {
          "46": [
            2185,
            2204,
            true
          ]
        },
        "ERC721.ownerOf": {
          "45": [
            2489,
            2508,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "47": [
            5326,
            5367,
            true
          ]
        },
        "ERC721.transferFrom": {
          "44": [
            4705,
            4746,
            true
          ]
        }
      },
      "4": {},
      "43": {},
      "6": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "10": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "11": {},
      "24": {
        "ERC721._approve": {
          "21": [
            10874,
            10903
          ],
          "22": [
            10913,
            10964
          ]
        },
        "ERC721._checkOnERC721Received": {
          "38": [
            12452,
            12512
          ],
          "39": [
            12286,
            12344
          ],
          "40": [
            12716,
            12727
          ]
        },
        "ERC721._exists": {
          "4": [
            7030,
            7067
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "23": [
            7341,
            7414
          ],
          "24": [
            7473,
            7569
          ]
        },
        "ERC721._safeTransfer": {
          "35": [
            6490,
            6518
          ],
          "36": [
            6528,
            6639
          ]
        },
        "ERC721._setApprovalForAll": {
          "32": [
            11239,
            11294
          ],
          "33": [
            11304,
            11350
          ],
          "34": [
            11360,
            11406
          ]
        },
        "ERC721._transfer": {
          "25": [
            10248,
            10333
          ],
          "26": [
            10343,
            10408
          ],
          "27": [
            10520,
            10549
          ],
          "28": [
            10560,
            10580
          ],
          "29": [
            10590,
            10608
          ],
          "30": [
            10618,
            10639
          ],
          "31": [
            10650,
            10682
          ]
        },
        "ERC721.approve": {
          "7": [
            3456,
            3513
          ],
          "9": [
            3524,
            3689
          ],
          "10": [
            3700,
            3721
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2177,
            2251
          ],
          "16": [
            2261,
            2284
          ]
        },
        "ERC721.getApproved": {
          "5": [
            3884,
            3957
          ],
          "6": [
            3968,
            3999
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4405,
            4447
          ]
        },
        "ERC721.name": {
          "3": [
            2707,
            2719
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2481,
            2554
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5045,
            5084
          ],
          "19": [
            5318,
            5421
          ],
          "20": [
            5431,
            5470
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4167,
            4219
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1845,
            2020
          ]
        },
        "ERC721.symbol": {
          "17": [
            2855,
            2869
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4697,
            4800
          ],
          "12": [
            4811,
            4839
          ]
        }
      },
      "4": {},
      "43": {},
      "6": {
        "Address.isContract": {
          "37": [
            1126,
            1141
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC165",
    "IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80636352211e116100715780636352211e1461015c57806370a082311461016f57806395d89b4114610190578063a22cb46514610198578063b88d4fde146101ab578063e985e9c5146101be57600080fd5b806301ffc9a7146100b957806306fdde03146100e1578063081812fc146100f6578063095ea7b31461012157806323b872dd1461013657806342842e0e14610149575b600080fd5b6100cc6100c7366004610b4c565b6101fa565b60405190151581526020015b60405180910390f35b6100e961024c565b6040516100d89190610bbd565b610109610104366004610bd0565b6102de565b6040516001600160a01b0390911681526020016100d8565b61013461012f366004610c05565b610378565b005b610134610144366004610c2f565b61048e565b610134610157366004610c2f565b6104bf565b61010961016a366004610bd0565b6104da565b61018261017d366004610c6b565b610551565b6040519081526020016100d8565b6100e96105d8565b6101346101a6366004610c86565b6105e7565b6101346101b9366004610cd8565b6105f6565b6100cc6101cc366004610db4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061022b57506001600160e01b03198216635b5e139f60e01b145b8061024657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025b90610de7565b80601f016020809104026020016040519081016040528092919081815260200182805461028790610de7565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661035c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610383826104da565b9050806001600160a01b0316836001600160a01b031614156103f15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610353565b336001600160a01b038216148061040d575061040d81336101cc565b61047f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610353565b610489838361062e565b505050565b610498338261069c565b6104b45760405162461bcd60e51b815260040161035390610e22565b610489838383610793565b610489838383604051806020016040528060008152506105f6565b6000818152600260205260408120546001600160a01b0316806102465760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610353565b60006001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610353565b506001600160a01b031660009081526003602052604090205490565b60606001805461025b90610de7565b6105f2338383610933565b5050565b610600338361069c565b61061c5760405162461bcd60e51b815260040161035390610e22565b61062884848484610a02565b50505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610663826104da565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166107155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610353565b6000610720836104da565b9050806001600160a01b0316846001600160a01b0316148061075b5750836001600160a01b0316610750846102de565b6001600160a01b0316145b8061078b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166107a6826104da565b6001600160a01b03161461080e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610353565b6001600160a01b0382166108705760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610353565b61087b60008261062e565b6001600160a01b03831660009081526003602052604081208054600192906108a4908490610e89565b90915550506001600160a01b03821660009081526003602052604081208054600192906108d2908490610ea0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156109955760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610353565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a0d848484610793565b610a1984848484610a35565b6106285760405162461bcd60e51b815260040161035390610eb8565b60006001600160a01b0384163b15610b2857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610a79903390899088908890600401610f0a565b6020604051808303816000875af1925050508015610ab4575060408051601f3d908101601f19168201909252610ab191810190610f47565b60015b610b0e573d808015610ae2576040519150601f19603f3d011682016040523d82523d6000602084013e610ae7565b606091505b508051610b065760405162461bcd60e51b815260040161035390610eb8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061078b565b506001949350505050565b6001600160e01b031981168114610b4957600080fd5b50565b600060208284031215610b5e57600080fd5b8135610b6981610b33565b9392505050565b6000815180845260005b81811015610b9657602081850181015186830182015201610b7a565b81811115610ba8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b696020830184610b70565b600060208284031215610be257600080fd5b5035919050565b80356001600160a01b0381168114610c0057600080fd5b919050565b60008060408385031215610c1857600080fd5b610c2183610be9565b946020939093013593505050565b600080600060608486031215610c4457600080fd5b610c4d84610be9565b9250610c5b60208501610be9565b9150604084013590509250925092565b600060208284031215610c7d57600080fd5b610b6982610be9565b60008060408385031215610c9957600080fd5b610ca283610be9565b915060208301358015158114610cb757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cee57600080fd5b610cf785610be9565b9350610d0560208601610be9565b925060408501359150606085013567ffffffffffffffff80821115610d2957600080fd5b818701915087601f830112610d3d57600080fd5b813581811115610d4f57610d4f610cc2565b604051601f8201601f19908116603f01168101908382118183101715610d7757610d77610cc2565b816040528281528a6020848701011115610d9057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610dc757600080fd5b610dd083610be9565b9150610dde60208401610be9565b90509250929050565b600181811c90821680610dfb57607f821691505b60208210811415610e1c57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082821015610e9b57610e9b610e73565b500390565b60008219821115610eb357610eb3610e73565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f3d90830184610b70565b9695505050505050565b600060208284031215610f5957600080fd5b8151610b6981610b3356fea2646970667358221220e78578aa14b989e0f6fb3ffc1037d4189345308a5ae49426feeefcfc2f84c0f764736f6c634300080c0033",
  "deployedSourceMap": "802:12622:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:46;;558:22;540:41;;528:2;513:18;1727:300:24;;;;;;;;2645:81;;;:::i;:::-;;;;;;;:::i;3789:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1643:32:46;;;1625:51;;1613:2;1598:18;3789:217:24;1479:203:46;3327:401:24;;;;;;:::i;:::-;;:::i;:::-;;4516:330;;;;;;:::i;:::-;;:::i;4912:179::-;;;;;;:::i;:::-;;:::i;2348:235::-;;;;;;:::i;:::-;;:::i;2086:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2794:25:46;;;2782:2;2767:18;2086:205:24;2648:177:46;2790:86:24;;;:::i;4073:153::-;;;;;;:::i;:::-;;:::i;5157:320::-;;;;;;:::i;:::-;;:::i;4292:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4412:25:24;;;4389:4;4412:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4292:162;1727:300;1829:4;-1:-1:-1;;;;;;1864:40:24;;-1:-1:-1;;;1864:40:24;;:104;;-1:-1:-1;;;;;;;1920:48:24;;-1:-1:-1;;;1920:48:24;1864:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:10;;;1984:36:24;1845:175;1727:300;-1:-1:-1;;1727:300:24:o;2645:81::-;2682:13;2714:5;2707:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2645:81;:::o;3789:217::-;3865:7;7037:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7037:16:24;3884:73;;;;-1:-1:-1;;;3884:73:24;;5309:2:46;3884:73:24;;;5291:21:46;5348:2;5328:18;;;5321:30;5387:34;5367:18;;;5360:62;-1:-1:-1;;;5438:18:46;;;5431:42;5490:19;;3884:73:24;;;;;;;;;-1:-1:-1;3975:24:24;;;;:15;:24;;;;;;-1:-1:-1;;;;;3975:24:24;;3789:217::o;3327:401::-;3407:13;3423:23;3438:7;3423:14;:23::i;:::-;3407:39;;3470:5;-1:-1:-1;;;;;3464:11:24;:2;-1:-1:-1;;;;;3464:11:24;;;3456:57;;;;-1:-1:-1;;;3456:57:24;;5722:2:46;3456:57:24;;;5704:21:46;5761:2;5741:18;;;5734:30;5800:34;5780:18;;;5773:62;-1:-1:-1;;;5851:18:46;;;5844:31;5892:19;;3456:57:24;5520:397:46;3456:57:24;719:10:7;-1:-1:-1;;;;;3545:21:24;;;;:62;;-1:-1:-1;3570:37:24;3587:5;719:10:7;4292:162:24;:::i;3570:37::-;3524:165;;;;-1:-1:-1;;;3524:165:24;;6124:2:46;3524:165:24;;;6106:21:46;6163:2;6143:18;;;6136:30;6202:34;6182:18;;;6175:62;6273:26;6253:18;;;6246:54;6317:19;;3524:165:24;5922:420:46;3524:165:24;3700:21;3709:2;3713:7;3700:8;:21::i;:::-;3397:331;3327:401;;:::o;4516:330::-;4705:41;719:10:7;4738:7:24;4705:18;:41::i;:::-;4697:103;;;;-1:-1:-1;;;4697:103:24;;;;;;;:::i;:::-;4811:28;4821:4;4827:2;4831:7;4811:9;:28::i;4912:179::-;5045:39;5062:4;5068:2;5072:7;5045:39;;;;;;;;;;;;:16;:39::i;2348:235::-;2420:7;2455:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2455:16:24;2489:19;2481:73;;;;-1:-1:-1;;;2481:73:24;;6967:2:46;2481:73:24;;;6949:21:46;7006:2;6986:18;;;6979:30;7045:34;7025:18;;;7018:62;-1:-1:-1;;;7096:18:46;;;7089:39;7145:19;;2481:73:24;6765:405:46;2086:205:24;2158:7;-1:-1:-1;;;;;2185:19:24;;2177:74;;;;-1:-1:-1;;;2177:74:24;;7377:2:46;2177:74:24;;;7359:21:46;7416:2;7396:18;;;7389:30;7455:34;7435:18;;;7428:62;-1:-1:-1;;;7506:18:46;;;7499:40;7556:19;;2177:74:24;7175:406:46;2177:74:24;-1:-1:-1;;;;;;2268:16:24;;;;;:9;:16;;;;;;;2086:205::o;2790:86::-;2830:13;2862:7;2855:14;;;;;:::i;4073:153::-;4167:52;719:10:7;4200:8:24;4210;4167:18;:52::i;:::-;4073:153;;:::o;5157:320::-;5326:41;719:10:7;5359:7:24;5326:18;:41::i;:::-;5318:103;;;;-1:-1:-1;;;5318:103:24;;;;;;;:::i;:::-;5431:39;5445:4;5451:2;5455:7;5464:5;5431:13;:39::i;:::-;5157:320;;;;:::o;10800:171::-;10874:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;10874:29:24;-1:-1:-1;;;;;10874:29:24;;;;;;;;:24;;10927:23;10874:24;10927:14;:23::i;:::-;-1:-1:-1;;;;;10918:46:24;;;;;;;;;;;10800:171;;:::o;7232:344::-;7325:4;7037:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7037:16:24;7341:73;;;;-1:-1:-1;;;7341:73:24;;7788:2:46;7341:73:24;;;7770:21:46;7827:2;7807:18;;;7800:30;7866:34;7846:18;;;7839:62;-1:-1:-1;;;7917:18:46;;;7910:42;7969:19;;7341:73:24;7586:408:46;7341:73:24;7424:13;7440:23;7455:7;7440:14;:23::i;:::-;7424:39;;7492:5;-1:-1:-1;;;;;7481:16:24;:7;-1:-1:-1;;;;;7481:16:24;;:51;;;;7525:7;-1:-1:-1;;;;;7501:31:24;:20;7513:7;7501:11;:20::i;:::-;-1:-1:-1;;;;;7501:31:24;;7481:51;:87;;;-1:-1:-1;;;;;;4412:25:24;;;4389:4;4412:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7536:32;7473:96;7232:344;-1:-1:-1;;;;7232:344:24:o;10129:560::-;10283:4;-1:-1:-1;;;;;10256:31:24;:23;10271:7;10256:14;:23::i;:::-;-1:-1:-1;;;;;10256:31:24;;10248:85;;;;-1:-1:-1;;;10248:85:24;;8201:2:46;10248:85:24;;;8183:21:46;8240:2;8220:18;;;8213:30;8279:34;8259:18;;;8252:62;-1:-1:-1;;;8330:18:46;;;8323:39;8379:19;;10248:85:24;7999:405:46;10248:85:24;-1:-1:-1;;;;;10351:16:24;;10343:65;;;;-1:-1:-1;;;10343:65:24;;8611:2:46;10343:65:24;;;8593:21:46;8650:2;8630:18;;;8623:30;8689:34;8669:18;;;8662:62;-1:-1:-1;;;8740:18:46;;;8733:34;8784:19;;10343:65:24;8409:400:46;10343:65:24;10520:29;10537:1;10541:7;10520:8;:29::i;:::-;-1:-1:-1;;;;;10560:15:24;;;;;;:9;:15;;;;;:20;;10579:1;;10560:15;:20;;10579:1;;10560:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10590:13:24;;;;;;:9;:13;;;;;:18;;10607:1;;10590:13;:18;;10607:1;;10590:18;:::i;:::-;;;;-1:-1:-1;;10618:16:24;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10618:21:24;-1:-1:-1;;;;;10618:21:24;;;;;;;;;10655:27;;10618:16;;10655:27;;;;;;;10129:560;;;:::o;11106:307::-;11256:8;-1:-1:-1;;;;;11247:17:24;:5;-1:-1:-1;;;;;11247:17:24;;;11239:55;;;;-1:-1:-1;;;11239:55:24;;9411:2:46;11239:55:24;;;9393:21:46;9450:2;9430:18;;;9423:30;9489:27;9469:18;;;9462:55;9534:18;;11239:55:24;9209:349:46;11239:55:24;-1:-1:-1;;;;;11304:25:24;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11304:46:24;;;;;;;;;;11365:41;;540::46;;;11365::24;;513:18:46;11365:41:24;;;;;;;11106:307;;;:::o;6339:::-;6490:28;6500:4;6506:2;6510:7;6490:9;:28::i;:::-;6536:48;6559:4;6565:2;6569:7;6578:5;6536:22;:48::i;:::-;6528:111;;;;-1:-1:-1;;;6528:111:24;;;;;;;:::i;11966:778::-;12116:4;-1:-1:-1;;;;;12136:13:24;;1087:20:6;1133:8;12132:606:24;;12171:72;;-1:-1:-1;;;12171:72:24;;-1:-1:-1;;;;;12171:36:24;;;;;:72;;719:10:7;;12222:4:24;;12228:7;;12237:5;;12171:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12171:72:24;;;;;;;;-1:-1:-1;;12171:72:24;;;;;;;;;;;;:::i;:::-;;;12167:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12410:13:24;;12406:266;;12452:60;;-1:-1:-1;;;12452:60:24;;;;;;;:::i;12406:266::-;12624:6;12618:13;12609:6;12605:2;12601:15;12594:38;12167:519;-1:-1:-1;;;;;;12293:51:24;-1:-1:-1;;;12293:51:24;;-1:-1:-1;12286:58:24;;12132:606;-1:-1:-1;12723:4:24;11966:778;;;;;;:::o;14:131:46:-;-1:-1:-1;;;;;;88:32:46;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:46:o;592:472::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:162;748:6;745:1;742:13;734:162;;;810:4;866:13;;;862:22;;856:29;838:11;;;834:20;;827:59;763:12;734:162;;;914:6;911:1;908:13;905:87;;;980:1;973:4;964:6;959:3;955:16;951:27;944:38;905:87;-1:-1:-1;1046:2:46;1025:15;-1:-1:-1;;1021:29:46;1012:39;;;;1053:4;1008:50;;592:472;-1:-1:-1;;592:472:46:o;1069:220::-;1218:2;1207:9;1200:21;1181:4;1238:45;1279:2;1268:9;1264:18;1256:6;1238:45;:::i;1294:180::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;-1:-1:-1;1445:23:46;;1294:180;-1:-1:-1;1294:180:46:o;1687:173::-;1755:20;;-1:-1:-1;;;;;1804:31:46;;1794:42;;1784:70;;1850:1;1847;1840:12;1784:70;1687:173;;;:::o;1865:254::-;1933:6;1941;1994:2;1982:9;1973:7;1969:23;1965:32;1962:52;;;2010:1;2007;2000:12;1962:52;2033:29;2052:9;2033:29;:::i;:::-;2023:39;2109:2;2094:18;;;;2081:32;;-1:-1:-1;;;1865:254:46:o;2124:328::-;2201:6;2209;2217;2270:2;2258:9;2249:7;2245:23;2241:32;2238:52;;;2286:1;2283;2276:12;2238:52;2309:29;2328:9;2309:29;:::i;:::-;2299:39;;2357:38;2391:2;2380:9;2376:18;2357:38;:::i;:::-;2347:48;;2442:2;2431:9;2427:18;2414:32;2404:42;;2124:328;;;;;:::o;2457:186::-;2516:6;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;2608:29;2627:9;2608:29;:::i;2830:347::-;2895:6;2903;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;:::-;2985:39;;3074:2;3063:9;3059:18;3046:32;3121:5;3114:13;3107:21;3100:5;3097:32;3087:60;;3143:1;3140;3133:12;3087:60;3166:5;3156:15;;;2830:347;;;;;:::o;3182:127::-;3243:10;3238:3;3234:20;3231:1;3224:31;3274:4;3271:1;3264:15;3298:4;3295:1;3288:15;3314:1138;3409:6;3417;3425;3433;3486:3;3474:9;3465:7;3461:23;3457:33;3454:53;;;3503:1;3500;3493:12;3454:53;3526:29;3545:9;3526:29;:::i;:::-;3516:39;;3574:38;3608:2;3597:9;3593:18;3574:38;:::i;:::-;3564:48;;3659:2;3648:9;3644:18;3631:32;3621:42;;3714:2;3703:9;3699:18;3686:32;3737:18;3778:2;3770:6;3767:14;3764:34;;;3794:1;3791;3784:12;3764:34;3832:6;3821:9;3817:22;3807:32;;3877:7;3870:4;3866:2;3862:13;3858:27;3848:55;;3899:1;3896;3889:12;3848:55;3935:2;3922:16;3957:2;3953;3950:10;3947:36;;;3963:18;;:::i;:::-;4038:2;4032:9;4006:2;4092:13;;-1:-1:-1;;4088:22:46;;;4112:2;4084:31;4080:40;4068:53;;;4136:18;;;4156:22;;;4133:46;4130:72;;;4182:18;;:::i;:::-;4222:10;4218:2;4211:22;4257:2;4249:6;4242:18;4297:7;4292:2;4287;4283;4279:11;4275:20;4272:33;4269:53;;;4318:1;4315;4308:12;4269:53;4374:2;4369;4365;4361:11;4356:2;4348:6;4344:15;4331:46;4419:1;4414:2;4409;4401:6;4397:15;4393:24;4386:35;4440:6;4430:16;;;;;;;3314:1138;;;;;;;:::o;4457:260::-;4525:6;4533;4586:2;4574:9;4565:7;4561:23;4557:32;4554:52;;;4602:1;4599;4592:12;4554:52;4625:29;4644:9;4625:29;:::i;:::-;4615:39;;4673:38;4707:2;4696:9;4692:18;4673:38;:::i;:::-;4663:48;;4457:260;;;;;:::o;4722:380::-;4801:1;4797:12;;;;4844;;;4865:61;;4919:4;4911:6;4907:17;4897:27;;4865:61;4972:2;4964:6;4961:14;4941:18;4938:38;4935:161;;;5018:10;5013:3;5009:20;5006:1;4999:31;5053:4;5050:1;5043:15;5081:4;5078:1;5071:15;4935:161;;4722:380;;;:::o;6347:413::-;6549:2;6531:21;;;6588:2;6568:18;;;6561:30;6627:34;6622:2;6607:18;;6600:62;-1:-1:-1;;;6693:2:46;6678:18;;6671:47;6750:3;6735:19;;6347:413::o;8814:127::-;8875:10;8870:3;8866:20;8863:1;8856:31;8906:4;8903:1;8896:15;8930:4;8927:1;8920:15;8946:125;8986:4;9014:1;9011;9008:8;9005:34;;;9019:18;;:::i;:::-;-1:-1:-1;9056:9:46;;8946:125::o;9076:128::-;9116:3;9147:1;9143:6;9140:1;9137:13;9134:39;;;9153:18;;:::i;:::-;-1:-1:-1;9189:9:46;;9076:128::o;9563:414::-;9765:2;9747:21;;;9804:2;9784:18;;;9777:30;9843:34;9838:2;9823:18;;9816:62;-1:-1:-1;;;9909:2:46;9894:18;;9887:48;9967:3;9952:19;;9563:414::o;9982:489::-;-1:-1:-1;;;;;10251:15:46;;;10233:34;;10303:15;;10298:2;10283:18;;10276:43;10350:2;10335:18;;10328:34;;;10398:3;10393:2;10378:18;;10371:31;;;10176:4;;10419:46;;10445:19;;10437:6;10419:46;:::i;:::-;10411:54;9982:489;-1:-1:-1;;;;;;9982:489:46:o;10476:249::-;10545:6;10598:2;10586:9;10577:7;10573:23;10569:32;10566:52;;;10614:1;10611;10604:12;10566:52;10646:9;10640:16;10665:30;10689:5;10665:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    802,
    13424
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH2 0x134 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x109 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x182 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x246 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x25B SWAP1 PUSH2 0xDE7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 DUP3 PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x40D JUMPI POP PUSH2 0x40D DUP2 CALLER PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x489 DUP4 DUP4 PUSH2 0x62E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x498 CALLER DUP3 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x4B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x489 DUP4 DUP4 DUP4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x489 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x25B SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x5F2 CALLER DUP4 DUP4 PUSH2 0x933 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x600 CALLER DUP4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x628 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x663 DUP3 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x720 DUP4 PUSH2 0x4DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x75B JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x750 DUP5 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x78B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A6 DUP3 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x353 JUMP JUMPDEST PUSH2 0x87B PUSH1 0x0 DUP3 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8A4 SWAP1 DUP5 SWAP1 PUSH2 0xE89 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x8D2 SWAP1 DUP5 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA0D DUP5 DUP5 DUP5 PUSH2 0x793 JUMP JUMPDEST PUSH2 0xA19 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xA79 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAB4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAB1 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB0E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x78B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB69 DUP2 PUSH2 0xB33 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xB7A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB69 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC21 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC4D DUP5 PUSH2 0xBE9 JUMP JUMPDEST SWAP3 POP PUSH2 0xC5B PUSH1 0x20 DUP6 ADD PUSH2 0xBE9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB69 DUP3 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA2 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF7 DUP6 PUSH2 0xBE9 JUMP JUMPDEST SWAP4 POP PUSH2 0xD05 PUSH1 0x20 DUP7 ADD PUSH2 0xBE9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4F PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xD77 JUMPI PUSH2 0xD77 PUSH2 0xCC2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xD90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD0 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDE PUSH1 0x20 DUP5 ADD PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDFB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0xE73 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEB3 PUSH2 0xE73 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xF3D SWAP1 DUP4 ADD DUP5 PUSH2 0xB70 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB69 DUP2 PUSH2 0xB33 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 DUP6 PUSH25 0xAA14B989E0F6FB3FFC1037D4189345308A5AE49426FEEEFCFC 0x2F DUP5 0xC0 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "GT",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6352211E"
    },
    "49": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15C"
    },
    "53": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16F"
    },
    "64": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x190"
    },
    "75": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA22CB465"
    },
    "82": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x198"
    },
    "86": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xB88D4FDE"
    },
    "93": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AB"
    },
    "97": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1BE"
    },
    "108": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "112": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "REVERT",
      "path": "24"
    },
    "113": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "114": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "115": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x1FFC9A7"
    },
    "120": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "121": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "125": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "126": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6FDDE03"
    },
    "131": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "132": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE1"
    },
    "135": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "136": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "137": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x81812FC"
    },
    "142": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF6"
    },
    "146": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "147": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "148": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x95EA7B3"
    },
    "153": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x121"
    },
    "157": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "158": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "159": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x23B872DD"
    },
    "164": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "165": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x136"
    },
    "168": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "169": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "170": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x42842E0E"
    },
    "175": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "EQ",
      "path": "24"
    },
    "176": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x149"
    },
    "179": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "180": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "181": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        802,
        13424
      ],
      "op": "REVERT",
      "path": "24"
    },
    "185": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "186": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCC"
    },
    "189": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC7"
    },
    "192": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "193": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "195": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB4C"
    },
    "198": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMP",
      "path": "24"
    },
    "199": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "200": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1FA"
    },
    "203": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMP",
      "path": "24"
    },
    "204": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "205": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "207": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "208": {
      "op": "SWAP1"
    },
    "209": {
      "op": "ISZERO"
    },
    "210": {
      "op": "ISZERO"
    },
    "211": {
      "op": "DUP2"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "215": {
      "op": "ADD"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "217": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "DUP1",
      "path": "24"
    },
    "221": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "SUB",
      "path": "24"
    },
    "223": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "224": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "RETURN",
      "path": "24"
    },
    "225": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "226": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE9"
    },
    "229": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x24C"
    },
    "232": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2645,
        2726
      ],
      "op": "JUMP",
      "path": "24"
    },
    "233": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "234": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "236": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "237": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD8"
    },
    "240": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "241": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "242": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBBD"
    },
    "245": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2645,
        2726
      ],
      "op": "JUMP",
      "path": "24"
    },
    "246": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "247": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x109"
    },
    "250": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x104"
    },
    "253": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "254": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "256": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBD0"
    },
    "259": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMP",
      "path": "24"
    },
    "260": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "261": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2DE"
    },
    "264": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMP",
      "path": "24"
    },
    "265": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "266": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "268": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "275": {
      "op": "SHL"
    },
    "276": {
      "op": "SUB"
    },
    "277": {
      "op": "SWAP1"
    },
    "278": {
      "op": "SWAP2"
    },
    "279": {
      "op": "AND"
    },
    "280": {
      "op": "DUP2"
    },
    "281": {
      "op": "MSTORE"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "284": {
      "op": "ADD"
    },
    "285": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD8"
    },
    "288": {
      "op": "JUMP"
    },
    "289": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "290": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x134"
    },
    "293": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12F"
    },
    "296": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "297": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "299": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC05"
    },
    "302": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMP",
      "path": "24"
    },
    "303": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "304": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x378"
    },
    "307": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMP",
      "path": "24"
    },
    "308": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "309": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "STOP",
      "path": "24"
    },
    "310": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "311": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x134"
    },
    "314": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "318": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC2F"
    },
    "323": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4516,
        4846
      ],
      "op": "JUMP",
      "path": "24"
    },
    "324": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "325": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x48E"
    },
    "328": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4516,
        4846
      ],
      "op": "JUMP",
      "path": "24"
    },
    "329": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "330": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x134"
    },
    "333": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x157"
    },
    "336": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "337": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "339": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC2F"
    },
    "342": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        4912,
        5091
      ],
      "op": "JUMP",
      "path": "24"
    },
    "343": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "344": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4BF"
    },
    "347": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        4912,
        5091
      ],
      "op": "JUMP",
      "path": "24"
    },
    "348": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "349": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x109"
    },
    "352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16A"
    },
    "355": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "356": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "358": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBD0"
    },
    "361": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2348,
        2583
      ],
      "op": "JUMP",
      "path": "24"
    },
    "362": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "363": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DA"
    },
    "366": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2348,
        2583
      ],
      "op": "JUMP",
      "path": "24"
    },
    "367": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "368": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x182"
    },
    "371": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17D"
    },
    "374": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "377": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC6B"
    },
    "380": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMP",
      "path": "24"
    },
    "381": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x551"
    },
    "385": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMP",
      "path": "24"
    },
    "386": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "387": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "390": {
      "op": "SWAP1"
    },
    "391": {
      "op": "DUP2"
    },
    "392": {
      "op": "MSTORE"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "395": {
      "op": "ADD"
    },
    "396": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD8"
    },
    "399": {
      "op": "JUMP"
    },
    "400": {
      "fn": "ERC721.symbol",
      "offset": [
        2790,
        2876
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "401": {
      "fn": "ERC721.symbol",
      "offset": [
        2790,
        2876
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE9"
    },
    "404": {
      "fn": "ERC721.symbol",
      "offset": [
        2790,
        2876
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5D8"
    },
    "407": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2790,
        2876
      ],
      "op": "JUMP",
      "path": "24"
    },
    "408": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "409": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x134"
    },
    "412": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A6"
    },
    "415": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "416": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "418": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC86"
    },
    "421": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4073,
        4226
      ],
      "op": "JUMP",
      "path": "24"
    },
    "422": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5E7"
    },
    "426": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4073,
        4226
      ],
      "op": "JUMP",
      "path": "24"
    },
    "427": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "428": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x134"
    },
    "431": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCD8"
    },
    "440": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5157,
        5477
      ],
      "op": "JUMP",
      "path": "24"
    },
    "441": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5F6"
    },
    "445": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5157,
        5477
      ],
      "op": "JUMP",
      "path": "24"
    },
    "446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "447": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCC"
    },
    "450": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1CC"
    },
    "453": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "454": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "456": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDB4"
    },
    "459": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4292,
        4454
      ],
      "op": "JUMP",
      "path": "24"
    },
    "460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "467": {
      "op": "SHL"
    },
    "468": {
      "op": "SUB"
    },
    "469": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "SWAP2",
      "path": "24",
      "statement": 0
    },
    "470": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP3",
      "path": "24"
    },
    "471": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "AND",
      "path": "24"
    },
    "472": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4389,
        4393
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "475": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP2",
      "path": "24"
    },
    "476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4430
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "479": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "481": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "482": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP2",
      "path": "24"
    },
    "483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "484": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "486": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP1",
      "path": "24"
    },
    "487": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP4",
      "path": "24"
    },
    "488": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "489": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "490": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "AND",
      "path": "24"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "DUP3",
      "path": "24"
    },
    "494": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "497": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "498": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "503": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "AND",
      "path": "24"
    },
    "504": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "JUMP",
      "path": "24"
    },
    "506": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "507": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1829,
        1833
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "515": {
      "op": "SHL"
    },
    "516": {
      "op": "SUB"
    },
    "517": {
      "op": "NOT"
    },
    "518": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1904
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 1
    },
    "519": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1904
      ],
      "op": "AND",
      "path": "24"
    },
    "520": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "527": {
      "op": "SHL"
    },
    "528": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1904
      ],
      "op": "EQ",
      "path": "24"
    },
    "529": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1904
      ],
      "op": "DUP1",
      "path": "24"
    },
    "530": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1968
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x22B"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1968
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "541": {
      "op": "SHL"
    },
    "542": {
      "op": "SUB"
    },
    "543": {
      "op": "NOT"
    },
    "544": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1920,
        1968
      ],
      "op": "DUP3",
      "path": "24"
    },
    "545": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1920,
        1968
      ],
      "op": "AND",
      "path": "24"
    },
    "546": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1920,
        1968
      ],
      "op": "EQ",
      "path": "24"
    },
    "555": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        1968
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "556": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        2020
      ],
      "op": "DUP1",
      "path": "24"
    },
    "557": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        2020
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x246"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1864,
        2020
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "561": {
      "op": "POP"
    },
    "562": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "569": {
      "op": "SHL"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "op": "SUB"
    },
    "578": {
      "op": "NOT"
    },
    "579": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 2
    },
    "580": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "10"
    },
    "581": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "10"
    },
    "582": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1984,
        2020
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "583": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1845,
        2020
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "584": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1727,
        2027
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1727,
        2027
      ],
      "op": "JUMP",
      "path": "24"
    },
    "588": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "589": {
      "fn": "ERC721.name",
      "offset": [
        2682,
        2695
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "591": {
      "fn": "ERC721.name",
      "offset": [
        2714,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 3,
      "value": "0x0"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "595": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x25B"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDE7"
    },
    "602": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMP",
      "path": "24"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "605": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "607": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "611": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DIV",
      "path": "24"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MUL",
      "path": "24"
    },
    "614": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "620": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "623": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "629": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP3",
      "path": "24"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x287"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDE7"
    },
    "646": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMP",
      "path": "24"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D4"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "LT",
      "path": "24"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2A9"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP4",
      "path": "24"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DIV",
      "path": "24"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MUL",
      "path": "24"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP4",
      "path": "24"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D4"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMP",
      "path": "24"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP3",
      "path": "24"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP2",
      "path": "24"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP1",
      "path": "24"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP4",
      "path": "24"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "GT",
      "path": "24"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B7"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP3",
      "path": "24"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SUB",
      "path": "24"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "AND",
      "path": "24"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "DUP3",
      "path": "24"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "ADD",
      "path": "24"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "724": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "POP",
      "path": "24"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "POP",
      "path": "24"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "POP",
      "path": "24"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "POP",
      "path": "24"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "POP",
      "path": "24"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2707,
        2719
      ],
      "op": "POP",
      "path": "24"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2645,
        2726
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "733": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2645,
        2726
      ],
      "op": "JUMP",
      "path": "24"
    },
    "734": {
      "fn": "ERC721.getApproved",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "735": {
      "fn": "ERC721.getApproved",
      "offset": [
        3865,
        3872
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "737": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 4
    },
    "738": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "739": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "740": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7044
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "742": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "744": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "745": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "747": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "748": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "749": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "op": "SUB"
    },
    "758": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "AND",
      "path": "24"
    },
    "759": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 5,
      "value": "0x35C"
    },
    "762": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "763": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "765": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "766": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "770": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "772": {
      "op": "SHL"
    },
    "773": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "DUP2",
      "path": "24"
    },
    "774": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "777": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "779": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "DUP3",
      "path": "24"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "ADD",
      "path": "24"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "786": {
      "op": "DUP3"
    },
    "787": {
      "op": "ADD"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "824": {
      "op": "DUP3"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "840": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "842": {
      "op": "SHL"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "845": {
      "op": "DUP3"
    },
    "846": {
      "op": "ADD"
    },
    "847": {
      "op": "MSTORE"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "850": {
      "op": "ADD"
    },
    "851": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "852": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "854": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "855": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "DUP1",
      "path": "24"
    },
    "856": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "857": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "SUB",
      "path": "24"
    },
    "858": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "859": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "24"
    },
    "860": {
      "fn": "ERC721.getApproved",
      "offset": [
        3884,
        3957
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 6,
      "value": "0x0"
    },
    "864": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "865": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "DUP2",
      "path": "24"
    },
    "866": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "867": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3990
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "869": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "871": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "872": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "874": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "875": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "876": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "883": {
      "op": "SHL"
    },
    "884": {
      "op": "SUB"
    },
    "885": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "AND",
      "path": "24"
    },
    "886": {
      "fn": "ERC721.getApproved",
      "offset": [
        3975,
        3999
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "887": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3789,
        4006
      ],
      "op": "JUMP",
      "path": "24"
    },
    "888": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "889": {
      "fn": "ERC721.approve",
      "offset": [
        3407,
        3420
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC721.approve",
      "offset": [
        3423,
        3446
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x383"
    },
    "894": {
      "fn": "ERC721.approve",
      "offset": [
        3438,
        3445
      ],
      "op": "DUP3",
      "path": "24"
    },
    "895": {
      "fn": "ERC721.approve",
      "offset": [
        3423,
        3437
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DA"
    },
    "898": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3423,
        3446
      ],
      "op": "JUMP",
      "path": "24"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3423,
        3446
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "900": {
      "fn": "ERC721.approve",
      "offset": [
        3407,
        3446
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "901": {
      "fn": "ERC721.approve",
      "offset": [
        3407,
        3446
      ],
      "op": "POP",
      "path": "24"
    },
    "902": {
      "fn": "ERC721.approve",
      "offset": [
        3470,
        3475
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 7
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "fn": "ERC721.approve",
      "offset": [
        3464,
        3475
      ],
      "op": "AND",
      "path": "24"
    },
    "912": {
      "fn": "ERC721.approve",
      "offset": [
        3464,
        3466
      ],
      "op": "DUP4",
      "path": "24"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "919": {
      "op": "SHL"
    },
    "920": {
      "op": "SUB"
    },
    "921": {
      "fn": "ERC721.approve",
      "offset": [
        3464,
        3475
      ],
      "op": "AND",
      "path": "24"
    },
    "922": {
      "fn": "ERC721.approve",
      "offset": [
        3464,
        3475
      ],
      "op": "EQ",
      "path": "24"
    },
    "923": {
      "branch": 41,
      "fn": "ERC721.approve",
      "offset": [
        3464,
        3475
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "924": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3F1"
    },
    "927": {
      "branch": 41,
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "928": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "930": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "DUP2",
      "path": "24"
    },
    "939": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "944": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "DUP3",
      "path": "24"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "ADD",
      "path": "24"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "989": {
      "op": "DUP3"
    },
    "990": {
      "op": "ADD"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1008": {
      "op": "JUMP"
    },
    "1009": {
      "fn": "ERC721.approve",
      "offset": [
        3456,
        3513
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1010": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 8
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3566
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 9
    },
    "1020": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3566
      ],
      "op": "AND",
      "path": "24"
    },
    "1021": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3566
      ],
      "op": "EQ",
      "path": "24"
    },
    "1022": {
      "branch": 42,
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3566
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1023": {
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x40D"
    },
    "1026": {
      "branch": 42,
      "fn": "ERC721.approve",
      "offset": [
        3545,
        3607
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "fn": "ERC721.approve",
      "offset": [
        3570,
        3607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x40D"
    },
    "1031": {
      "fn": "ERC721.approve",
      "offset": [
        3587,
        3592
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1032": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1033": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4292,
        4454
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1CC"
    },
    "1036": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4292,
        4454
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1037": {
      "branch": 43,
      "fn": "ERC721.approve",
      "offset": [
        3570,
        3607
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1038": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x47F"
    },
    "1041": {
      "branch": 43,
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1042": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1044": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1053": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1056": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1058": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1059": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "ADD",
      "path": "24"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1065": {
      "op": "DUP3"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "MSTORE"
    },
    "1068": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1103": {
      "op": "DUP3"
    },
    "1104": {
      "op": "ADD"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1141": {
      "op": "DUP3"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1150": {
      "op": "JUMP"
    },
    "1151": {
      "fn": "ERC721.approve",
      "offset": [
        3524,
        3689
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1152": {
      "fn": "ERC721.approve",
      "offset": [
        3700,
        3721
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 10,
      "value": "0x489"
    },
    "1155": {
      "fn": "ERC721.approve",
      "offset": [
        3709,
        3711
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1156": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3720
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1157": {
      "fn": "ERC721.approve",
      "offset": [
        3700,
        3708
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x62E"
    },
    "1160": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3700,
        3721
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1161": {
      "fn": "ERC721.approve",
      "offset": [
        3700,
        3721
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1162": {
      "fn": "ERC721.approve",
      "offset": [
        3397,
        3728
      ],
      "op": "POP",
      "path": "24"
    },
    "1163": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "POP",
      "path": "24"
    },
    "1164": {
      "fn": "ERC721.approve",
      "offset": [
        3327,
        3728
      ],
      "op": "POP",
      "path": "24"
    },
    "1165": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3327,
        3728
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1166": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4516,
        4846
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1167": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4705,
        4746
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 11,
      "value": "0x498"
    },
    "1170": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4738,
        4745
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1172": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4705,
        4723
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x69C"
    },
    "1175": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4705,
        4746
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1176": {
      "branch": 44,
      "fn": "ERC721.transferFrom",
      "offset": [
        4705,
        4746
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1177": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4B4"
    },
    "1180": {
      "branch": 44,
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1181": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1183": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1184": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1190": {
      "op": "SHL"
    },
    "1191": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1192": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1193": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1195": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "ADD",
      "path": "24"
    },
    "1196": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1199": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE22"
    },
    "1203": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4697,
        4800
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4697,
        4800
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1205": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4811,
        4839
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 12,
      "value": "0x489"
    },
    "1208": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4821,
        4825
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1209": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4827,
        4829
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1210": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4831,
        4838
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4811,
        4820
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x793"
    },
    "1214": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4811,
        4839
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1215": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        4912,
        5091
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1216": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 13,
      "value": "0x489"
    },
    "1219": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5062,
        5066
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1220": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5068,
        5070
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1221": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5072,
        5079
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1222": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1225": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1226": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "ADD",
      "path": "24"
    },
    "1229": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1231": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5084
      ],
      "op": "POP",
      "path": "24"
    },
    "1238": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5045,
        5061
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5F6"
    },
    "1241": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5045,
        5084
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1242": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2348,
        2583
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1243": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2420,
        2427
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1245": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1246": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1247": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1248": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1250": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1252": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1253": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1255": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1256": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2455,
        2471
      ],
      "op": "AND",
      "path": "24"
    },
    "1267": {
      "branch": 45,
      "fn": "ERC721.ownerOf",
      "offset": [
        2489,
        2508
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 14
    },
    "1268": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x246"
    },
    "1271": {
      "branch": 45,
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1274": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1281": {
      "op": "SHL"
    },
    "1282": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1283": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "ADD",
      "path": "24"
    },
    "1290": {
      "op": "MSTORE"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1295": {
      "op": "DUP3"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "MSTORE"
    },
    "1298": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1333": {
      "op": "DUP3"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1356": {
      "op": "ADD"
    },
    "1357": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1360": {
      "op": "JUMP"
    },
    "1361": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1362": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2158,
        2165
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1370": {
      "op": "SHL"
    },
    "1371": {
      "op": "SUB"
    },
    "1372": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2185,
        2204
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 15
    },
    "1373": {
      "branch": 46,
      "fn": "ERC721.balanceOf",
      "offset": [
        2185,
        2204
      ],
      "op": "AND",
      "path": "24"
    },
    "1374": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5BC"
    },
    "1377": {
      "branch": 46,
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1380": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "ADD",
      "path": "24"
    },
    "1396": {
      "op": "MSTORE"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1401": {
      "op": "DUP3"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1439": {
      "op": "DUP3"
    },
    "1440": {
      "op": "ADD"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2177,
        2251
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1476": {
      "op": "SHL"
    },
    "1477": {
      "op": "SUB"
    },
    "1478": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "AND",
      "path": "24",
      "statement": 16
    },
    "1479": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1482": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1483": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1484": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2277
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1486": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1489": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1492": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1493": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1494": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2268,
        2284
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1495": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        2086,
        2291
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1496": {
      "fn": "ERC721.symbol",
      "offset": [
        2790,
        2876
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1497": {
      "fn": "ERC721.symbol",
      "offset": [
        2830,
        2843
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "1499": {
      "fn": "ERC721.symbol",
      "offset": [
        2862,
        2869
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0x1"
    },
    "1501": {
      "fn": "ERC721.symbol",
      "offset": [
        2855,
        2869
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1502": {
      "fn": "ERC721.symbol",
      "offset": [
        2855,
        2869
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1503": {
      "fn": "ERC721.symbol",
      "offset": [
        2855,
        2869
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x25B"
    },
    "1506": {
      "fn": "ERC721.symbol",
      "offset": [
        2855,
        2869
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1507": {
      "fn": "ERC721.symbol",
      "offset": [
        2855,
        2869
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDE7"
    },
    "1510": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2855,
        2869
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1511": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1512": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4167,
        4219
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 18,
      "value": "0x5F2"
    },
    "1515": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4200,
        4208
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1517": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4210,
        4218
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1518": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4167,
        4185
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x933"
    },
    "1521": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4167,
        4219
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1522": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4167,
        4219
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1523": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "POP",
      "path": "24"
    },
    "1524": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4073,
        4226
      ],
      "op": "POP",
      "path": "24"
    },
    "1525": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4073,
        4226
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5326,
        5367
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 19,
      "value": "0x600"
    },
    "1530": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5359,
        5366
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5326,
        5344
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x69C"
    },
    "1535": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5326,
        5367
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1536": {
      "branch": 47,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5326,
        5367
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x61C"
    },
    "1540": {
      "branch": 47,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1543": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1550": {
      "op": "SHL"
    },
    "1551": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1552": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "ADD",
      "path": "24"
    },
    "1556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1559": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE22"
    },
    "1563": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5318,
        5421
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1564": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5318,
        5421
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1565": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5431,
        5470
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 20,
      "value": "0x628"
    },
    "1568": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5445,
        5449
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1569": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5451,
        5453
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1570": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5455,
        5462
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1571": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5464,
        5469
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5431,
        5444
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA02"
    },
    "1575": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5431,
        5470
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5431,
        5470
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "POP",
      "path": "24"
    },
    "1578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "POP",
      "path": "24"
    },
    "1579": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "POP",
      "path": "24"
    },
    "1580": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5157,
        5477
      ],
      "op": "POP",
      "path": "24"
    },
    "1581": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5157,
        5477
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1582": {
      "fn": "ERC721._approve",
      "offset": [
        10800,
        10971
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1583": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 21,
      "value": "0x0"
    },
    "1585": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1586": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1587": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1588": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10889
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1590": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1592": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1593": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1595": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1596": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1597": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1598": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "SUB"
    },
    "1607": {
      "op": "NOT"
    },
    "1608": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "AND",
      "path": "24"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1618": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "AND",
      "path": "24"
    },
    "1619": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1620": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1621": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "OR",
      "path": "24"
    },
    "1622": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1623": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1624": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10903
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1625": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1626": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1627": {
      "fn": "ERC721._approve",
      "offset": [
        10927,
        10950
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 22,
      "value": "0x663"
    },
    "1630": {
      "fn": "ERC721._approve",
      "offset": [
        10874,
        10898
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1631": {
      "fn": "ERC721._approve",
      "offset": [
        10927,
        10941
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DA"
    },
    "1634": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        10927,
        10950
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1635": {
      "fn": "ERC721._approve",
      "offset": [
        10927,
        10950
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "AND",
      "path": "24"
    },
    "1645": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1678": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1680": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1681": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1683": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1684": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1685": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1686": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "SUB",
      "path": "24"
    },
    "1687": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1688": {
      "fn": "ERC721._approve",
      "offset": [
        10918,
        10964
      ],
      "op": "LOG4",
      "path": "24"
    },
    "1689": {
      "fn": "ERC721._approve",
      "offset": [
        10800,
        10971
      ],
      "op": "POP",
      "path": "24"
    },
    "1690": {
      "fn": "ERC721._approve",
      "offset": [
        10800,
        10971
      ],
      "op": "POP",
      "path": "24"
    },
    "1691": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10800,
        10971
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1692": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7232,
        7576
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1693": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7325,
        7329
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1695": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1696": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1697": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1698": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7044
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1700": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1702": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1703": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1705": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1706": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1707": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "op": "SUB"
    },
    "1716": {
      "fn": "ERC721._exists",
      "offset": [
        7037,
        7053
      ],
      "op": "AND",
      "path": "24"
    },
    "1717": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 23,
      "value": "0x715"
    },
    "1720": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1721": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1723": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1732": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1735": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1737": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1738": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "ADD",
      "path": "24"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1744": {
      "op": "DUP3"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1782": {
      "op": "DUP3"
    },
    "1783": {
      "op": "ADD"
    },
    "1784": {
      "op": "MSTORE"
    },
    "1785": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1803": {
      "op": "DUP3"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "op": "MSTORE"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1808": {
      "op": "ADD"
    },
    "1809": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "1812": {
      "op": "JUMP"
    },
    "1813": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7341,
        7414
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1814": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7424,
        7437
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1816": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7440,
        7463
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x720"
    },
    "1819": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7455,
        7462
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1820": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7440,
        7454
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DA"
    },
    "1823": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7440,
        7463
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1824": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7440,
        7463
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1825": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7424,
        7463
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1826": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7424,
        7463
      ],
      "op": "POP",
      "path": "24"
    },
    "1827": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7492,
        7497
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 24
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "op": "SUB"
    },
    "1836": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7497
      ],
      "op": "AND",
      "path": "24"
    },
    "1837": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7488
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1844": {
      "op": "SHL"
    },
    "1845": {
      "op": "SUB"
    },
    "1846": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7497
      ],
      "op": "AND",
      "path": "24"
    },
    "1847": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7497
      ],
      "op": "EQ",
      "path": "24"
    },
    "1848": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7532
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1849": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7532
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x75B"
    },
    "1852": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7532
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1853": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7532
      ],
      "op": "POP",
      "path": "24"
    },
    "1854": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7525,
        7532
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "op": "SUB"
    },
    "1863": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7501,
        7532
      ],
      "op": "AND",
      "path": "24"
    },
    "1864": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7501,
        7521
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x750"
    },
    "1867": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7513,
        7520
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1868": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7501,
        7512
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2DE"
    },
    "1871": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7501,
        7521
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1872": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7501,
        7521
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7501,
        7532
      ],
      "op": "AND",
      "path": "24"
    },
    "1882": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7501,
        7532
      ],
      "op": "EQ",
      "path": "24"
    },
    "1883": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7532
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1884": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7568
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1885": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7568
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x78B"
    },
    "1888": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7481,
        7568
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "op": "SUB"
    },
    "1898": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1899": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1900": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "AND",
      "path": "24"
    },
    "1901": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4389,
        4393
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1903": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1904": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1905": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1906": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4430
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "1908": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1910": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1911": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1912": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1913": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1916": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1917": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4437
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1918": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1919": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "DUP9",
      "path": "24"
    },
    "1920": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "AND",
      "path": "24"
    },
    "1921": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1922": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1923": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1924": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1925": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1926": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1927": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1928": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "1930": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4412,
        4447
      ],
      "op": "AND",
      "path": "24"
    },
    "1931": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7568
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1932": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7473,
        7569
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "1933": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7232,
        7576
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7232,
        7576
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1939": {
      "fn": "ERC721._transfer",
      "offset": [
        10129,
        10689
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1940": {
      "fn": "ERC721._transfer",
      "offset": [
        10283,
        10287
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 25
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "fn": "ERC721._transfer",
      "offset": [
        10256,
        10287
      ],
      "op": "AND",
      "path": "24"
    },
    "1950": {
      "fn": "ERC721._transfer",
      "offset": [
        10256,
        10279
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7A6"
    },
    "1953": {
      "fn": "ERC721._transfer",
      "offset": [
        10271,
        10278
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1954": {
      "fn": "ERC721._transfer",
      "offset": [
        10256,
        10270
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4DA"
    },
    "1957": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10256,
        10279
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1958": {
      "fn": "ERC721._transfer",
      "offset": [
        10256,
        10279
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "op": "SUB"
    },
    "1967": {
      "fn": "ERC721._transfer",
      "offset": [
        10256,
        10287
      ],
      "op": "AND",
      "path": "24"
    },
    "1968": {
      "branch": 48,
      "fn": "ERC721._transfer",
      "offset": [
        10256,
        10287
      ],
      "op": "EQ",
      "path": "24"
    },
    "1969": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x80E"
    },
    "1972": {
      "branch": 48,
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1973": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1975": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1984": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1987": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1989": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1990": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "ADD",
      "path": "24"
    },
    "1991": {
      "op": "MSTORE"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1996": {
      "op": "DUP3"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "op": "MSTORE"
    },
    "1999": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2034": {
      "op": "DUP3"
    },
    "2035": {
      "op": "ADD"
    },
    "2036": {
      "op": "MSTORE"
    },
    "2037": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2052": {
      "op": "DUP3"
    },
    "2053": {
      "op": "ADD"
    },
    "2054": {
      "op": "MSTORE"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "2061": {
      "op": "JUMP"
    },
    "2062": {
      "fn": "ERC721._transfer",
      "offset": [
        10248,
        10333
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "ERC721._transfer",
      "offset": [
        10351,
        10367
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 26
    },
    "2072": {
      "branch": 49,
      "fn": "ERC721._transfer",
      "offset": [
        10351,
        10367
      ],
      "op": "AND",
      "path": "24"
    },
    "2073": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x870"
    },
    "2076": {
      "branch": 49,
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2077": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2079": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2088": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2091": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2093": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2094": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "ADD",
      "path": "24"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2098": {
      "op": "DUP1"
    },
    "2099": {
      "op": "DUP3"
    },
    "2100": {
      "op": "ADD"
    },
    "2101": {
      "op": "MSTORE"
    },
    "2102": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2137": {
      "op": "DUP3"
    },
    "2138": {
      "op": "ADD"
    },
    "2139": {
      "op": "MSTORE"
    },
    "2140": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2150": {
      "op": "DUP3"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "2159": {
      "op": "JUMP"
    },
    "2160": {
      "fn": "ERC721._transfer",
      "offset": [
        10343,
        10408
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2161": {
      "fn": "ERC721._transfer",
      "offset": [
        10520,
        10549
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 27,
      "value": "0x87B"
    },
    "2164": {
      "fn": "ERC721._transfer",
      "offset": [
        10537,
        10538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2166": {
      "fn": "ERC721._transfer",
      "offset": [
        10541,
        10548
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2167": {
      "fn": "ERC721._transfer",
      "offset": [
        10520,
        10528
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x62E"
    },
    "2170": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10520,
        10549
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2171": {
      "fn": "ERC721._transfer",
      "offset": [
        10520,
        10549
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "SUB"
    },
    "2180": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 28
    },
    "2181": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "AND",
      "path": "24"
    },
    "2182": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2184": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2185": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2186": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2187": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10569
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2189": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2191": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2192": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2194": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2195": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2196": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2197": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2198": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10580
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2200": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10580
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2201": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10575
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2202": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8A4"
    },
    "2205": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2206": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10580
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2207": {
      "fn": "ERC721._transfer",
      "offset": [
        10579,
        10580
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2208": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE89"
    },
    "2211": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10560,
        10580
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2212": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2213": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2214": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2215": {
      "fn": "ERC721._transfer",
      "offset": [
        10560,
        10580
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 29
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "AND",
      "path": "24"
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10599
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2237": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2238": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2240": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2241": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2242": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2243": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10608
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10608
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10603
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2248": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8D2"
    },
    "2251": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10608
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10608
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2254": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEA0"
    },
    "2257": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10590,
        10608
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2258": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2259": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        10590,
        10608
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2262": {
      "op": "POP"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 30,
      "value": "0x0"
    },
    "2266": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2268": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2269": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10625
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2271": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2273": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2274": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2276": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2277": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2278": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2279": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2280": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "op": "SUB"
    },
    "2289": {
      "op": "NOT"
    },
    "2290": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "AND",
      "path": "24"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2297": {
      "op": "SHL"
    },
    "2298": {
      "op": "SUB"
    },
    "2299": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2300": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2301": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "AND",
      "path": "24"
    },
    "2302": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2303": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2304": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "OR",
      "path": "24"
    },
    "2305": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2306": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2307": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10639
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2308": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "SWAP2",
      "path": "24",
      "statement": 31
    },
    "2309": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2310": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2311": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10634
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2312": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2313": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2314": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "AND",
      "path": "24"
    },
    "2315": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2316": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2349": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2350": {
      "fn": "ERC721._transfer",
      "offset": [
        10655,
        10682
      ],
      "op": "LOG4",
      "path": "24"
    },
    "2351": {
      "fn": "ERC721._transfer",
      "offset": [
        10129,
        10689
      ],
      "op": "POP",
      "path": "24"
    },
    "2352": {
      "fn": "ERC721._transfer",
      "offset": [
        10129,
        10689
      ],
      "op": "POP",
      "path": "24"
    },
    "2353": {
      "fn": "ERC721._transfer",
      "offset": [
        10129,
        10689
      ],
      "op": "POP",
      "path": "24"
    },
    "2354": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10129,
        10689
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2355": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11106,
        11413
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2356": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11256,
        11264
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 32
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "op": "SUB"
    },
    "2365": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11247,
        11264
      ],
      "op": "AND",
      "path": "24"
    },
    "2366": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11247,
        11252
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11247,
        11264
      ],
      "op": "AND",
      "path": "24"
    },
    "2376": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11247,
        11264
      ],
      "op": "EQ",
      "path": "24"
    },
    "2377": {
      "branch": 50,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11247,
        11264
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2378": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x995"
    },
    "2381": {
      "branch": 50,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2382": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2384": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2385": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2391": {
      "op": "SHL"
    },
    "2392": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2393": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2398": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2399": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "ADD",
      "path": "24"
    },
    "2400": {
      "op": "MSTORE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "ADD"
    },
    "2445": {
      "op": "MSTORE"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "2452": {
      "op": "JUMP"
    },
    "2453": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11239,
        11294
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "SUB"
    },
    "2462": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 33
    },
    "2463": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2464": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "AND",
      "path": "24"
    },
    "2465": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2467": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2468": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2469": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2470": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11322
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "2472": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2474": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2475": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2476": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2477": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2479": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2480": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2481": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11329
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2482": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2483": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2484": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "AND",
      "path": "24"
    },
    "2485": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2486": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2487": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2488": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2489": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2490": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2491": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2492": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2493": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2494": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11339
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2495": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2496": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2499": {
      "op": "NOT"
    },
    "2500": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "AND",
      "path": "24"
    },
    "2501": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2502": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2503": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2504": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2505": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2506": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "OR",
      "path": "24"
    },
    "2507": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2508": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2509": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11304,
        11350
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2510": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "SWAP2",
      "path": "24",
      "statement": 34
    },
    "2511": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2512": {
      "op": "SWAP2"
    },
    "2513": {
      "op": "DUP3"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2548": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2549": {
      "op": "ADD"
    },
    "2550": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2552": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2553": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2554": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2555": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "SUB",
      "path": "24"
    },
    "2556": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2557": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11365,
        11406
      ],
      "op": "LOG3",
      "path": "24"
    },
    "2558": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11106,
        11413
      ],
      "op": "POP",
      "path": "24"
    },
    "2559": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11106,
        11413
      ],
      "op": "POP",
      "path": "24"
    },
    "2560": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11106,
        11413
      ],
      "op": "POP",
      "path": "24"
    },
    "2561": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11106,
        11413
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2562": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6339,
        6646
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2563": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6490,
        6518
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 35,
      "value": "0xA0D"
    },
    "2566": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6500,
        6504
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2567": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6506,
        6508
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2568": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6510,
        6517
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2569": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6490,
        6499
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x793"
    },
    "2572": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6490,
        6518
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2573": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6490,
        6518
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2574": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6536,
        6584
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 36,
      "value": "0xA19"
    },
    "2577": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6559,
        6563
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2578": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6565,
        6567
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2579": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6569,
        6576
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2580": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6578,
        6583
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2581": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6536,
        6558
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA35"
    },
    "2584": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6536,
        6584
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2585": {
      "branch": 51,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6536,
        6584
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2586": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x628"
    },
    "2589": {
      "branch": 51,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2590": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2592": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2601": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2602": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2604": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "ADD",
      "path": "24"
    },
    "2605": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "2608": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2609": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6528,
        6639
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEB8"
    },
    "2612": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6528,
        6639
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2613": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2614": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12116,
        12120
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "SUB"
    },
    "2624": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12136,
        12149
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2625": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12136,
        12149
      ],
      "op": "AND",
      "path": "24"
    },
    "2626": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "2627": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 37
    },
    "2628": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12132,
        12738
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB28"
    },
    "2631": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12132,
        12738
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2634": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2635": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2644": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12207
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2654": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12207
      ],
      "op": "AND",
      "path": "24"
    },
    "2655": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12207
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2656": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12207
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x150B7A02"
    },
    "2661": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12207
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2662": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA79"
    },
    "2665": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2666": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2667": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2668": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12222,
        12226
      ],
      "op": "DUP10",
      "path": "24"
    },
    "2669": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12222,
        12226
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2670": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12228,
        12235
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2671": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12228,
        12235
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2672": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12242
      ],
      "op": "DUP9",
      "path": "24"
    },
    "2673": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12237,
        12242
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2674": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2676": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "ADD",
      "path": "24"
    },
    "2677": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF0A"
    },
    "2680": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12171,
        12243
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2681": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2682": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2684": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2686": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2687": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2688": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2689": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SUB",
      "path": "24"
    },
    "2690": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2691": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2693": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2694": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "GAS",
      "path": "24"
    },
    "2695": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "CALL",
      "path": "24"
    },
    "2696": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "POP",
      "path": "24"
    },
    "2698": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "POP",
      "path": "24"
    },
    "2699": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "POP",
      "path": "24"
    },
    "2700": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2701": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2702": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAB4"
    },
    "2705": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2706": {
      "op": "POP"
    },
    "2707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2709": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2710": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2711": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2713": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2714": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2715": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2716": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "ADD",
      "path": "24"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2719": {
      "op": "NOT"
    },
    "2720": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "AND",
      "path": "24"
    },
    "2721": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2722": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "ADD",
      "path": "24"
    },
    "2723": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2724": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2725": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2726": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAB1"
    },
    "2729": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2730": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2731": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "ADD",
      "path": "24"
    },
    "2732": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2733": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF47"
    },
    "2736": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12171,
        12243
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2737": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2738": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2740": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12171,
        12243
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2741": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB0E"
    },
    "2744": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2745": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2746": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2747": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2748": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2749": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAE2"
    },
    "2752": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2753": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2755": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2756": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2757": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "POP",
      "path": "24"
    },
    "2758": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2760": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "NOT",
      "path": "24"
    },
    "2761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3F"
    },
    "2763": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2764": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "ADD",
      "path": "24"
    },
    "2765": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "AND",
      "path": "24"
    },
    "2766": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2767": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "ADD",
      "path": "24"
    },
    "2768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2774": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2775": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2777": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2780": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "ADD",
      "path": "24"
    },
    "2781": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAE7"
    },
    "2785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2787": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "POP",
      "path": "24"
    },
    "2791": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12410,
        12423
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2794": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12410,
        12423
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12406,
        12672
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB06"
    },
    "2798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12406,
        12672
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 38,
      "value": "0x40"
    },
    "2801": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2810": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2811": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "ADD",
      "path": "24"
    },
    "2814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x353"
    },
    "2817": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2818": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12452,
        12512
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEB8"
    },
    "2821": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12452,
        12512
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12406,
        12672
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12624,
        12630
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12618,
        12631
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2825": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12609,
        12615
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12616
      ],
      "op": "ADD",
      "path": "24"
    },
    "2829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12594,
        12632
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12167,
        12686
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "op": "SUB"
    },
    "2839": {
      "op": "NOT"
    },
    "2840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12293,
        12344
      ],
      "op": "AND",
      "path": "24",
      "statement": 39
    },
    "2841": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2848": {
      "op": "SHL"
    },
    "2849": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12293,
        12344
      ],
      "op": "EQ",
      "path": "24"
    },
    "2850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12293,
        12344
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2851": {
      "op": "POP"
    },
    "2852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12286,
        12344
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x78B"
    },
    "2855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12286,
        12344
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12132,
        12738
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2857": {
      "op": "POP"
    },
    "2858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12723,
        12727
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 40,
      "value": "0x1"
    },
    "2860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2861": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "POP",
      "path": "24"
    },
    "2863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "POP",
      "path": "24"
    },
    "2864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "POP",
      "path": "24"
    },
    "2865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11966,
        12744
      ],
      "op": "POP",
      "path": "24"
    },
    "2866": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11966,
        12744
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2867": {
      "op": "JUMPDEST"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "op": "SUB"
    },
    "2876": {
      "op": "NOT"
    },
    "2877": {
      "op": "DUP2"
    },
    "2878": {
      "op": "AND"
    },
    "2879": {
      "op": "DUP2"
    },
    "2880": {
      "op": "EQ"
    },
    "2881": {
      "op": "PUSH2",
      "value": "0xB49"
    },
    "2884": {
      "op": "JUMPI"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2887": {
      "op": "DUP1"
    },
    "2888": {
      "op": "REVERT"
    },
    "2889": {
      "op": "JUMPDEST"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "jump": "o",
      "op": "JUMP"
    },
    "2892": {
      "op": "JUMPDEST"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2897": {
      "op": "DUP3"
    },
    "2898": {
      "op": "DUP5"
    },
    "2899": {
      "op": "SUB"
    },
    "2900": {
      "op": "SLT"
    },
    "2901": {
      "op": "ISZERO"
    },
    "2902": {
      "op": "PUSH2",
      "value": "0xB5E"
    },
    "2905": {
      "op": "JUMPI"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2908": {
      "op": "DUP1"
    },
    "2909": {
      "op": "REVERT"
    },
    "2910": {
      "op": "JUMPDEST"
    },
    "2911": {
      "op": "DUP2"
    },
    "2912": {
      "op": "CALLDATALOAD"
    },
    "2913": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "2916": {
      "op": "DUP2"
    },
    "2917": {
      "op": "PUSH2",
      "value": "0xB33"
    },
    "2920": {
      "jump": "i",
      "op": "JUMP"
    },
    "2921": {
      "op": "JUMPDEST"
    },
    "2922": {
      "op": "SWAP4"
    },
    "2923": {
      "op": "SWAP3"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "jump": "o",
      "op": "JUMP"
    },
    "2928": {
      "op": "JUMPDEST"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2931": {
      "op": "DUP2"
    },
    "2932": {
      "op": "MLOAD"
    },
    "2933": {
      "op": "DUP1"
    },
    "2934": {
      "op": "DUP5"
    },
    "2935": {
      "op": "MSTORE"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "JUMPDEST"
    },
    "2939": {
      "op": "DUP2"
    },
    "2940": {
      "op": "DUP2"
    },
    "2941": {
      "op": "LT"
    },
    "2942": {
      "op": "ISZERO"
    },
    "2943": {
      "op": "PUSH2",
      "value": "0xB96"
    },
    "2946": {
      "op": "JUMPI"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2949": {
      "op": "DUP2"
    },
    "2950": {
      "op": "DUP6"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "DUP2"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "MLOAD"
    },
    "2955": {
      "op": "DUP7"
    },
    "2956": {
      "op": "DUP4"
    },
    "2957": {
      "op": "ADD"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "ADD"
    },
    "2962": {
      "op": "PUSH2",
      "value": "0xB7A"
    },
    "2965": {
      "op": "JUMP"
    },
    "2966": {
      "op": "JUMPDEST"
    },
    "2967": {
      "op": "DUP2"
    },
    "2968": {
      "op": "DUP2"
    },
    "2969": {
      "op": "GT"
    },
    "2970": {
      "op": "ISZERO"
    },
    "2971": {
      "op": "PUSH2",
      "value": "0xBA8"
    },
    "2974": {
      "op": "JUMPI"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2979": {
      "op": "DUP4"
    },
    "2980": {
      "op": "DUP8"
    },
    "2981": {
      "op": "ADD"
    },
    "2982": {
      "op": "ADD"
    },
    "2983": {
      "op": "MSTORE"
    },
    "2984": {
      "op": "JUMPDEST"
    },
    "2985": {
      "op": "POP"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2988": {
      "op": "ADD"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2991": {
      "op": "NOT"
    },
    "2992": {
      "op": "AND"
    },
    "2993": {
      "op": "SWAP3"
    },
    "2994": {
      "op": "SWAP1"
    },
    "2995": {
      "op": "SWAP3"
    },
    "2996": {
      "op": "ADD"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2999": {
      "op": "ADD"
    },
    "3000": {
      "op": "SWAP3"
    },
    "3001": {
      "op": "SWAP2"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "op": "POP"
    },
    "3004": {
      "jump": "o",
      "op": "JUMP"
    },
    "3005": {
      "op": "JUMPDEST"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3008": {
      "op": "DUP2"
    },
    "3009": {
      "op": "MSTORE"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3012": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3017": {
      "op": "DUP4"
    },
    "3018": {
      "op": "ADD"
    },
    "3019": {
      "op": "DUP5"
    },
    "3020": {
      "op": "PUSH2",
      "value": "0xB70"
    },
    "3023": {
      "jump": "i",
      "op": "JUMP"
    },
    "3024": {
      "op": "JUMPDEST"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3029": {
      "op": "DUP3"
    },
    "3030": {
      "op": "DUP5"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "op": "SLT"
    },
    "3033": {
      "op": "ISZERO"
    },
    "3034": {
      "op": "PUSH2",
      "value": "0xBE2"
    },
    "3037": {
      "op": "JUMPI"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3040": {
      "op": "DUP1"
    },
    "3041": {
      "op": "REVERT"
    },
    "3042": {
      "op": "JUMPDEST"
    },
    "3043": {
      "op": "POP"
    },
    "3044": {
      "op": "CALLDATALOAD"
    },
    "3045": {
      "op": "SWAP2"
    },
    "3046": {
      "op": "SWAP1"
    },
    "3047": {
      "op": "POP"
    },
    "3048": {
      "jump": "o",
      "op": "JUMP"
    },
    "3049": {
      "op": "JUMPDEST"
    },
    "3050": {
      "op": "DUP1"
    },
    "3051": {
      "op": "CALLDATALOAD"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "SUB"
    },
    "3060": {
      "op": "DUP2"
    },
    "3061": {
      "op": "AND"
    },
    "3062": {
      "op": "DUP2"
    },
    "3063": {
      "op": "EQ"
    },
    "3064": {
      "op": "PUSH2",
      "value": "0xC00"
    },
    "3067": {
      "op": "JUMPI"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3070": {
      "op": "DUP1"
    },
    "3071": {
      "op": "REVERT"
    },
    "3072": {
      "op": "JUMPDEST"
    },
    "3073": {
      "op": "SWAP2"
    },
    "3074": {
      "op": "SWAP1"
    },
    "3075": {
      "op": "POP"
    },
    "3076": {
      "jump": "o",
      "op": "JUMP"
    },
    "3077": {
      "op": "JUMPDEST"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3080": {
      "op": "DUP1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3083": {
      "op": "DUP4"
    },
    "3084": {
      "op": "DUP6"
    },
    "3085": {
      "op": "SUB"
    },
    "3086": {
      "op": "SLT"
    },
    "3087": {
      "op": "ISZERO"
    },
    "3088": {
      "op": "PUSH2",
      "value": "0xC18"
    },
    "3091": {
      "op": "JUMPI"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3094": {
      "op": "DUP1"
    },
    "3095": {
      "op": "REVERT"
    },
    "3096": {
      "op": "JUMPDEST"
    },
    "3097": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "3100": {
      "op": "DUP4"
    },
    "3101": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3104": {
      "jump": "i",
      "op": "JUMP"
    },
    "3105": {
      "op": "JUMPDEST"
    },
    "3106": {
      "op": "SWAP5"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3109": {
      "op": "SWAP4"
    },
    "3110": {
      "op": "SWAP1"
    },
    "3111": {
      "op": "SWAP4"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "op": "CALLDATALOAD"
    },
    "3114": {
      "op": "SWAP4"
    },
    "3115": {
      "op": "POP"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "POP"
    },
    "3118": {
      "jump": "o",
      "op": "JUMP"
    },
    "3119": {
      "op": "JUMPDEST"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3122": {
      "op": "DUP1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3127": {
      "op": "DUP5"
    },
    "3128": {
      "op": "DUP7"
    },
    "3129": {
      "op": "SUB"
    },
    "3130": {
      "op": "SLT"
    },
    "3131": {
      "op": "ISZERO"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0xC44"
    },
    "3135": {
      "op": "JUMPI"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3138": {
      "op": "DUP1"
    },
    "3139": {
      "op": "REVERT"
    },
    "3140": {
      "op": "JUMPDEST"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0xC4D"
    },
    "3144": {
      "op": "DUP5"
    },
    "3145": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3148": {
      "jump": "i",
      "op": "JUMP"
    },
    "3149": {
      "op": "JUMPDEST"
    },
    "3150": {
      "op": "SWAP3"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "op": "PUSH2",
      "value": "0xC5B"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "op": "DUP6"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3162": {
      "jump": "i",
      "op": "JUMP"
    },
    "3163": {
      "op": "JUMPDEST"
    },
    "3164": {
      "op": "SWAP2"
    },
    "3165": {
      "op": "POP"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3168": {
      "op": "DUP5"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "CALLDATALOAD"
    },
    "3171": {
      "op": "SWAP1"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "op": "SWAP3"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "SWAP3"
    },
    "3176": {
      "op": "POP"
    },
    "3177": {
      "op": "SWAP3"
    },
    "3178": {
      "jump": "o",
      "op": "JUMP"
    },
    "3179": {
      "op": "JUMPDEST"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3184": {
      "op": "DUP3"
    },
    "3185": {
      "op": "DUP5"
    },
    "3186": {
      "op": "SUB"
    },
    "3187": {
      "op": "SLT"
    },
    "3188": {
      "op": "ISZERO"
    },
    "3189": {
      "op": "PUSH2",
      "value": "0xC7D"
    },
    "3192": {
      "op": "JUMPI"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3195": {
      "op": "DUP1"
    },
    "3196": {
      "op": "REVERT"
    },
    "3197": {
      "op": "JUMPDEST"
    },
    "3198": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "3201": {
      "op": "DUP3"
    },
    "3202": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3205": {
      "jump": "i",
      "op": "JUMP"
    },
    "3206": {
      "op": "JUMPDEST"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3209": {
      "op": "DUP1"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3212": {
      "op": "DUP4"
    },
    "3213": {
      "op": "DUP6"
    },
    "3214": {
      "op": "SUB"
    },
    "3215": {
      "op": "SLT"
    },
    "3216": {
      "op": "ISZERO"
    },
    "3217": {
      "op": "PUSH2",
      "value": "0xC99"
    },
    "3220": {
      "op": "JUMPI"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3223": {
      "op": "DUP1"
    },
    "3224": {
      "op": "REVERT"
    },
    "3225": {
      "op": "JUMPDEST"
    },
    "3226": {
      "op": "PUSH2",
      "value": "0xCA2"
    },
    "3229": {
      "op": "DUP4"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3233": {
      "jump": "i",
      "op": "JUMP"
    },
    "3234": {
      "op": "JUMPDEST"
    },
    "3235": {
      "op": "SWAP2"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3239": {
      "op": "DUP4"
    },
    "3240": {
      "op": "ADD"
    },
    "3241": {
      "op": "CALLDATALOAD"
    },
    "3242": {
      "op": "DUP1"
    },
    "3243": {
      "op": "ISZERO"
    },
    "3244": {
      "op": "ISZERO"
    },
    "3245": {
      "op": "DUP2"
    },
    "3246": {
      "op": "EQ"
    },
    "3247": {
      "op": "PUSH2",
      "value": "0xCB7"
    },
    "3250": {
      "op": "JUMPI"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3253": {
      "op": "DUP1"
    },
    "3254": {
      "op": "REVERT"
    },
    "3255": {
      "op": "JUMPDEST"
    },
    "3256": {
      "op": "DUP1"
    },
    "3257": {
      "op": "SWAP2"
    },
    "3258": {
      "op": "POP"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "op": "SWAP3"
    },
    "3261": {
      "op": "POP"
    },
    "3262": {
      "op": "SWAP3"
    },
    "3263": {
      "op": "SWAP1"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "jump": "o",
      "op": "JUMP"
    },
    "3266": {
      "op": "JUMPDEST"
    },
    "3267": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3274": {
      "op": "SHL"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3277": {
      "op": "MSTORE"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3282": {
      "op": "MSTORE"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3287": {
      "op": "REVERT"
    },
    "3288": {
      "op": "JUMPDEST"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3291": {
      "op": "DUP1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3294": {
      "op": "DUP1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3297": {
      "op": "DUP6"
    },
    "3298": {
      "op": "DUP8"
    },
    "3299": {
      "op": "SUB"
    },
    "3300": {
      "op": "SLT"
    },
    "3301": {
      "op": "ISZERO"
    },
    "3302": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3305": {
      "op": "JUMPI"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3308": {
      "op": "DUP1"
    },
    "3309": {
      "op": "REVERT"
    },
    "3310": {
      "op": "JUMPDEST"
    },
    "3311": {
      "op": "PUSH2",
      "value": "0xCF7"
    },
    "3314": {
      "op": "DUP6"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3318": {
      "jump": "i",
      "op": "JUMP"
    },
    "3319": {
      "op": "JUMPDEST"
    },
    "3320": {
      "op": "SWAP4"
    },
    "3321": {
      "op": "POP"
    },
    "3322": {
      "op": "PUSH2",
      "value": "0xD05"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3327": {
      "op": "DUP7"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3332": {
      "jump": "i",
      "op": "JUMP"
    },
    "3333": {
      "op": "JUMPDEST"
    },
    "3334": {
      "op": "SWAP3"
    },
    "3335": {
      "op": "POP"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3338": {
      "op": "DUP6"
    },
    "3339": {
      "op": "ADD"
    },
    "3340": {
      "op": "CALLDATALOAD"
    },
    "3341": {
      "op": "SWAP2"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3345": {
      "op": "DUP6"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "op": "CALLDATALOAD"
    },
    "3348": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3357": {
      "op": "DUP1"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "GT"
    },
    "3360": {
      "op": "ISZERO"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0xD29"
    },
    "3364": {
      "op": "JUMPI"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3367": {
      "op": "DUP1"
    },
    "3368": {
      "op": "REVERT"
    },
    "3369": {
      "op": "JUMPDEST"
    },
    "3370": {
      "op": "DUP2"
    },
    "3371": {
      "op": "DUP8"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "SWAP2"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "op": "DUP8"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3378": {
      "op": "DUP4"
    },
    "3379": {
      "op": "ADD"
    },
    "3380": {
      "op": "SLT"
    },
    "3381": {
      "op": "PUSH2",
      "value": "0xD3D"
    },
    "3384": {
      "op": "JUMPI"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3387": {
      "op": "DUP1"
    },
    "3388": {
      "op": "REVERT"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "op": "DUP2"
    },
    "3391": {
      "op": "CALLDATALOAD"
    },
    "3392": {
      "op": "DUP2"
    },
    "3393": {
      "op": "DUP2"
    },
    "3394": {
      "op": "GT"
    },
    "3395": {
      "op": "ISZERO"
    },
    "3396": {
      "op": "PUSH2",
      "value": "0xD4F"
    },
    "3399": {
      "op": "JUMPI"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD4F"
    },
    "3403": {
      "op": "PUSH2",
      "value": "0xCC2"
    },
    "3406": {
      "jump": "i",
      "op": "JUMP"
    },
    "3407": {
      "op": "JUMPDEST"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3410": {
      "op": "MLOAD"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3413": {
      "op": "DUP3"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3417": {
      "op": "NOT"
    },
    "3418": {
      "op": "SWAP1"
    },
    "3419": {
      "op": "DUP2"
    },
    "3420": {
      "op": "AND"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "AND"
    },
    "3425": {
      "op": "DUP2"
    },
    "3426": {
      "op": "ADD"
    },
    "3427": {
      "op": "SWAP1"
    },
    "3428": {
      "op": "DUP4"
    },
    "3429": {
      "op": "DUP3"
    },
    "3430": {
      "op": "GT"
    },
    "3431": {
      "op": "DUP2"
    },
    "3432": {
      "op": "DUP4"
    },
    "3433": {
      "op": "LT"
    },
    "3434": {
      "op": "OR"
    },
    "3435": {
      "op": "ISZERO"
    },
    "3436": {
      "op": "PUSH2",
      "value": "0xD77"
    },
    "3439": {
      "op": "JUMPI"
    },
    "3440": {
      "op": "PUSH2",
      "value": "0xD77"
    },
    "3443": {
      "op": "PUSH2",
      "value": "0xCC2"
    },
    "3446": {
      "jump": "i",
      "op": "JUMP"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "op": "DUP2"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "DUP2"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "DUP11"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3458": {
      "op": "DUP5"
    },
    "3459": {
      "op": "DUP8"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "ADD"
    },
    "3462": {
      "op": "GT"
    },
    "3463": {
      "op": "ISZERO"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0xD90"
    },
    "3467": {
      "op": "JUMPI"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3470": {
      "op": "DUP1"
    },
    "3471": {
      "op": "REVERT"
    },
    "3472": {
      "op": "JUMPDEST"
    },
    "3473": {
      "op": "DUP3"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "op": "DUP7"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3480": {
      "op": "DUP4"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "op": "CALLDATACOPY"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3487": {
      "op": "DUP5"
    },
    "3488": {
      "op": "DUP4"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "op": "MSTORE"
    },
    "3492": {
      "op": "DUP1"
    },
    "3493": {
      "op": "SWAP6"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "POP"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "op": "POP"
    },
    "3499": {
      "op": "POP"
    },
    "3500": {
      "op": "SWAP3"
    },
    "3501": {
      "op": "SWAP6"
    },
    "3502": {
      "op": "SWAP2"
    },
    "3503": {
      "op": "SWAP5"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "SWAP3"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "jump": "o",
      "op": "JUMP"
    },
    "3508": {
      "op": "JUMPDEST"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3511": {
      "op": "DUP1"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3514": {
      "op": "DUP4"
    },
    "3515": {
      "op": "DUP6"
    },
    "3516": {
      "op": "SUB"
    },
    "3517": {
      "op": "SLT"
    },
    "3518": {
      "op": "ISZERO"
    },
    "3519": {
      "op": "PUSH2",
      "value": "0xDC7"
    },
    "3522": {
      "op": "JUMPI"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3525": {
      "op": "DUP1"
    },
    "3526": {
      "op": "REVERT"
    },
    "3527": {
      "op": "JUMPDEST"
    },
    "3528": {
      "op": "PUSH2",
      "value": "0xDD0"
    },
    "3531": {
      "op": "DUP4"
    },
    "3532": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3535": {
      "jump": "i",
      "op": "JUMP"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "op": "SWAP2"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xDDE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3544": {
      "op": "DUP5"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "op": "PUSH2",
      "value": "0xBE9"
    },
    "3549": {
      "jump": "i",
      "op": "JUMP"
    },
    "3550": {
      "op": "JUMPDEST"
    },
    "3551": {
      "op": "SWAP1"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "op": "SWAP3"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "op": "SWAP3"
    },
    "3556": {
      "op": "SWAP1"
    },
    "3557": {
      "op": "POP"
    },
    "3558": {
      "jump": "o",
      "op": "JUMP"
    },
    "3559": {
      "op": "JUMPDEST"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "SHR"
    },
    "3565": {
      "op": "SWAP1"
    },
    "3566": {
      "op": "DUP3"
    },
    "3567": {
      "op": "AND"
    },
    "3568": {
      "op": "DUP1"
    },
    "3569": {
      "op": "PUSH2",
      "value": "0xDFB"
    },
    "3572": {
      "op": "JUMPI"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3575": {
      "op": "DUP3"
    },
    "3576": {
      "op": "AND"
    },
    "3577": {
      "op": "SWAP2"
    },
    "3578": {
      "op": "POP"
    },
    "3579": {
      "op": "JUMPDEST"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3582": {
      "op": "DUP3"
    },
    "3583": {
      "op": "LT"
    },
    "3584": {
      "op": "DUP2"
    },
    "3585": {
      "op": "EQ"
    },
    "3586": {
      "op": "ISZERO"
    },
    "3587": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3590": {
      "op": "JUMPI"
    },
    "3591": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3601": {
      "op": "MSTORE"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3606": {
      "op": "MSTORE"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3611": {
      "op": "REVERT"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "SWAP2"
    },
    "3615": {
      "op": "SWAP1"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "jump": "o",
      "op": "JUMP"
    },
    "3618": {
      "op": "JUMPDEST"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3621": {
      "op": "DUP1"
    },
    "3622": {
      "op": "DUP3"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3626": {
      "op": "SWAP1"
    },
    "3627": {
      "op": "DUP3"
    },
    "3628": {
      "op": "ADD"
    },
    "3629": {
      "op": "MSTORE"
    },
    "3630": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3665": {
      "op": "DUP3"
    },
    "3666": {
      "op": "ADD"
    },
    "3667": {
      "op": "MSTORE"
    },
    "3668": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3688": {
      "op": "SHL"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3691": {
      "op": "DUP3"
    },
    "3692": {
      "op": "ADD"
    },
    "3693": {
      "op": "MSTORE"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3696": {
      "op": "ADD"
    },
    "3697": {
      "op": "SWAP1"
    },
    "3698": {
      "jump": "o",
      "op": "JUMP"
    },
    "3699": {
      "op": "JUMPDEST"
    },
    "3700": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "MSTORE"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3715": {
      "op": "MSTORE"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3720": {
      "op": "REVERT"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "DUP3"
    },
    "3726": {
      "op": "LT"
    },
    "3727": {
      "op": "ISZERO"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3731": {
      "op": "JUMPI"
    },
    "3732": {
      "op": "PUSH2",
      "value": "0xE9B"
    },
    "3735": {
      "op": "PUSH2",
      "value": "0xE73"
    },
    "3738": {
      "jump": "i",
      "op": "JUMP"
    },
    "3739": {
      "op": "JUMPDEST"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "SUB"
    },
    "3742": {
      "op": "SWAP1"
    },
    "3743": {
      "jump": "o",
      "op": "JUMP"
    },
    "3744": {
      "op": "JUMPDEST"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3747": {
      "op": "DUP3"
    },
    "3748": {
      "op": "NOT"
    },
    "3749": {
      "op": "DUP3"
    },
    "3750": {
      "op": "GT"
    },
    "3751": {
      "op": "ISZERO"
    },
    "3752": {
      "op": "PUSH2",
      "value": "0xEB3"
    },
    "3755": {
      "op": "JUMPI"
    },
    "3756": {
      "op": "PUSH2",
      "value": "0xEB3"
    },
    "3759": {
      "op": "PUSH2",
      "value": "0xE73"
    },
    "3762": {
      "jump": "i",
      "op": "JUMP"
    },
    "3763": {
      "op": "JUMPDEST"
    },
    "3764": {
      "op": "POP"
    },
    "3765": {
      "op": "ADD"
    },
    "3766": {
      "op": "SWAP1"
    },
    "3767": {
      "jump": "o",
      "op": "JUMP"
    },
    "3768": {
      "op": "JUMPDEST"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3771": {
      "op": "DUP1"
    },
    "3772": {
      "op": "DUP3"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3776": {
      "op": "SWAP1"
    },
    "3777": {
      "op": "DUP3"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "op": "MSTORE"
    },
    "3780": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3815": {
      "op": "DUP3"
    },
    "3816": {
      "op": "ADD"
    },
    "3817": {
      "op": "MSTORE"
    },
    "3818": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "3839": {
      "op": "SHL"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3842": {
      "op": "DUP3"
    },
    "3843": {
      "op": "ADD"
    },
    "3844": {
      "op": "MSTORE"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "SWAP1"
    },
    "3849": {
      "jump": "o",
      "op": "JUMP"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "op": "SUB"
    },
    "3859": {
      "op": "DUP6"
    },
    "3860": {
      "op": "DUP2"
    },
    "3861": {
      "op": "AND"
    },
    "3862": {
      "op": "DUP3"
    },
    "3863": {
      "op": "MSTORE"
    },
    "3864": {
      "op": "DUP5"
    },
    "3865": {
      "op": "AND"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3868": {
      "op": "DUP3"
    },
    "3869": {
      "op": "ADD"
    },
    "3870": {
      "op": "MSTORE"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3873": {
      "op": "DUP2"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "DUP4"
    },
    "3876": {
      "op": "SWAP1"
    },
    "3877": {
      "op": "MSTORE"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3882": {
      "op": "DUP3"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "DUP2"
    },
    "3885": {
      "op": "SWAP1"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3889": {
      "op": "SWAP1"
    },
    "3890": {
      "op": "PUSH2",
      "value": "0xF3D"
    },
    "3893": {
      "op": "SWAP1"
    },
    "3894": {
      "op": "DUP4"
    },
    "3895": {
      "op": "ADD"
    },
    "3896": {
      "op": "DUP5"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xB70"
    },
    "3900": {
      "jump": "i",
      "op": "JUMP"
    },
    "3901": {
      "op": "JUMPDEST"
    },
    "3902": {
      "op": "SWAP7"
    },
    "3903": {
      "op": "SWAP6"
    },
    "3904": {
      "op": "POP"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "op": "POP"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "jump": "o",
      "op": "JUMP"
    },
    "3911": {
      "op": "JUMPDEST"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "DUP5"
    },
    "3918": {
      "op": "SUB"
    },
    "3919": {
      "op": "SLT"
    },
    "3920": {
      "op": "ISZERO"
    },
    "3921": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "3924": {
      "op": "JUMPI"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3927": {
      "op": "DUP1"
    },
    "3928": {
      "op": "REVERT"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "MLOAD"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xB69"
    },
    "3935": {
      "op": "DUP2"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xB33"
    },
    "3939": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "b8c51bf2e50a7a8eb935349e35479decf6d50535",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport \"interfaces/token/ERC721/IERC721.sol\";\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721 {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view  returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "802:12622:24:-:0;;;1547:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1613:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1636:17:24;;;;:7;;:17;;;;;:::i;:::-;;1547:113;;802:12622;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;802:12622:24;;;-1:-1:-1;802:12622:24;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:46;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:46;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:46;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:46:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:46;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;802:12622:24;;;;;;",
  "sourcePath": "contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}