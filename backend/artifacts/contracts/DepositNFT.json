{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct NFTOwnerState",
          "name": "ownerState",
          "type": "tuple"
        }
      ],
      "name": "MintToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accessController",
      "outputs": [
        {
          "internalType": "contract IAccessControl",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ac_acccount",
          "type": "address"
        }
      ],
      "name": "connectAccessController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getAllOwnerTokenStates",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "depositValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marketValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateBlock",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "marketValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "depositValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseTokenSymbol",
                  "type": "string"
                }
              ],
              "internalType": "struct PortfolioState",
              "name": "portfolio",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTState[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getOwnerDepositValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getOwnerMarketValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getOwnerState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct NFTOwnerState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "depositValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marketValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateBlock",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "marketValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "depositValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseTokenSymbol",
                  "type": "string"
                }
              ],
              "internalType": "struct PortfolioState",
              "name": "portfolio",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "depositValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marketValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateBlock",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "marketValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "depositValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseTokenSymbol",
                  "type": "string"
                }
              ],
              "internalType": "struct PortfolioState",
              "name": "portfolio",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTState",
          "name": "tokenState",
          "type": "tuple"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ownerTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ownerCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "depositValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marketValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateBlock",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "marketValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "depositValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blockNumber",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseTokenSymbol",
                  "type": "string"
                }
              ],
              "internalType": "struct PortfolioState",
              "name": "portfolio",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTState",
          "name": "tokenState",
          "type": "tuple"
        }
      ],
      "name": "updateTokenState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "21": "contracts/model/portfolio/token/DepositNFT.sol",
    "23": "contracts/model/portfolio/token/Structs.sol",
    "28": "contracts/utils/access/AccessControlAdapter.sol",
    "3": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721Receiver.sol",
    "34": "interfaces/model/portfolio/token/IDepositNFT.sol",
    "36": "interfaces/token/ERC721/IERC721.sol",
    "38": "interfaces/utils/access/IAccessControlAdapter.sol",
    "4": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Address.sol",
    "5": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
    "6": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Strings.sol",
    "7": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/ERC165.sol",
    "8": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/model/portfolio/token/DepositNFT.sol",
    "exportedSymbols": {
      "AccessControlAdapter": [
        4262
      ],
      "Address": [
        4941
      ],
      "Context": [
        4963
      ],
      "DepositNFT": [
        3016
      ],
      "ERC165": [
        5190
      ],
      "IDepositNFT": [
        5269
      ],
      "IERC165": [
        5832
      ],
      "IERC721Receiver": [
        4644
      ],
      "NFTContractState": [
        4507
      ],
      "NFTOwnerState": [
        4502
      ],
      "NFTState": [
        4517
      ],
      "Strings": [
        5166
      ]
    },
    "id": 3017,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1893,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:21"
      },
      {
        "absolutePath": "interfaces/model/portfolio/token/IDepositNFT.sol",
        "file": "interfaces/model/portfolio/token/IDepositNFT.sol",
        "id": 1895,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 5270,
        "src": "117:77:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1894,
              "name": "IDepositNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5269,
              "src": "125:11:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 1897,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 4645,
        "src": "195:89:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1896,
              "name": "IERC721Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4644,
              "src": "203:15:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1898,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 4942,
        "src": "389:51:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 1899,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 4964,
        "src": "441:51:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 1900,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 5167,
        "src": "493:51:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 1901,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 5191,
        "src": "545:64:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/access/AccessControlAdapter.sol",
        "file": "contracts/utils/access/AccessControlAdapter.sol",
        "id": 1903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 4263,
        "src": "610:85:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1902,
              "name": "AccessControlAdapter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4262,
              "src": "618:20:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/model/portfolio/token/Structs.sol",
        "file": "contracts/model/portfolio/token/Structs.sol",
        "id": 1907,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3017,
        "sourceUnit": 4518,
        "src": "696:101:21",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1904,
              "name": "NFTOwnerState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4502,
              "src": "704:13:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1905,
              "name": "NFTState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4517,
              "src": "718:8:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1906,
              "name": "NFTContractState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4507,
              "src": "728:16:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1909,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4963,
              "src": "1070:7:21"
            },
            "id": 1910,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:7:21"
          },
          {
            "baseName": {
              "id": 1911,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5190,
              "src": "1079:6:21"
            },
            "id": 1912,
            "nodeType": "InheritanceSpecifier",
            "src": "1079:6:21"
          },
          {
            "baseName": {
              "id": 1913,
              "name": "IDepositNFT",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5269,
              "src": "1087:11:21"
            },
            "id": 1914,
            "nodeType": "InheritanceSpecifier",
            "src": "1087:11:21"
          },
          {
            "baseName": {
              "id": 1915,
              "name": "AccessControlAdapter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4262,
              "src": "1100:20:21"
            },
            "id": 1916,
            "nodeType": "InheritanceSpecifier",
            "src": "1100:20:21"
          }
        ],
        "canonicalName": "DepositNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1908,
          "nodeType": "StructuredDocumentation",
          "src": "798:246:21",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 3016,
        "linearizedBaseContracts": [
          3016,
          4262,
          5346,
          5269,
          5949,
          5190,
          5832,
          4963
        ],
        "name": "DepositNFT",
        "nameLocation": "1056:10:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1919,
            "libraryName": {
              "id": 1917,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4941,
              "src": "1133:7:21"
            },
            "nodeType": "UsingForDirective",
            "src": "1127:26:21",
            "typeName": {
              "id": 1918,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1145:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 1922,
            "libraryName": {
              "id": 1920,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5166,
              "src": "1164:7:21"
            },
            "nodeType": "UsingForDirective",
            "src": "1158:26:21",
            "typeName": {
              "id": 1921,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1176:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 1925,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "1231:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1207:29:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_NFTContractState_$4507_storage",
              "typeString": "struct NFTContractState"
            },
            "typeName": {
              "id": 1924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1923,
                "name": "NFTContractState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4507,
                "src": "1207:16:21"
              },
              "referencedDeclaration": 4507,
              "src": "1207:16:21",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_NFTContractState_$4507_storage_ptr",
                "typeString": "struct NFTContractState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1927,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "1257:4:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1243:18:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1926,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1243:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 1929,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "1301:6:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1287:20:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1928,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1287:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1932,
            "mutability": "mutable",
            "name": "nextTokenId",
            "nameLocation": "1322:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1314:23:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1930,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1314:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1931,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1336:1:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1937,
            "mutability": "mutable",
            "name": "_ownerStates",
            "nameLocation": "1385:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1344:53:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
              "typeString": "mapping(address => struct NFTOwnerState)"
            },
            "typeName": {
              "id": 1936,
              "keyType": {
                "id": 1933,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1352:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1344:31:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                "typeString": "mapping(address => struct NFTOwnerState)"
              },
              "valueType": {
                "id": 1935,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1934,
                  "name": "NFTOwnerState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4502,
                  "src": "1361:13:21"
                },
                "referencedDeclaration": 4502,
                "src": "1361:13:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage_ptr",
                  "typeString": "struct NFTOwnerState"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1942,
            "mutability": "mutable",
            "name": "_tokenStates",
            "nameLocation": "1439:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1403:48:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
              "typeString": "mapping(uint256 => struct NFTState)"
            },
            "typeName": {
              "id": 1941,
              "keyType": {
                "id": 1938,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1411:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1403:26:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
                "typeString": "mapping(uint256 => struct NFTState)"
              },
              "valueType": {
                "id": 1940,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1939,
                  "name": "NFTState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4517,
                  "src": "1420:8:21"
                },
                "referencedDeclaration": 4517,
                "src": "1420:8:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                  "typeString": "struct NFTState"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1946,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "1540:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1504:43:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1945,
              "keyType": {
                "id": 1943,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1512:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1504:27:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1944,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1523:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1950,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1738:15:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1702:51:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1949,
              "keyType": {
                "id": 1947,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1710:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1702:27:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1948,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1721:7:21",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1956,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1861:18:21",
            "nodeType": "VariableDeclaration",
            "scope": 3016,
            "src": "1808:71:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1955,
              "keyType": {
                "id": 1951,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1816:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1808:44:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1954,
                "keyType": {
                  "id": 1952,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1835:7:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1827:24:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1953,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1846:4:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1972,
              "nodeType": "Block",
              "src": "2055:55:21",
              "statements": [
                {
                  "expression": {
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1964,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "2065:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1965,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "2072:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2065:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1967,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:12:21"
                },
                {
                  "expression": {
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1968,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1929,
                      "src": "2087:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1969,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1961,
                      "src": "2096:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2087:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1971,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:16:21"
                }
              ]
            },
            "documentation": {
              "id": 1957,
              "nodeType": "StructuredDocumentation",
              "src": "1886:108:21",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1973,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2025:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "2011:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2046:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "2032:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:44:21"
            },
            "returnParameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:0:21"
            },
            "scope": 3016,
            "src": "1999:111:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5259
            ],
            "body": {
              "id": 1988,
              "nodeType": "Block",
              "src": "2257:59:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1982,
                          "name": "_ownerStates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1937,
                          "src": "2274:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                            "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                          }
                        },
                        "id": 1984,
                        "indexExpression": {
                          "id": 1983,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1976,
                          "src": "2287:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2274:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                          "typeString": "struct NFTOwnerState storage ref"
                        }
                      },
                      "id": 1985,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4501,
                      "src": "2274:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2274:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1981,
                  "id": 1987,
                  "nodeType": "Return",
                  "src": "2267:42:21"
                }
              ]
            },
            "documentation": {
              "id": 1974,
              "nodeType": "StructuredDocumentation",
              "src": "2116:56:21",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "c2fb09a8",
            "id": 1989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerTokenCount",
            "nameLocation": "2187:15:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2225:8:21"
            },
            "parameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2211:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "2203:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2202:15:21"
            },
            "returnParameters": {
              "id": 1981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1989,
                  "src": "2248:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:9:21"
            },
            "scope": 3016,
            "src": "2178:138:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5252
            ],
            "body": {
              "id": 2034,
              "nodeType": "Block",
              "src": "2406:278:21",
              "statements": [
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "mutability": "mutable",
                      "name": "tokenIds",
                      "nameLocation": "2434:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "2416:26:21",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2416:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2000,
                        "nodeType": "ArrayTypeName",
                        "src": "2416:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2006,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 2002,
                        "name": "_ownerStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "2445:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                          "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                        }
                      },
                      "id": 2004,
                      "indexExpression": {
                        "id": 2003,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1991,
                        "src": "2458:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2445:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                        "typeString": "struct NFTOwnerState storage ref"
                      }
                    },
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenIds",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4501,
                    "src": "2445:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2416:57:21"
                },
                {
                  "assignments": [
                    2008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2008,
                      "mutability": "mutable",
                      "name": "ownerDepositValue",
                      "nameLocation": "2492:17:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2034,
                      "src": "2484:25:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2007,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2484:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2010,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2512:1:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2484:29:21"
                },
                {
                  "body": {
                    "id": 2030,
                    "nodeType": "Block",
                    "src": "2560:84:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2021,
                            "name": "ownerDepositValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "2574:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2022,
                                "name": "_tokenStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1942,
                                "src": "2595:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
                                  "typeString": "mapping(uint256 => struct NFTState storage ref)"
                                }
                              },
                              "id": 2026,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2023,
                                  "name": "tokenIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2001,
                                  "src": "2608:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[] storage pointer"
                                  }
                                },
                                "id": 2025,
                                "indexExpression": {
                                  "id": 2024,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2012,
                                  "src": "2617:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2608:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2595:25:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                                "typeString": "struct NFTState storage ref"
                              }
                            },
                            "id": 2027,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4509,
                            "src": "2595:38:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2574:59:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2029,
                        "nodeType": "ExpressionStatement",
                        "src": "2574:59:21"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2014,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2012,
                      "src": "2536:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2015,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2538:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 2016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2538:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2536:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2031,
                  "initializationExpression": {
                    "assignments": [
                      2012
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2012,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2533:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2031,
                        "src": "2528:6:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2011,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2528:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2013,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2528:6:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2555:3:21",
                      "subExpression": {
                        "id": 2018,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2012,
                        "src": "2555:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2020,
                    "nodeType": "ExpressionStatement",
                    "src": "2555:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "2523:121:21"
                },
                {
                  "expression": {
                    "id": 2032,
                    "name": "ownerDepositValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2008,
                    "src": "2660:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1996,
                  "id": 2033,
                  "nodeType": "Return",
                  "src": "2653:24:21"
                }
              ]
            },
            "functionSelector": "650655c3",
            "id": 2035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerDepositValue",
            "nameLocation": "2331:20:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2374:8:21"
            },
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2360:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "2352:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2351:15:21"
            },
            "returnParameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "2397:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2396:9:21"
            },
            "scope": 3016,
            "src": "2322:362:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5245
            ],
            "body": {
              "id": 2080,
              "nodeType": "Block",
              "src": "2773:274:21",
              "statements": [
                {
                  "assignments": [
                    2047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2047,
                      "mutability": "mutable",
                      "name": "tokenIds",
                      "nameLocation": "2801:8:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2080,
                      "src": "2783:26:21",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2046,
                        "nodeType": "ArrayTypeName",
                        "src": "2783:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2052,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 2048,
                        "name": "_ownerStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "2812:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                          "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                        }
                      },
                      "id": 2050,
                      "indexExpression": {
                        "id": 2049,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2037,
                        "src": "2825:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2812:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                        "typeString": "struct NFTOwnerState storage ref"
                      }
                    },
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenIds",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4501,
                    "src": "2812:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2783:57:21"
                },
                {
                  "assignments": [
                    2054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2054,
                      "mutability": "mutable",
                      "name": "ownerMarketValue",
                      "nameLocation": "2859:16:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2080,
                      "src": "2851:24:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2851:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2056,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2878:1:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2851:28:21"
                },
                {
                  "body": {
                    "id": 2076,
                    "nodeType": "Block",
                    "src": "2926:82:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2067,
                            "name": "ownerMarketValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2054,
                            "src": "2940:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2068,
                                "name": "_tokenStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1942,
                                "src": "2960:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
                                  "typeString": "mapping(uint256 => struct NFTState storage ref)"
                                }
                              },
                              "id": 2072,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2069,
                                  "name": "tokenIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2047,
                                  "src": "2973:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[] storage pointer"
                                  }
                                },
                                "id": 2071,
                                "indexExpression": {
                                  "id": 2070,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "2982:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2973:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2960:25:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                                "typeString": "struct NFTState storage ref"
                              }
                            },
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "marketValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4511,
                            "src": "2960:37:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2940:57:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2075,
                        "nodeType": "ExpressionStatement",
                        "src": "2940:57:21"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2060,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "2902:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2061,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "2904:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2904:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2902:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2077,
                  "initializationExpression": {
                    "assignments": [
                      2058
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2899:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "2894:6:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2894:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2059,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2894:6:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2921:3:21",
                      "subExpression": {
                        "id": 2064,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2058,
                        "src": "2921:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2066,
                    "nodeType": "ExpressionStatement",
                    "src": "2921:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "2889:119:21"
                },
                {
                  "expression": {
                    "id": 2078,
                    "name": "ownerMarketValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2054,
                    "src": "3024:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2042,
                  "id": 2079,
                  "nodeType": "Return",
                  "src": "3017:23:21"
                }
              ]
            },
            "functionSelector": "48f5adce",
            "id": 2081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerMarketValue",
            "nameLocation": "2699:19:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2039,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2741:8:21"
            },
            "parameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2727:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "2719:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2718:15:21"
            },
            "returnParameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2081,
                  "src": "2764:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2763:9:21"
            },
            "scope": 3016,
            "src": "2690:357:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5209
            ],
            "body": {
              "id": 2099,
              "nodeType": "Block",
              "src": "3141:97:21",
              "statements": [
                {
                  "assignments": [
                    2092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2092,
                      "mutability": "mutable",
                      "name": "_ownerState",
                      "nameLocation": "3172:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2099,
                      "src": "3151:32:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_memory_ptr",
                        "typeString": "struct NFTOwnerState"
                      },
                      "typeName": {
                        "id": 2091,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2090,
                          "name": "NFTOwnerState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4502,
                          "src": "3151:13:21"
                        },
                        "referencedDeclaration": 4502,
                        "src": "3151:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage_ptr",
                          "typeString": "struct NFTOwnerState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2096,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2093,
                      "name": "_ownerStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1937,
                      "src": "3184:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                        "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                      }
                    },
                    "id": 2095,
                    "indexExpression": {
                      "id": 2094,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "3197:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3184:19:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                      "typeString": "struct NFTOwnerState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3151:52:21"
                },
                {
                  "expression": {
                    "id": 2097,
                    "name": "_ownerState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2092,
                    "src": "3220:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTOwnerState_$4502_memory_ptr",
                      "typeString": "struct NFTOwnerState memory"
                    }
                  },
                  "functionReturnParameters": 2089,
                  "id": 2098,
                  "nodeType": "Return",
                  "src": "3213:18:21"
                }
              ]
            },
            "functionSelector": "2cc34a62",
            "id": 2100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerState",
            "nameLocation": "3062:13:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2085,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3098:8:21"
            },
            "parameters": {
              "id": 2084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2083,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3084:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "3076:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3076:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3075:15:21"
            },
            "returnParameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "3120:20:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTOwnerState_$4502_memory_ptr",
                    "typeString": "struct NFTOwnerState"
                  },
                  "typeName": {
                    "id": 2087,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2086,
                      "name": "NFTOwnerState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4502,
                      "src": "3120:13:21"
                    },
                    "referencedDeclaration": 4502,
                    "src": "3120:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage_ptr",
                      "typeString": "struct NFTOwnerState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3119:22:21"
            },
            "scope": 3016,
            "src": "3053:185:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5217
            ],
            "body": {
              "id": 2118,
              "nodeType": "Block",
              "src": "3328:96:21",
              "statements": [
                {
                  "assignments": [
                    2111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2111,
                      "mutability": "mutable",
                      "name": "_tokenState",
                      "nameLocation": "3354:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2118,
                      "src": "3338:27:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                        "typeString": "struct NFTState"
                      },
                      "typeName": {
                        "id": 2110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2109,
                          "name": "NFTState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4517,
                          "src": "3338:8:21"
                        },
                        "referencedDeclaration": 4517,
                        "src": "3338:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                          "typeString": "struct NFTState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2115,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2112,
                      "name": "_tokenStates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "3368:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
                        "typeString": "mapping(uint256 => struct NFTState storage ref)"
                      }
                    },
                    "id": 2114,
                    "indexExpression": {
                      "id": 2113,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2102,
                      "src": "3381:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3368:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                      "typeString": "struct NFTState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3338:51:21"
                },
                {
                  "expression": {
                    "id": 2116,
                    "name": "_tokenState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2111,
                    "src": "3406:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                      "typeString": "struct NFTState memory"
                    }
                  },
                  "functionReturnParameters": 2108,
                  "id": 2117,
                  "nodeType": "Return",
                  "src": "3399:18:21"
                }
              ]
            },
            "functionSelector": "f45fd0f3",
            "id": 2119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenState",
            "nameLocation": "3252:13:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3290:8:21"
            },
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2102,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3274:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2119,
                  "src": "3266:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3265:17:21"
            },
            "returnParameters": {
              "id": 2108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2119,
                  "src": "3312:15:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                    "typeString": "struct NFTState"
                  },
                  "typeName": {
                    "id": 2106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2105,
                      "name": "NFTState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4517,
                      "src": "3312:8:21"
                    },
                    "referencedDeclaration": 4517,
                    "src": "3312:8:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                      "typeString": "struct NFTState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3311:17:21"
            },
            "scope": 3016,
            "src": "3243:181:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5225
            ],
            "body": {
              "id": 2134,
              "nodeType": "Block",
              "src": "3517:51:21",
              "statements": [
                {
                  "expression": {
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2128,
                        "name": "_tokenStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "3527:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
                          "typeString": "mapping(uint256 => struct NFTState storage ref)"
                        }
                      },
                      "id": 2130,
                      "indexExpression": {
                        "id": 2129,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "3540:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3527:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                        "typeString": "struct NFTState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2131,
                      "name": "tokenState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2124,
                      "src": "3551:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                        "typeString": "struct NFTState memory"
                      }
                    },
                    "src": "3527:34:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                      "typeString": "struct NFTState storage ref"
                    }
                  },
                  "id": 2133,
                  "nodeType": "ExpressionStatement",
                  "src": "3527:34:21"
                }
              ]
            },
            "functionSelector": "46e5573e",
            "id": 2135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenState",
            "nameLocation": "3439:16:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3509:8:21"
            },
            "parameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3464:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "3456:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "tokenState",
                  "nameLocation": "3489:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "3473:26:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                    "typeString": "struct NFTState"
                  },
                  "typeName": {
                    "id": 2123,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2122,
                      "name": "NFTState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4517,
                      "src": "3473:8:21"
                    },
                    "referencedDeclaration": 4517,
                    "src": "3473:8:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                      "typeString": "struct NFTState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:46:21"
            },
            "returnParameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3517:0:21"
            },
            "scope": 3016,
            "src": "3430:138:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5268
            ],
            "body": {
              "id": 2193,
              "nodeType": "Block",
              "src": "3668:329:21",
              "statements": [
                {
                  "assignments": [
                    2149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2149,
                      "mutability": "mutable",
                      "name": "ownerTokenIds",
                      "nameLocation": "3705:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "3687:31:21",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2148,
                        "nodeType": "ArrayTypeName",
                        "src": "3687:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2154,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 2150,
                        "name": "_ownerStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "3721:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                          "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                        }
                      },
                      "id": 2152,
                      "indexExpression": {
                        "id": 2151,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2137,
                        "src": "3734:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3721:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                        "typeString": "struct NFTOwnerState storage ref"
                      }
                    },
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenIds",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4501,
                    "src": "3721:28:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3687:62:21"
                },
                {
                  "assignments": [
                    2159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2159,
                      "mutability": "mutable",
                      "name": "tokenStateList",
                      "nameLocation": "3777:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "3759:32:21",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct NFTState[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2157,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2156,
                            "name": "NFTState",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4517,
                            "src": "3759:8:21"
                          },
                          "referencedDeclaration": 4517,
                          "src": "3759:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                            "typeString": "struct NFTState"
                          }
                        },
                        "id": 2158,
                        "nodeType": "ArrayTypeName",
                        "src": "3759:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_storage_$dyn_storage_ptr",
                          "typeString": "struct NFTState[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2167,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2164,
                          "name": "ownerTokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2149,
                          "src": "3810:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[] storage pointer"
                          }
                        },
                        "id": 2165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3810:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3795:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFTState_$4517_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct NFTState memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2161,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2160,
                            "name": "NFTState",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4517,
                            "src": "3799:8:21"
                          },
                          "referencedDeclaration": 4517,
                          "src": "3799:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                            "typeString": "struct NFTState"
                          }
                        },
                        "id": 2162,
                        "nodeType": "ArrayTypeName",
                        "src": "3799:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_storage_$dyn_storage_ptr",
                          "typeString": "struct NFTState[]"
                        }
                      }
                    },
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3795:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NFTState memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3759:72:21"
                },
                {
                  "body": {
                    "id": 2189,
                    "nodeType": "Block",
                    "src": "3884:76:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2179,
                              "name": "tokenStateList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2159,
                              "src": "3898:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct NFTState memory[] memory"
                              }
                            },
                            "id": 2181,
                            "indexExpression": {
                              "id": 2180,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2169,
                              "src": "3913:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3898:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                              "typeString": "struct NFTState memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 2183,
                                  "name": "ownerTokenIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2149,
                                  "src": "3932:13:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                    "typeString": "uint256[] storage pointer"
                                  }
                                },
                                "id": 2185,
                                "indexExpression": {
                                  "id": 2184,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2169,
                                  "src": "3946:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3932:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2182,
                              "name": "getTokenState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2119,
                              "src": "3918:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_NFTState_$4517_memory_ptr_$",
                                "typeString": "function (uint256) view returns (struct NFTState memory)"
                              }
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3918:31:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                              "typeString": "struct NFTState memory"
                            }
                          },
                          "src": "3898:51:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                            "typeString": "struct NFTState memory"
                          }
                        },
                        "id": 2188,
                        "nodeType": "ExpressionStatement",
                        "src": "3898:51:21"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2172,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2169,
                      "src": "3856:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2173,
                        "name": "ownerTokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "3858:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[] storage pointer"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3858:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3856:22:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2190,
                  "initializationExpression": {
                    "assignments": [
                      2169
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2169,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3851:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2190,
                        "src": "3846:6:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2168,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3846:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2171,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3853:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3846:8:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3880:3:21",
                      "subExpression": {
                        "id": 2176,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2169,
                        "src": "3880:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2178,
                    "nodeType": "ExpressionStatement",
                    "src": "3880:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "3841:119:21"
                },
                {
                  "expression": {
                    "id": 2191,
                    "name": "tokenStateList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2159,
                    "src": "3976:14:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct NFTState memory[] memory"
                    }
                  },
                  "functionReturnParameters": 2144,
                  "id": 2192,
                  "nodeType": "Return",
                  "src": "3969:21:21"
                }
              ]
            },
            "functionSelector": "3d7660e6",
            "id": 2194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllOwnerTokenStates",
            "nameLocation": "3583:22:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2139,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3628:8:21"
            },
            "parameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2137,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3614:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2194,
                  "src": "3606:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3605:15:21"
            },
            "returnParameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2194,
                  "src": "3650:17:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct NFTState[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2141,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2140,
                        "name": "NFTState",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4517,
                        "src": "3650:8:21"
                      },
                      "referencedDeclaration": 4517,
                      "src": "3650:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                        "typeString": "struct NFTState"
                      }
                    },
                    "id": 2142,
                    "nodeType": "ArrayTypeName",
                    "src": "3650:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_NFTState_$4517_storage_$dyn_storage_ptr",
                      "typeString": "struct NFTState[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3649:19:21"
            },
            "scope": 3016,
            "src": "3574:423:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5874
            ],
            "body": {
              "id": 2219,
              "nodeType": "Block",
              "src": "4471:143:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2204,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "4489:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4506:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4498:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2205,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4498:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4498:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4489:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4510:44:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 2203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4481:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4481:74:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2212,
                  "nodeType": "ExpressionStatement",
                  "src": "4481:74:21"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2213,
                          "name": "_ownerStates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1937,
                          "src": "4572:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                            "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                          }
                        },
                        "id": 2215,
                        "indexExpression": {
                          "id": 2214,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2197,
                          "src": "4585:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4572:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                          "typeString": "struct NFTOwnerState storage ref"
                        }
                      },
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4501,
                      "src": "4572:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4572:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2202,
                  "id": 2218,
                  "nodeType": "Return",
                  "src": "4565:42:21"
                }
              ]
            },
            "documentation": {
              "id": 2195,
              "nodeType": "StructuredDocumentation",
              "src": "4337:48:21",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4399:9:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4444:8:21"
            },
            "parameters": {
              "id": 2198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2197,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4417:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "4409:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4409:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4408:15:21"
            },
            "returnParameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2220,
                  "src": "4462:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4461:9:21"
            },
            "scope": 3016,
            "src": "4390:224:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5882
            ],
            "body": {
              "id": 2247,
              "nodeType": "Block",
              "src": "4752:154:21",
              "statements": [
                {
                  "assignments": [
                    2230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2230,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4770:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2247,
                      "src": "4762:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2229,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4762:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2234,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2231,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "4778:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2233,
                    "indexExpression": {
                      "id": 2232,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2223,
                      "src": "4786:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4778:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4762:32:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2236,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2230,
                          "src": "4812:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4829:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4821:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2237,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4821:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4821:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4812:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4833:43:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 2235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4804:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:73:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2244,
                  "nodeType": "ExpressionStatement",
                  "src": "4804:73:21"
                },
                {
                  "expression": {
                    "id": 2245,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2230,
                    "src": "4894:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2228,
                  "id": 2246,
                  "nodeType": "Return",
                  "src": "4887:12:21"
                }
              ]
            },
            "documentation": {
              "id": 2221,
              "nodeType": "StructuredDocumentation",
              "src": "4620:46:21",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 2248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "4680:7:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2225,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4725:8:21"
            },
            "parameters": {
              "id": 2224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4696:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "4688:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4688:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4687:17:21"
            },
            "returnParameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "4743:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4742:9:21"
            },
            "scope": 3016,
            "src": "4671:235:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5910
            ],
            "body": {
              "id": 2289,
              "nodeType": "Block",
              "src": "5034:324:21",
              "statements": [
                {
                  "assignments": [
                    2258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2258,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5052:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "5044:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2257,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5044:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2262,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2260,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "5068:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2259,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2248,
                      "src": "5060:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5060:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5044:32:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2264,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2251,
                          "src": "5094:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2265,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2258,
                          "src": "5100:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5094:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 2267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5107:35:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 2263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5086:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:57:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2269,
                  "nodeType": "ExpressionStatement",
                  "src": "5086:57:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2271,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4953,
                              "src": "5175:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5175:12:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2273,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "5191:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5175:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2276,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2258,
                              "src": "5217:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2277,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4953,
                                "src": "5224:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5224:12:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2275,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "5200:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5200:37:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5175:62:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5251:58:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 2270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5154:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5154:165:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "5154:165:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2285,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2251,
                        "src": "5339:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2286,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "5343:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2284,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "5330:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5330:21:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "5330:21:21"
                }
              ]
            },
            "documentation": {
              "id": 2249,
              "nodeType": "StructuredDocumentation",
              "src": "4912:46:21",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 2290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4972:7:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2255,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5024:8:21"
            },
            "parameters": {
              "id": 2254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2251,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4988:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "4980:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5000:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "4992:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4979:29:21"
            },
            "returnParameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5034:0:21"
            },
            "scope": 3016,
            "src": "4963:395:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5918
            ],
            "body": {
              "id": 2310,
              "nodeType": "Block",
              "src": "5504:132:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2301,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2293,
                            "src": "5530:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2300,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2469,
                          "src": "5522:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5522:16:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5540:46:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 2299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5514:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5514:73:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "5514:73:21"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2306,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "5605:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2308,
                    "indexExpression": {
                      "id": 2307,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2293,
                      "src": "5621:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5605:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2298,
                  "id": 2309,
                  "nodeType": "Return",
                  "src": "5598:31:21"
                }
              ]
            },
            "documentation": {
              "id": 2291,
              "nodeType": "StructuredDocumentation",
              "src": "5364:50:21",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 2311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "5428:11:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2295,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5477:8:21"
            },
            "parameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5448:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "5440:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5440:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5439:17:21"
            },
            "returnParameters": {
              "id": 2298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2311,
                  "src": "5495:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5495:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5494:9:21"
            },
            "scope": 3016,
            "src": "5419:217:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5926
            ],
            "body": {
              "id": 2327,
              "nodeType": "Block",
              "src": "5787:69:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2321,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4953,
                          "src": "5816:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5816:12:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2323,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
                        "src": "5830:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2324,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2316,
                        "src": "5840:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2320,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2942,
                      "src": "5797:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5797:52:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "5797:52:21"
                }
              ]
            },
            "documentation": {
              "id": 2312,
              "nodeType": "StructuredDocumentation",
              "src": "5642:56:21",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 2328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "5712:17:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5778:8:21"
            },
            "parameters": {
              "id": 2317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2314,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5738:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "5730:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5730:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2316,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "5753:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "5748:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2315,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5748:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5729:33:21"
            },
            "returnParameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5787:0:21"
            },
            "scope": 3016,
            "src": "5703:153:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5936
            ],
            "body": {
              "id": 2345,
              "nodeType": "Block",
              "src": "6025:59:21",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2339,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1956,
                        "src": "6042:18:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 2341,
                      "indexExpression": {
                        "id": 2340,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "6061:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6042:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2343,
                    "indexExpression": {
                      "id": 2342,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2333,
                      "src": "6068:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6042:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2338,
                  "id": 2344,
                  "nodeType": "Return",
                  "src": "6035:42:21"
                }
              ]
            },
            "documentation": {
              "id": 2329,
              "nodeType": "StructuredDocumentation",
              "src": "5862:55:21",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 2346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5931:16:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2335,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6001:8:21"
            },
            "parameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5956:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "5948:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5948:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5971:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "5963:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5947:33:21"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "6019:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6019:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6018:6:21"
            },
            "scope": 3016,
            "src": "5922:162:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5902
            ],
            "body": {
              "id": 2372,
              "nodeType": "Block",
              "src": "6235:211:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2359,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4953,
                              "src": "6324:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6324:12:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2361,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2353,
                            "src": "6338:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2358,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "6305:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6305:41:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6348:51:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6297:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6297:103:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2365,
                  "nodeType": "ExpressionStatement",
                  "src": "6297:103:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2367,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2349,
                        "src": "6421:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2368,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2351,
                        "src": "6427:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2369,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2353,
                        "src": "6431:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2366,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2887,
                      "src": "6411:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6411:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2371,
                  "nodeType": "ExpressionStatement",
                  "src": "6411:28:21"
                }
              ]
            },
            "documentation": {
              "id": 2347,
              "nodeType": "StructuredDocumentation",
              "src": "6090:51:21",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 2373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6155:12:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2355,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6226:8:21"
            },
            "parameters": {
              "id": 2354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6177:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "6169:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6169:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2351,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6191:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "6183:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6183:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2353,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6202:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "6194:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6194:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6167:43:21"
            },
            "returnParameters": {
              "id": 2356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6235:0:21"
            },
            "scope": 3016,
            "src": "6146:300:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5892
            ],
            "body": {
              "id": 2391,
              "nodeType": "Block",
              "src": "6603:56:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2385,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "6630:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2386,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2378,
                        "src": "6636:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2387,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2380,
                        "src": "6640:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6649:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2384,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2392,
                        2422
                      ],
                      "referencedDeclaration": 2422,
                      "src": "6613:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6613:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2390,
                  "nodeType": "ExpressionStatement",
                  "src": "6613:39:21"
                }
              ]
            },
            "documentation": {
              "id": 2374,
              "nodeType": "StructuredDocumentation",
              "src": "6451:55:21",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 2392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "6520:16:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6594:8:21"
            },
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6545:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "6537:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6537:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6559:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "6551:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6551:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2380,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6570:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2392,
                  "src": "6562:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6562:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6536:42:21"
            },
            "returnParameters": {
              "id": 2383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6603:0:21"
            },
            "scope": 3016,
            "src": "6511:148:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5948
            ],
            "body": {
              "id": 2421,
              "nodeType": "Block",
              "src": "6838:169:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2407,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4953,
                              "src": "6875:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6875:12:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2409,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2399,
                            "src": "6889:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2406,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "6856:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6856:41:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6899:51:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6848:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6848:103:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "6848:103:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2415,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "6975:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2416,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "6981:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2417,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "6985:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2418,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2401,
                        "src": "6994:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2414,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2451,
                      "src": "6961:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6961:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "6961:39:21"
                }
              ]
            },
            "documentation": {
              "id": 2393,
              "nodeType": "StructuredDocumentation",
              "src": "6665:55:21",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 2422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "6734:16:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6829:8:21"
            },
            "parameters": {
              "id": 2402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6759:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "6751:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6751:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6773:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "6765:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6765:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6785:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "6777:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6777:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2401,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6807:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2422,
                  "src": "6794:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6750:63:21"
            },
            "returnParameters": {
              "id": 2404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6838:0:21"
            },
            "scope": 3016,
            "src": "6725:282:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2450,
              "nodeType": "Block",
              "src": "8010:166:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2435,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2425,
                        "src": "8030:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2436,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2427,
                        "src": "8036:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2437,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "8040:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2434,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2887,
                      "src": "8020:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8020:28:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2439,
                  "nodeType": "ExpressionStatement",
                  "src": "8020:28:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2442,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2425,
                            "src": "8089:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2443,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "8095:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2444,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2429,
                            "src": "8099:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2445,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "8108:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2441,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "8066:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8066:48:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8116:52:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8058:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8058:111:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2449,
                  "nodeType": "ExpressionStatement",
                  "src": "8058:111:21"
                }
              ]
            },
            "documentation": {
              "id": 2423,
              "nodeType": "StructuredDocumentation",
              "src": "7013:851:21",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "7878:13:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7909:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "7901:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7901:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7931:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "7923:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7923:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7951:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "7943:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7943:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7981:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2451,
                  "src": "7968:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7968:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7891:101:21"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8010:0:21"
            },
            "scope": 3016,
            "src": "7869:307:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2468,
              "nodeType": "Block",
              "src": "8550:54:21",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2459,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "8567:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2461,
                      "indexExpression": {
                        "id": 2460,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2454,
                        "src": "8575:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8567:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8595:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8587:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8587:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8587:10:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8567:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2458,
                  "id": 2467,
                  "nodeType": "Return",
                  "src": "8560:37:21"
                }
              ]
            },
            "documentation": {
              "id": 2452,
              "nodeType": "StructuredDocumentation",
              "src": "8182:292:21",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 2469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "8488:7:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2454,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8504:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2469,
                  "src": "8496:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8496:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8495:17:21"
            },
            "returnParameters": {
              "id": 2458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2469,
                  "src": "8544:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2456,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8544:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8543:6:21"
            },
            "scope": 3016,
            "src": "8479:125:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "8861:238:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2481,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2474,
                            "src": "8887:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2480,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2469,
                          "src": "8879:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8879:16:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8897:46:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 2479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8871:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8871:73:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2485,
                  "nodeType": "ExpressionStatement",
                  "src": "8871:73:21"
                },
                {
                  "assignments": [
                    2487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2487,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "8962:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2508,
                      "src": "8954:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2486,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8954:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2491,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2489,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2474,
                        "src": "8978:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2488,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2248,
                      "src": "8970:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8970:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8954:32:21"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2492,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2472,
                              "src": "9004:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2493,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2487,
                              "src": "9015:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9004:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2496,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2474,
                                  "src": "9036:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2495,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2311,
                                "src": "9024:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9024:20:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2498,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2472,
                              "src": "9048:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9024:31:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9004:51:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2502,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2487,
                              "src": "9076:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2503,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2472,
                              "src": "9083:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2501,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "9059:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9059:32:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9004:87:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2506,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9003:89:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2478,
                  "id": 2507,
                  "nodeType": "Return",
                  "src": "8996:96:21"
                }
              ]
            },
            "documentation": {
              "id": 2470,
              "nodeType": "StructuredDocumentation",
              "src": "8610:147:21",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "8771:18:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2472,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8798:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "8790:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8790:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2474,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8815:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "8807:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8807:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8789:34:21"
            },
            "returnParameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "8855:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8855:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8854:6:21"
            },
            "scope": 3016,
            "src": "8762:337:21",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2523,
              "nodeType": "Block",
              "src": "9494:43:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2518,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2512,
                        "src": "9514:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2519,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2514,
                        "src": "9518:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9527:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2517,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2524,
                        2610
                      ],
                      "referencedDeclaration": 2610,
                      "src": "9504:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9504:26:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2522,
                  "nodeType": "ExpressionStatement",
                  "src": "9504:26:21"
                }
              ]
            },
            "documentation": {
              "id": 2510,
              "nodeType": "StructuredDocumentation",
              "src": "9105:319:21",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9438:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2512,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9456:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "9448:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9448:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9468:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "9460:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9460:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9447:29:21"
            },
            "returnParameters": {
              "id": 2516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9494:0:21"
            },
            "scope": 3016,
            "src": "9429:108:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2525,
              "nodeType": "StructuredDocumentation",
              "src": "9543:210:21",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "eventSelector": "b8b1c58d1488f8bff2b71422d8aaab70b7fab5d1db4a430a7d3232d2bc0adb83",
            "id": 2536,
            "name": "MintToken",
            "nameLocation": "9766:9:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2527,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9784:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "9776:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2529,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9793:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "9788:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9788:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2531,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "9810:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "9802:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9802:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2534,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ownerState",
                  "nameLocation": "9837:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "9823:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTOwnerState_$4502_memory_ptr",
                    "typeString": "struct NFTOwnerState"
                  },
                  "typeName": {
                    "id": 2533,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2532,
                      "name": "NFTOwnerState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4502,
                      "src": "9823:13:21"
                    },
                    "referencedDeclaration": 4502,
                    "src": "9823:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage_ptr",
                      "typeString": "struct NFTOwnerState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:73:21"
            },
            "src": "9760:89:21"
          },
          {
            "baseFunctions": [
              5233
            ],
            "body": {
              "id": 2570,
              "nodeType": "Block",
              "src": "9923:197:21",
              "statements": [
                {
                  "expression": {
                    "id": 2547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2545,
                      "name": "nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "9933:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9948:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9933:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2548,
                  "nodeType": "ExpressionStatement",
                  "src": "9933:16:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2550,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "9974:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2551,
                        "name": "nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "9978:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2549,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2688,
                      "src": "9968:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9968:22:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2553,
                  "nodeType": "ExpressionStatement",
                  "src": "9968:22:21"
                },
                {
                  "expression": {
                    "id": 2558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2554,
                        "name": "_tokenStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "10000:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTState_$4517_storage_$",
                          "typeString": "mapping(uint256 => struct NFTState storage ref)"
                        }
                      },
                      "id": 2556,
                      "indexExpression": {
                        "id": 2555,
                        "name": "nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "10013:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10000:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                        "typeString": "struct NFTState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2557,
                      "name": "tokenState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2541,
                      "src": "10028:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                        "typeString": "struct NFTState memory"
                      }
                    },
                    "src": "10000:38:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_storage",
                      "typeString": "struct NFTState storage ref"
                    }
                  },
                  "id": 2559,
                  "nodeType": "ExpressionStatement",
                  "src": "10000:38:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2561,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "10063:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2562,
                        "name": "nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "10067:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2563,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10080:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "10080:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2565,
                          "name": "_ownerStates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1937,
                          "src": "10094:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                            "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                          }
                        },
                        "id": 2567,
                        "indexExpression": {
                          "id": 2566,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "10107:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10094:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                          "typeString": "struct NFTOwnerState storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                          "typeString": "struct NFTOwnerState storage ref"
                        }
                      ],
                      "id": 2560,
                      "name": "MintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2536,
                      "src": "10053:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_NFTOwnerState_$4502_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,struct NFTOwnerState memory)"
                      }
                    },
                    "id": 2568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10053:59:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2569,
                  "nodeType": "EmitStatement",
                  "src": "10048:64:21"
                }
              ]
            },
            "functionSelector": "b1d1d00b",
            "id": 2571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "9863:4:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2543,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9915:8:21"
            },
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2538,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9876:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2571,
                  "src": "9868:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9868:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "tokenState",
                  "nameLocation": "9896:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2571,
                  "src": "9880:26:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFTState_$4517_memory_ptr",
                    "typeString": "struct NFTState"
                  },
                  "typeName": {
                    "id": 2540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2539,
                      "name": "NFTState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4517,
                      "src": "9880:8:21"
                    },
                    "referencedDeclaration": 4517,
                    "src": "9880:8:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFTState_$4517_storage_ptr",
                      "typeString": "struct NFTState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9867:40:21"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9923:0:21"
            },
            "scope": 3016,
            "src": "9854:266:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5238
            ],
            "body": {
              "id": 2581,
              "nodeType": "Block",
              "src": "10174:31:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2578,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2573,
                        "src": "10190:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2577,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2823,
                      "src": "10184:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10184:14:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "10184:14:21"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 2582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "10135:4:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2575,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10165:8:21"
            },
            "parameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2573,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10148:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2582,
                  "src": "10140:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10140:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10139:18:21"
            },
            "returnParameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10174:0:21"
            },
            "scope": 3016,
            "src": "10126:79:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2609,
              "nodeType": "Block",
              "src": "10536:197:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2592,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2584,
                        "src": "10552:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2593,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "10556:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2591,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2688,
                      "src": "10546:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10546:18:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2595,
                  "nodeType": "ExpressionStatement",
                  "src": "10546:18:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10627:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10619:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2598,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10619:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10619:10:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2602,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "10631:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2603,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2586,
                            "src": "10635:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2604,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2588,
                            "src": "10644:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2597,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "10596:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10596:54:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10664:52:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10575:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10575:151:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "10575:151:21"
                }
              ]
            },
            "id": 2610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "10430:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2584,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10457:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "10449:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10449:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10477:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "10469:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10469:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2588,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10507:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2610,
                  "src": "10494:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10494:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10439:79:21"
            },
            "returnParameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10536:0:21"
            },
            "scope": 3016,
            "src": "10421:312:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2687,
              "nodeType": "Block",
              "src": "11116:498:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2619,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2613,
                          "src": "11134:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11148:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11140:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2620,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11140:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11140:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11134:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11152:34:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 2618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11126:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11126:61:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2627,
                  "nodeType": "ExpressionStatement",
                  "src": "11126:61:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11232:17:21",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2630,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2615,
                              "src": "11241:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2629,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2469,
                            "src": "11233:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11233:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11251:30:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11224:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11224:58:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2635,
                  "nodeType": "ExpressionStatement",
                  "src": "11224:58:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11322:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11314:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2637,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11314:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11314:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2641,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "11326:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2642,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "11330:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2636,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "11293:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11293:45:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2644,
                  "nodeType": "ExpressionStatement",
                  "src": "11293:45:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2650,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "11390:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2645,
                            "name": "_ownerStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1937,
                            "src": "11359:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                              "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                            }
                          },
                          "id": 2647,
                          "indexExpression": {
                            "id": 2646,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2613,
                            "src": "11372:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11359:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                            "typeString": "struct NFTOwnerState storage ref"
                          }
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4501,
                        "src": "11359:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11359:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11359:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "11359:39:21"
                },
                {
                  "expression": {
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2653,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "11408:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2655,
                      "indexExpression": {
                        "id": 2654,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "11416:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11408:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2656,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2613,
                      "src": "11427:2:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11408:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2658,
                  "nodeType": "ExpressionStatement",
                  "src": "11408:21:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11464:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11456:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2660,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11456:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11456:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2664,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "11468:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2665,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "11472:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2659,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5848,
                      "src": "11447:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11447:33:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2667,
                  "nodeType": "EmitStatement",
                  "src": "11442:38:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2668,
                            "name": "_ownerStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1937,
                            "src": "11495:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                              "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                            }
                          },
                          "id": 2670,
                          "indexExpression": {
                            "id": 2669,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2613,
                            "src": "11508:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11495:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                            "typeString": "struct NFTOwnerState storage ref"
                          }
                        },
                        "id": 2671,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4501,
                        "src": "11495:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11495:32:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11531:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11495:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2681,
                  "nodeType": "IfStatement",
                  "src": "11491:88:21",
                  "trueBody": {
                    "id": 2680,
                    "nodeType": "Block",
                    "src": "11534:45:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 2678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11548:19:21",
                          "subExpression": {
                            "expression": {
                              "id": 2675,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "11548:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFTContractState_$4507_storage",
                                "typeString": "struct NFTContractState storage ref"
                              }
                            },
                            "id": 2677,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ownerCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4504,
                            "src": "11548:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2679,
                        "nodeType": "ExpressionStatement",
                        "src": "11548:19:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11588:19:21",
                    "subExpression": {
                      "expression": {
                        "id": 2682,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "11588:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTContractState_$4507_storage",
                          "typeString": "struct NFTContractState storage ref"
                        }
                      },
                      "id": 2684,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4506,
                      "src": "11588:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2686,
                  "nodeType": "ExpressionStatement",
                  "src": "11588:19:21"
                }
              ]
            },
            "documentation": {
              "id": 2611,
              "nodeType": "StructuredDocumentation",
              "src": "10739:311:21",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 2688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "11064:5:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2613,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11078:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2688,
                  "src": "11070:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11070:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11090:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2688,
                  "src": "11082:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11082:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11069:29:21"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11116:0:21"
            },
            "scope": 3016,
            "src": "11055:559:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2822,
              "nodeType": "Block",
              "src": "11880:1021:21",
              "statements": [
                {
                  "assignments": [
                    2695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2695,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "11898:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2822,
                      "src": "11890:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2694,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11890:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2699,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2697,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "11914:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2696,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2248,
                      "src": "11906:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11906:16:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11890:32:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2701,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2695,
                          "src": "11940:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11957:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11949:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2702,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11949:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11949:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11940:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20646f6573206e6f7420657873697374",
                        "id": 2707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11961:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97a657ccfa2c5bb624e51f939b605443e06e0bd248b0fb19538c6e5b4d6c77b8",
                          "typeString": "literal_string \"The token does not exsist\""
                        },
                        "value": "The token does not exsist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97a657ccfa2c5bb624e51f939b605443e06e0bd248b0fb19538c6e5b4d6c77b8",
                          "typeString": "literal_string \"The token does not exsist\""
                        }
                      ],
                      "id": 2700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11932:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11932:57:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2709,
                  "nodeType": "ExpressionStatement",
                  "src": "11932:57:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2711,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2695,
                        "src": "12021:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12036:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12028:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2712,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12028:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12028:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2716,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "12040:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2710,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "12000:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12000:48:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2718,
                  "nodeType": "ExpressionStatement",
                  "src": "12000:48:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12103:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12095:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2720,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12095:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12095:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2724,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "12107:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2719,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "12086:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12086:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "12086:29:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2728,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2695,
                        "src": "12139:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12154:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12146:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2729,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12146:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12146:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2733,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2691,
                        "src": "12158:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2727,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5848,
                      "src": "12130:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12130:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2735,
                  "nodeType": "EmitStatement",
                  "src": "12125:41:21"
                },
                {
                  "assignments": [
                    2737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2737,
                      "mutability": "mutable",
                      "name": "tokenRemovedBool",
                      "nameLocation": "12291:16:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2822,
                      "src": "12286:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2736,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12286:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2739,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12310:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12286:29:21"
                },
                {
                  "assignments": [
                    2741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2741,
                      "mutability": "mutable",
                      "name": "tokenIdsLength",
                      "nameLocation": "12332:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2822,
                      "src": "12327:19:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2740,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12327:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2747,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2742,
                          "name": "_ownerStates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1937,
                          "src": "12349:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                            "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                          }
                        },
                        "id": 2744,
                        "indexExpression": {
                          "id": 2743,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2695,
                          "src": "12362:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12349:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                          "typeString": "struct NFTOwnerState storage ref"
                        }
                      },
                      "id": 2745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4501,
                      "src": "12349:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "12349:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12327:57:21"
                },
                {
                  "body": {
                    "id": 2820,
                    "nodeType": "Block",
                    "src": "12432:463:21",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2758,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2691,
                            "src": "12450:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2759,
                                  "name": "_ownerStates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1937,
                                  "src": "12461:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                                    "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                                  }
                                },
                                "id": 2761,
                                "indexExpression": {
                                  "id": 2760,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "12474:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12461:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                                  "typeString": "struct NFTOwnerState storage ref"
                                }
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4501,
                              "src": "12461:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2764,
                            "indexExpression": {
                              "id": 2763,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2749,
                              "src": "12490:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12461:31:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12450:42:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2795,
                        "nodeType": "IfStatement",
                        "src": "12446:273:21",
                        "trueBody": {
                          "id": 2794,
                          "nodeType": "Block",
                          "src": "12493:226:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 2780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2766,
                                        "name": "_ownerStates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1937,
                                        "src": "12511:12:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                                          "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                                        }
                                      },
                                      "id": 2768,
                                      "indexExpression": {
                                        "id": 2767,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2695,
                                        "src": "12524:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12511:19:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                                        "typeString": "struct NFTOwnerState storage ref"
                                      }
                                    },
                                    "id": 2769,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4501,
                                    "src": "12511:28:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2771,
                                  "indexExpression": {
                                    "id": 2770,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2749,
                                    "src": "12540:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12511:31:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2772,
                                        "name": "_ownerStates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1937,
                                        "src": "12545:12:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                                          "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                                        }
                                      },
                                      "id": 2774,
                                      "indexExpression": {
                                        "id": 2773,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2695,
                                        "src": "12558:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12545:19:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                                        "typeString": "struct NFTOwnerState storage ref"
                                      }
                                    },
                                    "id": 2775,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4501,
                                    "src": "12545:28:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2779,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2776,
                                      "name": "tokenIdsLength",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2741,
                                      "src": "12574:14:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2777,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12589:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12574:16:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12545:46:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12511:80:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2781,
                              "nodeType": "ExpressionStatement",
                              "src": "12511:80:21"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2782,
                                        "name": "_ownerStates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1937,
                                        "src": "12609:12:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                                          "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                                        }
                                      },
                                      "id": 2784,
                                      "indexExpression": {
                                        "id": 2783,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2695,
                                        "src": "12622:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12609:19:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                                        "typeString": "struct NFTOwnerState storage ref"
                                      }
                                    },
                                    "id": 2785,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4501,
                                    "src": "12609:28:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 2786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "12609:32:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer)"
                                  }
                                },
                                "id": 2787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12609:34:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2788,
                              "nodeType": "ExpressionStatement",
                              "src": "12609:34:21"
                            },
                            {
                              "expression": {
                                "id": 2791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2789,
                                  "name": "tokenRemovedBool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2737,
                                  "src": "12662:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12681:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "12662:23:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2792,
                              "nodeType": "ExpressionStatement",
                              "src": "12662:23:21"
                            },
                            {
                              "id": 2793,
                              "nodeType": "Break",
                              "src": "12703:5:21"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12728:23:21",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2796,
                              "name": "_owners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "12735:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 2798,
                            "indexExpression": {
                              "id": 2797,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2691,
                              "src": "12743:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12735:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2800,
                        "nodeType": "ExpressionStatement",
                        "src": "12728:23:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2801,
                                  "name": "_ownerStates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1937,
                                  "src": "12767:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                                    "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                                  }
                                },
                                "id": 2803,
                                "indexExpression": {
                                  "id": 2802,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "12780:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12767:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                                  "typeString": "struct NFTOwnerState storage ref"
                                }
                              },
                              "id": 2804,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4501,
                              "src": "12767:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12767:35:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12806:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12767:40:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2814,
                        "nodeType": "IfStatement",
                        "src": "12763:91:21",
                        "trueBody": {
                          "id": 2813,
                          "nodeType": "Block",
                          "src": "12809:45:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 2811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "12823:19:21",
                                "subExpression": {
                                  "expression": {
                                    "id": 2808,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1925,
                                    "src": "12823:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_NFTContractState_$4507_storage",
                                      "typeString": "struct NFTContractState storage ref"
                                    }
                                  },
                                  "id": 2810,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ownerCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4504,
                                  "src": "12823:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2812,
                              "nodeType": "ExpressionStatement",
                              "src": "12823:19:21"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "12864:19:21",
                          "subExpression": {
                            "expression": {
                              "id": 2815,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "12864:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFTContractState_$4507_storage",
                                "typeString": "struct NFTContractState storage ref"
                              }
                            },
                            "id": 2817,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tokenCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4506,
                            "src": "12864:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2819,
                        "nodeType": "ExpressionStatement",
                        "src": "12864:19:21"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2752,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2749,
                      "src": "12409:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2753,
                      "name": "tokenIdsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2741,
                      "src": "12411:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12409:16:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2821,
                  "initializationExpression": {
                    "assignments": [
                      2749
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2749,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12404:1:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2821,
                        "src": "12399:6:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2748,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12399:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2751,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12406:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12399:8:21"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12427:3:21",
                      "subExpression": {
                        "id": 2755,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2749,
                        "src": "12427:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2757,
                    "nodeType": "ExpressionStatement",
                    "src": "12427:3:21"
                  },
                  "nodeType": "ForStatement",
                  "src": "12394:501:21"
                }
              ]
            },
            "documentation": {
              "id": 2689,
              "nodeType": "StructuredDocumentation",
              "src": "11620:206:21",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 2823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "11840:5:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2691,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11854:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "11846:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11846:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11845:17:21"
            },
            "returnParameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11880:0:21"
            },
            "scope": 3016,
            "src": "11831:1070:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2886,
              "nodeType": "Block",
              "src": "13333:441:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2835,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2830,
                              "src": "13359:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2834,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2248,
                            "src": "13351:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13351:16:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2837,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2826,
                          "src": "13371:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13351:24:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13377:43:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 2833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13343:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13343:78:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2841,
                  "nodeType": "ExpressionStatement",
                  "src": "13343:78:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2843,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2828,
                          "src": "13439:2:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13453:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13445:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2844,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13445:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13445:10:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13439:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13457:38:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 2842,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13431:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13431:65:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2851,
                  "nodeType": "ExpressionStatement",
                  "src": "13431:65:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2853,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2826,
                        "src": "13528:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2854,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2828,
                        "src": "13534:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2855,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "13538:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2852,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "13507:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13507:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2857,
                  "nodeType": "ExpressionStatement",
                  "src": "13507:39:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13625:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13617:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13617:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13617:10:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2863,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "13629:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2858,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2910,
                      "src": "13608:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13608:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "13608:29:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2871,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "13679:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2866,
                            "name": "_ownerStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1937,
                            "src": "13648:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NFTOwnerState_$4502_storage_$",
                              "typeString": "mapping(address => struct NFTOwnerState storage ref)"
                            }
                          },
                          "id": 2868,
                          "indexExpression": {
                            "id": 2867,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "13661:2:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13648:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NFTOwnerState_$4502_storage",
                            "typeString": "struct NFTOwnerState storage ref"
                          }
                        },
                        "id": 2869,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4501,
                        "src": "13648:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "13648:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 2872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13648:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2873,
                  "nodeType": "ExpressionStatement",
                  "src": "13648:39:21"
                },
                {
                  "expression": {
                    "id": 2878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2874,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "13698:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2876,
                      "indexExpression": {
                        "id": 2875,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "13706:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13698:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2877,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2828,
                      "src": "13717:2:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13698:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2879,
                  "nodeType": "ExpressionStatement",
                  "src": "13698:21:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2881,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2826,
                        "src": "13744:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2882,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2828,
                        "src": "13750:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2883,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2830,
                        "src": "13754:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2880,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5848,
                      "src": "13735:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13735:27:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2885,
                  "nodeType": "EmitStatement",
                  "src": "13730:32:21"
                }
              ]
            },
            "documentation": {
              "id": 2824,
              "nodeType": "StructuredDocumentation",
              "src": "12906:313:21",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "13233:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2826,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13260:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2887,
                  "src": "13252:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13252:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13282:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2887,
                  "src": "13274:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13274:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2830,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13302:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2887,
                  "src": "13294:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13294:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13242:73:21"
            },
            "returnParameters": {
              "id": 2832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13333:0:21"
            },
            "scope": 3016,
            "src": "13224:550:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2909,
              "nodeType": "Block",
              "src": "13949:100:21",
              "statements": [
                {
                  "expression": {
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2895,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1950,
                        "src": "13959:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2897,
                      "indexExpression": {
                        "id": 2896,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "13975:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13959:24:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2898,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2890,
                      "src": "13986:2:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13959:29:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2900,
                  "nodeType": "ExpressionStatement",
                  "src": "13959:29:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2903,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "14020:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2902,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2248,
                          "src": "14012:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14012:16:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2905,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2890,
                        "src": "14030:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2906,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "14034:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2901,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5857,
                      "src": "14003:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14003:39:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2908,
                  "nodeType": "EmitStatement",
                  "src": "13998:44:21"
                }
              ]
            },
            "documentation": {
              "id": 2888,
              "nodeType": "StructuredDocumentation",
              "src": "13780:100:21",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 2910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "13894:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2890,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13911:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2910,
                  "src": "13903:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13903:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2892,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13923:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2910,
                  "src": "13915:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13915:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13902:29:21"
            },
            "returnParameters": {
              "id": 2894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13949:0:21"
            },
            "scope": 3016,
            "src": "13885:164:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2941,
              "nodeType": "Block",
              "src": "14307:184:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2921,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2913,
                          "src": "14325:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2922,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2915,
                          "src": "14334:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14325:17:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14344:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14317:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14317:55:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2926,
                  "nodeType": "ExpressionStatement",
                  "src": "14317:55:21"
                },
                {
                  "expression": {
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2927,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1956,
                          "src": "14382:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 2930,
                        "indexExpression": {
                          "id": 2928,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2913,
                          "src": "14401:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14382:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2931,
                      "indexExpression": {
                        "id": 2929,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "14408:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14382:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2932,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2917,
                      "src": "14420:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14382:46:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "14382:46:21"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2936,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2913,
                        "src": "14458:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2937,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "14465:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2938,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "14475:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2935,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5866,
                      "src": "14443:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14443:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "EmitStatement",
                  "src": "14438:46:21"
                }
              ]
            },
            "documentation": {
              "id": 2911,
              "nodeType": "StructuredDocumentation",
              "src": "14055:124:21",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 2942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "14193:18:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2913,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "14229:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "14221:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14221:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2915,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14252:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "14244:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14244:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "14275:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "14270:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14270:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14211:78:21"
            },
            "returnParameters": {
              "id": 2919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14307:0:21"
            },
            "scope": 3016,
            "src": "14184:307:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3003,
              "nodeType": "Block",
              "src": "15200:622:21",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2956,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2947,
                        "src": "15214:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4664,
                      "src": "15214:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15214:15:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3001,
                    "nodeType": "Block",
                    "src": "15780:36:21",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15801:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2955,
                        "id": 3000,
                        "nodeType": "Return",
                        "src": "15794:11:21"
                      }
                    ]
                  },
                  "id": 3002,
                  "nodeType": "IfStatement",
                  "src": "15210:606:21",
                  "trueBody": {
                    "id": 2998,
                    "nodeType": "Block",
                    "src": "15231:543:21",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2978,
                              "nodeType": "Block",
                              "src": "15346:91:21",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2972,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2970,
                                      "src": "15371:6:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2973,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4644,
                                          "src": "15381:15:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$4644_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 2974,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4643,
                                        "src": "15381:32:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2975,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "15381:41:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "15371:51:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 2955,
                                  "id": 2977,
                                  "nodeType": "Return",
                                  "src": "15364:58:21"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2979,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2971,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2970,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "15338:6:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2979,
                                  "src": "15331:13:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2969,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15331:6:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "15330:15:21"
                            },
                            "src": "15322:115:21"
                          },
                          {
                            "block": {
                              "id": 2995,
                              "nodeType": "Block",
                              "src": "15466:298:21",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2986,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2983,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2981,
                                        "src": "15488:6:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 2984,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "15488:13:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2985,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15505:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "15488:18:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 2993,
                                    "nodeType": "Block",
                                    "src": "15615:135:21",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "15646:86:21",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "15683:2:21",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15687:6:21"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15679:3:21"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15679:15:21"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15702:6:21"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15696:5:21"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15696:13:21"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15672:6:21"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15672:38:21"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15672:38:21"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 2981,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15687:6:21",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2981,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15702:6:21",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2992,
                                        "nodeType": "InlineAssembly",
                                        "src": "15637:95:21"
                                      }
                                    ]
                                  },
                                  "id": 2994,
                                  "nodeType": "IfStatement",
                                  "src": "15484:266:21",
                                  "trueBody": {
                                    "id": 2991,
                                    "nodeType": "Block",
                                    "src": "15508:101:21",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 2988,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15537:52:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 2987,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "15530:6:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2989,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15530:60:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2990,
                                        "nodeType": "ExpressionStatement",
                                        "src": "15530:60:21"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2996,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2982,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2981,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "15458:6:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2996,
                                  "src": "15445:19:21",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2980,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15445:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "15444:21:21"
                            },
                            "src": "15438:326:21"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2963,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4953,
                                "src": "15286:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15286:12:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2965,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2945,
                              "src": "15300:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2966,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2949,
                              "src": "15306:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2967,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2951,
                              "src": "15315:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2960,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2947,
                                  "src": "15265:2:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2959,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4644,
                                "src": "15249:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$4644_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 2961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15249:19:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$4644",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 2962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4643,
                            "src": "15249:36:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15249:72:21",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2997,
                        "nodeType": "TryStatement",
                        "src": "15245:519:21"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2943,
              "nodeType": "StructuredDocumentation",
              "src": "14497:542:21",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 3004,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "15053:22:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2945,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15093:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3004,
                  "src": "15085:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15085:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2947,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15115:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3004,
                  "src": "15107:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15107:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2949,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15135:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3004,
                  "src": "15127:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15127:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2951,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "15165:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3004,
                  "src": "15152:18:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2950,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15152:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15075:101:21"
            },
            "returnParameters": {
              "id": 2955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3004,
                  "src": "15194:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15194:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15193:6:21"
            },
            "scope": 3016,
            "src": "15044:778:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3014,
              "nodeType": "Block",
              "src": "16498:2:21",
              "statements": []
            },
            "documentation": {
              "id": 3005,
              "nodeType": "StructuredDocumentation",
              "src": "15828:545:21",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "16387:20:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3007,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16425:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3015,
                  "src": "16417:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16417:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3009,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16447:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3015,
                  "src": "16439:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16439:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3011,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "16467:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3015,
                  "src": "16459:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16459:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16407:73:21"
            },
            "returnParameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16498:0:21"
            },
            "scope": 3016,
            "src": "16378:122:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3017,
        "src": "1047:15455:21",
        "usedErrors": []
      }
    ],
    "src": "92:16411:21"
  },
  "bytecode": "",
  "bytecodeSha1": "772a3c20a64a91a51f7123e5eaf6db19b0b916d9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "DepositNFT",
  "coverageMap": {
    "branches": {
      "21": {
        "DepositNFT._burn": {
          "80": [
            11940,
            11959,
            true
          ],
          "81": [
            12450,
            12492,
            false
          ],
          "82": [
            12767,
            12807,
            false
          ]
        },
        "DepositNFT._checkOnERC721Received": {
          "87": [
            15488,
            15506,
            false
          ]
        },
        "DepositNFT._mint": {
          "84": [
            11134,
            11150,
            true
          ],
          "85": [
            11495,
            11532,
            false
          ]
        },
        "DepositNFT._safeTransfer": {
          "86": [
            8066,
            8114,
            true
          ]
        },
        "DepositNFT._setApprovalForAll": {
          "83": [
            14325,
            14342,
            true
          ]
        },
        "DepositNFT._transfer": {
          "78": [
            13351,
            13375,
            true
          ],
          "79": [
            13439,
            13455,
            true
          ]
        },
        "DepositNFT.approve": {
          "72": [
            5094,
            5105,
            true
          ],
          "73": [
            5175,
            5196,
            true
          ],
          "74": [
            5200,
            5237,
            true
          ]
        },
        "DepositNFT.balanceOf": {
          "76": [
            4489,
            4508,
            true
          ]
        },
        "DepositNFT.safeTransferFrom": {
          "77": [
            6856,
            6897,
            true
          ]
        },
        "DepositNFT.transferFrom": {
          "75": [
            6305,
            6346,
            true
          ]
        }
      },
      "23": {},
      "28": {},
      "3": {},
      "34": {},
      "36": {},
      "38": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "21": {
        "DepositNFT._approve": {
          "35": [
            13959,
            13988
          ],
          "36": [
            13998,
            14042
          ]
        },
        "DepositNFT._burn": {
          "45": [
            11932,
            11989
          ],
          "46": [
            12086,
            12115
          ],
          "47": [
            12125,
            12166
          ],
          "48": [
            12511,
            12591
          ],
          "49": [
            12609,
            12643
          ],
          "50": [
            12662,
            12685
          ],
          "51": [
            12703,
            12708
          ],
          "52": [
            12728,
            12751
          ],
          "53": [
            12823,
            12842
          ],
          "54": [
            12864,
            12883
          ],
          "55": [
            12427,
            12430
          ]
        },
        "DepositNFT._checkOnERC721Received": {
          "69": [
            15530,
            15590
          ],
          "70": [
            15364,
            15422
          ],
          "71": [
            15794,
            15805
          ]
        },
        "DepositNFT._exists": {
          "4": [
            8560,
            8597
          ]
        },
        "DepositNFT._isApprovedOrOwner": {
          "37": [
            8871,
            8944
          ],
          "38": [
            8996,
            9092
          ]
        },
        "DepositNFT._mint": {
          "59": [
            11126,
            11187
          ],
          "60": [
            11224,
            11282
          ],
          "61": [
            11359,
            11398
          ],
          "62": [
            11408,
            11429
          ],
          "63": [
            11442,
            11480
          ],
          "64": [
            11548,
            11567
          ],
          "65": [
            11588,
            11607
          ]
        },
        "DepositNFT._safeTransfer": {
          "66": [
            8020,
            8048
          ],
          "67": [
            8058,
            8169
          ]
        },
        "DepositNFT._setApprovalForAll": {
          "56": [
            14317,
            14372
          ],
          "57": [
            14382,
            14428
          ],
          "58": [
            14438,
            14484
          ]
        },
        "DepositNFT._transfer": {
          "39": [
            13343,
            13421
          ],
          "40": [
            13431,
            13496
          ],
          "41": [
            13608,
            13637
          ],
          "42": [
            13648,
            13687
          ],
          "43": [
            13698,
            13719
          ],
          "44": [
            13730,
            13762
          ]
        },
        "DepositNFT.approve": {
          "7": [
            5086,
            5143
          ],
          "9": [
            5154,
            5319
          ],
          "10": [
            5330,
            5351
          ]
        },
        "DepositNFT.balanceOf": {
          "26": [
            4481,
            4555
          ],
          "27": [
            4565,
            4607
          ]
        },
        "DepositNFT.burn": {
          "17": [
            10184,
            10198
          ]
        },
        "DepositNFT.getAllOwnerTokenStates": {
          "13": [
            3898,
            3949
          ],
          "14": [
            3880,
            3883
          ],
          "15": [
            3969,
            3990
          ]
        },
        "DepositNFT.getApproved": {
          "5": [
            5514,
            5587
          ],
          "6": [
            5598,
            5629
          ]
        },
        "DepositNFT.getOwnerDepositValue": {
          "23": [
            2574,
            2633
          ],
          "24": [
            2555,
            2558
          ]
        },
        "DepositNFT.getOwnerMarketValue": {
          "19": [
            2940,
            2997
          ],
          "20": [
            2921,
            2924
          ]
        },
        "DepositNFT.isApprovedForAll": {
          "3": [
            6035,
            6077
          ]
        },
        "DepositNFT.mint": {
          "29": [
            9933,
            9949
          ],
          "30": [
            9968,
            9990
          ],
          "31": [
            10000,
            10038
          ],
          "32": [
            10048,
            10112
          ]
        },
        "DepositNFT.ownerOf": {
          "21": [
            4804,
            4877
          ],
          "22": [
            4887,
            4899
          ]
        },
        "DepositNFT.ownerTokenCount": {
          "2": [
            2267,
            2309
          ]
        },
        "DepositNFT.safeTransferFrom": {
          "16": [
            6613,
            6652
          ],
          "33": [
            6848,
            6951
          ],
          "34": [
            6961,
            7000
          ]
        },
        "DepositNFT.setApprovalForAll": {
          "28": [
            5797,
            5849
          ]
        },
        "DepositNFT.transferFrom": {
          "11": [
            6297,
            6400
          ],
          "12": [
            6411,
            6439
          ]
        },
        "DepositNFT.updateTokenState": {
          "18": [
            3527,
            3561
          ]
        }
      },
      "23": {},
      "28": {
        "AccessControlAdapter.connectAccessController": {
          "1": [
            755,
            802
          ]
        },
        "AccessControlAdapter.hasRole": {
          "25": [
            912,
            958
          ]
        }
      },
      "3": {},
      "34": {},
      "36": {},
      "38": {},
      "4": {
        "Address.isContract": {
          "68": [
            1126,
            1141
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "6": {},
      "7": {
        "ERC165.supportsInterface": {
          "0": [
            930,
            977
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "AccessControlAdapter",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/ERC165",
    "IAccessControlAdapter",
    "IDepositNFT",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC165",
    "IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101735760003560e01c80636352211e116100de578063b1d1d00b11610097578063c19d93fb11610071578063c19d93fb14610383578063c2fb09a8146103a6578063e985e9c5146103cf578063f45fd0f31461040b57600080fd5b8063b1d1d00b1461034a578063b88d4fde1461035d578063bc43cbaf1461037057600080fd5b80636352211e146102e3578063650655c3146102f65780636c9cd0971461030957806370a082311461031c57806395d89b411461032f578063a22cb4651461033757600080fd5b80633d7660e6116101305780633d7660e61461023957806342842e0e1461025957806342966c681461026c57806346e5573e1461027f57806348f5adce1461029257806352e5eb79146102b357600080fd5b806301ffc9a71461017857806306fdde03146101b1578063081812fc146101c6578063095ea7b3146101f157806323b872dd146102065780632cc34a6214610219575b600080fd5b61019c6101863660046116ff565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b6101b961042b565b6040516101a89190611769565b6101d96101d436600461177c565b6104b9565b6040516001600160a01b0390911681526020016101a8565b6102046101ff3660046117b1565b610553565b005b6102046102143660046117db565b610668565b61022c610227366004611817565b610699565b6040516101a89190611832565b61024c610247366004611817565b61071f565b6040516101a891906118ea565b6102046102673660046117db565b6107fa565b61020461027a36600461177c565b610815565b61020461028d366004611b03565b610821565b6102a56102a0366004611817565b610897565b6040519081526020016101a8565b6102046102c1366004611817565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6101d96102f136600461177c565b61090d565b6102a5610304366004611817565b61098a565b61019c610317366004611b4a565b610a00565b6102a561032a366004611817565b610a7b565b6101b9610b02565b610204610345366004611ba6565b610b0f565b610204610358366004611bdd565b610b1e565b61020461036b366004611c15565b610c25565b6000546101d9906001600160a01b031681565b600154600254610391919082565b604080519283526020830191909152016101a8565b6102a56103b4366004611817565b6001600160a01b031660009081526006602052604090205490565b61019c6103dd366004611c91565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205460ff1690565b61041e61041936600461177c565b610c5d565b6040516101a89190611cbb565b6003805461043890611cce565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611cce565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b505050505081565b6000818152600860205260408120546001600160a01b03166105375760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600960205260409020546001600160a01b031690565b600061055e8261090d565b9050806001600160a01b0316836001600160a01b0316036105cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161052e565b336001600160a01b03821614806105e757506105e781336103dd565b6106595760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161052e565b6106638383610d78565b505050565b6106723382610de6565b61068e5760405162461bcd60e51b815260040161052e90611d08565b610663838383610edd565b6040805160208101909152606081526001600160a01b038216600090815260066020908152604080832081518154808502820184018452938101848152909391928492849184018282801561070d57602002820191906000526020600020905b8154815260200190600101908083116106f9575b50505091909252509195945050505050565b6001600160a01b038116600090815260066020526040812080546060929067ffffffffffffffff8111156107555761075561194c565b60405190808252806020026020018201604052801561078e57816020015b61077b6115f9565b8152602001906001900390816107735790505b50905060005b82548110156107f2576107c28382815481106107b2576107b2611d59565b9060005260206000200154610c5d565b8282815181106107d4576107d4611d59565b602002602001018190525080806107ea90611d85565b915050610794565b509392505050565b61066383838360405180602001604052806000815250610c25565b61081e8161103c565b50565b600082815260076020818152604092839020845181558185015160018201558385015160028201556060808601518051600384019081558185015160048501559581015160058401559081015160068301556080810151805187969395929461088e938701920190611650565b50505050505050565b6001600160a01b038116600090815260066020526040812081805b82548110156107f257600760008483815481106108d1576108d1611d59565b9060005260206000200154815260200190815260200160002060010154826108f99190611d9e565b91508061090581611d85565b9150506108b2565b6000818152600860205260408120546001600160a01b0316806109845760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161052e565b92915050565b6001600160a01b038116600090815260066020526040812081805b82548110156107f257600760008483815481106109c4576109c4611d59565b9060005260206000200154815260200190815260200160002060000154826109ec9190611d9e565b9150806109f881611d85565b9150506109a5565b60008054604051636c9cd09760e01b81526001600160a01b0390911690636c9cd09790610a339086908690600401611db6565b602060405180830381865afa158015610a50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a749190611de0565b9392505050565b60006001600160a01b038216610ae65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161052e565b506001600160a01b031660009081526006602052604090205490565b6004805461043890611cce565b610b1a33838361127b565b5050565b600160056000828254610b319190611d9e565b92505081905550610b4482600554611349565b80600760006005548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190610bc5929190611650565b50506005546001600160a01b0386166000908152600660205260409081902090517fb8b1c58d1488f8bff2b71422d8aaab70b7fab5d1db4a430a7d3232d2bc0adb839550610c199450879350439190611dfd565b60405180910390a15050565b610c2f3383610de6565b610c4b5760405162461bcd60e51b815260040161052e90611d08565b610c57848484846114c5565b50505050565b610c656115f9565b600060076000848152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482018054610ceb90611cce565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1790611cce565b8015610d645780601f10610d3957610100808354040283529160200191610d64565b820191906000526020600020905b815481529060010190602001808311610d4757829003601f168201915b505050919092525050509052509392505050565b600081815260096020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610dad8261090d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600860205260408120546001600160a01b0316610e5f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161052e565b6000610e6a8361090d565b9050806001600160a01b0316846001600160a01b03161480610ea55750836001600160a01b0316610e9a846104b9565b6001600160a01b0316145b80610ed557506001600160a01b038082166000908152600a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610ef08261090d565b6001600160a01b031614610f585760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161052e565b6001600160a01b038216610fba5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161052e565b610fc5600082610d78565b6001600160a01b038083166000818152600660209081526040808320805460018101825590845282842001869055858352600890915280822080546001600160a01b031916841790555184938716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006110478261090d565b90506001600160a01b03811661109f5760405162461bcd60e51b815260206004820152601960248201527f54686520746f6b656e20646f6573206e6f742065787369737400000000000000604482015260640161052e565b6110aa600083610d78565b60405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a46001600160a01b038116600090815260066020526040812054815b81811015611274576001600160a01b038416600090815260066020526040902080548290811061112f5761112f611d59565b906000526020600020015485036111fd576001600160a01b0384166000908152600660205260409020611163600184611e6c565b8154811061117357611173611d59565b60009182526020808320909101546001600160a01b0387168352600690915260409091208054839081106111a9576111a9611d59565b60009182526020808320909101929092556001600160a01b03861681526006909152604090208054806111de576111de611e83565b6001900381819060005260206000200160009055905560019250611274565b600085815260086020908152604080832080546001600160a01b03191690556001600160a01b03871683526006909152812054900361124c576001805490600061124683611e99565b91905055505b6002805490600061125c83611e99565b9190505550808061126c90611d85565b9150506110fd565b5050505050565b816001600160a01b0316836001600160a01b0316036112dc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161052e565b6001600160a01b038381166000818152600a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03821661139f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161052e565b6000818152600860205260409020546001600160a01b0316156114045760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161052e565b6001600160a01b0382166000818152600660209081526040808320805460018101825590845282842001859055848352600890915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46001600160a01b0382166000908152600660205260409020546001036114ac57600180549060006114a683611d85565b91905055505b600280549060006114bc83611d85565b91905055505050565b6114d0848484610edd565b6114dc848484846114f8565b610c575760405162461bcd60e51b815260040161052e90611eb0565b60006001600160a01b0384163b156115ee57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061153c903390899088908890600401611f02565b6020604051808303816000875af1925050508015611577575060408051601f3d908101601f1916820190925261157491810190611f3f565b60015b6115d4573d8080156115a5576040519150601f19603f3d011682016040523d82523d6000602084013e6115aa565b606091505b5080516000036115cc5760405162461bcd60e51b815260040161052e90611eb0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ed5565b506001949350505050565b604051806080016040528060008152602001600081526020016000815260200161164b6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b905290565b82805461165c90611cce565b90600052602060002090601f01602090048101928261167e57600085556116c4565b82601f1061169757805160ff19168380011785556116c4565b828001600101855582156116c4579182015b828111156116c45782518255916020019190600101906116a9565b506116d09291506116d4565b5090565b5b808211156116d057600081556001016116d5565b6001600160e01b03198116811461081e57600080fd5b60006020828403121561171157600080fd5b8135610a74816116e9565b6000815180845260005b8181101561174257602081850181015186830182015201611726565b81811115611754576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610a74602083018461171c565b60006020828403121561178e57600080fd5b5035919050565b80356001600160a01b03811681146117ac57600080fd5b919050565b600080604083850312156117c457600080fd5b6117cd83611795565b946020939093013593505050565b6000806000606084860312156117f057600080fd5b6117f984611795565b925061180760208501611795565b9150604084013590509250925092565b60006020828403121561182957600080fd5b610a7482611795565b6020808252825182820182905280516040840181905260009291820190839060608601905b808310156118775783518252928401926001929092019190840190611857565b509695505050505050565b805182526020810151602083015260408101516040830152600060608201516080606085015280516080850152602081015160a0850152604081015160c0850152606081015160e08501526080810151905060a0610100850152610ed561012085018261171c565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561193f57603f1988860301845261192d858351611882565b94509285019290850190600101611911565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156119855761198561194c565b60405290565b60405160a0810167ffffffffffffffff811182821017156119855761198561194c565b600067ffffffffffffffff808411156119c9576119c961194c565b604051601f8501601f19908116603f011681019082821181831017156119f1576119f161194c565b81604052809350858152868686011115611a0a57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611a3557600080fd5b610a74838335602085016119ae565b600060808284031215611a5657600080fd5b611a5e611962565b9050813581526020820135602082015260408201356040820152606082013567ffffffffffffffff80821115611a9357600080fd5b9083019060a08286031215611aa757600080fd5b611aaf61198b565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115611ae357600080fd5b611aef87828601611a24565b608083015250606084015250909392505050565b60008060408385031215611b1657600080fd5b82359150602083013567ffffffffffffffff811115611b3457600080fd5b611b4085828601611a44565b9150509250929050565b60008060408385031215611b5d57600080fd5b823567ffffffffffffffff811115611b7457600080fd5b611b8085828601611a24565b925050611b8f60208401611795565b90509250929050565b801515811461081e57600080fd5b60008060408385031215611bb957600080fd5b611bc283611795565b91506020830135611bd281611b98565b809150509250929050565b60008060408385031215611bf057600080fd5b611bf983611795565b9150602083013567ffffffffffffffff811115611b3457600080fd5b60008060008060808587031215611c2b57600080fd5b611c3485611795565b9350611c4260208601611795565b925060408501359150606085013567ffffffffffffffff811115611c6557600080fd5b8501601f81018713611c7657600080fd5b611c85878235602084016119ae565b91505092959194509250565b60008060408385031215611ca457600080fd5b611cad83611795565b9150611b8f60208401611795565b602081526000610a746020830184611882565b600181811c90821680611ce257607f821691505b602082108103611d0257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d9757611d97611d6f565b5060010190565b60008219821115611db157611db1611d6f565b500190565b604081526000611dc9604083018561171c565b905060018060a01b03831660208301529392505050565b600060208284031215611df257600080fd5b8151610a7481611b98565b6001600160a01b03851681526020808201859052604082018490526080606083018190528201819052825460a08301819052600084815282812090929160c0850190845b81811015611e5d57835483526001938401939285019201611e41565b50909998505050505050505050565b600082821015611e7e57611e7e611d6f565b500390565b634e487b7160e01b600052603160045260246000fd5b600081611ea857611ea8611d6f565b506000190190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f359083018461171c565b9695505050505050565b600060208284031215611f5157600080fd5b8151610a74816116e956fea2646970667358221220e021f42ec64cb6d866c0e339b219b44b37f4dae757347395abf14d5d62a513be64736f6c634300080d0033",
  "deployedSourceMap": "1047:15455:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:155:7;;;;;;:::i;:::-;-1:-1:-1;;;;;;937:40:7;-1:-1:-1;;;937:40:7;;829:155;;;;565:14:39;;558:22;540:41;;528:2;513:18;829:155:7;;;;;;;;1243:18:21;;;:::i;:::-;;;;;;;:::i;5419:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1643:32:39;;;1625:51;;1613:2;1598:18;5419:217:21;1479:203:39;4963:395:21;;;;;;:::i;:::-;;:::i;:::-;;6146:300;;;;;;:::i;:::-;;:::i;3053:185::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3574:423::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6511:148::-;;;;;;:::i;:::-;;:::i;10126:79::-;;;;;;:::i;:::-;;:::i;3430:138::-;;;;;;:::i;:::-;;:::i;2690:357::-;;;;;;:::i;:::-;;:::i;:::-;;;8077:25:39;;;8065:2;8050:18;2690:357:21;7931:177:39;674:135:28;;;;;;:::i;:::-;755:16;:47;;-1:-1:-1;;;;;;755:47:28;-1:-1:-1;;;;;755:47:28;;;;;;;;;;674:135;4671:235:21;;;;;;:::i;:::-;;:::i;2322:362::-;;;;;;:::i;:::-;;:::i;814:151:28:-;;;;;;:::i;:::-;;:::i;4390:224:21:-;;;;;;:::i;:::-;;:::i;1287:20::-;;;:::i;5703:153::-;;;;;;:::i;:::-;;:::i;9854:266::-;;;;;;:::i;:::-;;:::i;6725:282::-;;;;;;:::i;:::-;;:::i;348:38:28:-;;;;;-1:-1:-1;;;;;348:38:28;;;1207:29:21;;;;;;;;;;;;;;10460:25:39;;;10516:2;10501:18;;10494:34;;;;10433:18;1207:29:21;10286:248:39;2178:138:21;;;;;;:::i;:::-;-1:-1:-1;;;;;2274:19:21;2248:7;2274:19;;;:12;:19;;;;;:35;;2178:138;5922:162;;;;;;:::i;:::-;-1:-1:-1;;;;;6042:25:21;;;6019:4;6042:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5922:162;3243:181;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1243:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5419:217::-;5495:7;8567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8567:16:21;5514:73;;;;-1:-1:-1;;;5514:73:21;;11657:2:39;5514:73:21;;;11639:21:39;11696:2;11676:18;;;11669:30;11735:34;11715:18;;;11708:62;-1:-1:-1;;;11786:18:39;;;11779:42;11838:19;;5514:73:21;;;;;;;;;-1:-1:-1;5605:24:21;;;;:15;:24;;;;;;-1:-1:-1;;;;;5605:24:21;;5419:217::o;4963:395::-;5044:13;5060:16;5068:7;5060;:16::i;:::-;5044:32;;5100:5;-1:-1:-1;;;;;5094:11:21;:2;-1:-1:-1;;;;;5094:11:21;;5086:57;;;;-1:-1:-1;;;5086:57:21;;12070:2:39;5086:57:21;;;12052:21:39;12109:2;12089:18;;;12082:30;12148:34;12128:18;;;12121:62;-1:-1:-1;;;12199:18:39;;;12192:31;12240:19;;5086:57:21;11868:397:39;5086:57:21;719:10:5;-1:-1:-1;;;;;5175:21:21;;;;:62;;-1:-1:-1;5200:37:21;5217:5;719:10:5;5922:162:21;:::i;5200:37::-;5154:165;;;;-1:-1:-1;;;5154:165:21;;12472:2:39;5154:165:21;;;12454:21:39;12511:2;12491:18;;;12484:30;12550:34;12530:18;;;12523:62;12621:26;12601:18;;;12594:54;12665:19;;5154:165:21;12270:420:39;5154:165:21;5330:21;5339:2;5343:7;5330:8;:21::i;:::-;5034:324;4963:395;;:::o;6146:300::-;6305:41;719:10:5;6338:7:21;6305:18;:41::i;:::-;6297:103;;;;-1:-1:-1;;;6297:103:21;;;;;;;:::i;:::-;6411:28;6421:4;6427:2;6431:7;6411:9;:28::i;3053:185::-;-1:-1:-1;;;;;;;;;;;;;;;;;3184:19:21;;3151:32;3184:19;;;:12;:19;;;;;;;;3151:52;;;;;;;;;;;;;;;;;;;;;3184:19;;3151:52;;3184:19;;3151:52;;3184:19;3151:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3151:52:21;;;;-1:-1:-1;3151:52:21;;3053:185;-1:-1:-1;;;;;3053:185:21:o;3574:423::-;-1:-1:-1;;;;;3721:19:21;;3687:31;3721:19;;;:12;:19;;;;;3810:20;;3650:17;;3687:31;3795:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3759:72;;3846:6;3841:119;3858:20;;3856:22;;3841:119;;;3918:31;3932:13;3946:1;3932:16;;;;;;;;:::i;:::-;;;;;;;;;3918:13;:31::i;:::-;3898:14;3913:1;3898:17;;;;;;;;:::i;:::-;;;;;;:51;;;;3880:3;;;;;:::i;:::-;;;;3841:119;;;-1:-1:-1;3976:14:21;3574:423;-1:-1:-1;;;3574:423:21:o;6511:148::-;6613:39;6630:4;6636:2;6640:7;6613:39;;;;;;;;;;;;:16;:39::i;10126:79::-;10184:14;10190:7;10184:5;:14::i;:::-;10126:79;:::o;3430:138::-;3527:21;;;;:12;:21;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3551:10;;3527:21;;:34;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;3430:138:21:o;2690:357::-;-1:-1:-1;;;;;2812:19:21;;2764:7;2812:19;;;:12;:19;;;;;2764:7;;2889:119;2904:15;;2902:17;;2889:119;;;2960:12;:25;2973:8;2982:1;2973:11;;;;;;;;:::i;:::-;;;;;;;;;2960:25;;;;;;;;;;;:37;;;2940:57;;;;;:::i;:::-;;-1:-1:-1;2921:3:21;;;;:::i;:::-;;;;2889:119;;4671:235;4743:7;4778:16;;;:7;:16;;;;;;-1:-1:-1;;;;;4778:16:21;;4804:73;;;;-1:-1:-1;;;4804:73:21;;13852:2:39;4804:73:21;;;13834:21:39;13891:2;13871:18;;;13864:30;13930:34;13910:18;;;13903:62;-1:-1:-1;;;13981:18:39;;;13974:39;14030:19;;4804:73:21;13650:405:39;4804:73:21;4894:5;4671:235;-1:-1:-1;;4671:235:21:o;2322:362::-;-1:-1:-1;;;;;2445:19:21;;2397:7;2445:19;;;:12;:19;;;;;2397:7;;2523:121;2538:15;;2536:17;;2523:121;;;2595:12;:25;2608:8;2617:1;2608:11;;;;;;;;:::i;:::-;;;;;;;;;2595:25;;;;;;;;;;;:38;;;2574:59;;;;;:::i;:::-;;-1:-1:-1;2555:3:21;;;;:::i;:::-;;;;2523:121;;814:151:28;897:4;919:16;;:39;;-1:-1:-1;;;919:39:28;;-1:-1:-1;;;;;919:16:28;;;;:24;;:39;;944:4;;950:7;;919:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;912:46;814:151;-1:-1:-1;;;814:151:28:o;4390:224:21:-;4462:7;-1:-1:-1;;;;;4489:19:21;;4481:74;;;;-1:-1:-1;;;4481:74:21;;14834:2:39;4481:74:21;;;14816:21:39;14873:2;14853:18;;;14846:30;14912:34;14892:18;;;14885:62;-1:-1:-1;;;14963:18:39;;;14956:40;15013:19;;4481:74:21;14632:406:39;4481:74:21;-1:-1:-1;;;;;;4572:19:21;;;;;:12;:19;;;;;:35;;4390:224::o;1287:20::-;;;;;;;:::i;5703:153::-;5797:52;719:10:5;5830:8:21;5840;5797:18;:52::i;:::-;5703:153;;:::o;9854:266::-;9948:1;9933:11;;:16;;;;;;;:::i;:::-;;;;;;;;9968:22;9974:2;9978:11;;9968:5;:22::i;:::-;10028:10;10000:12;:25;10013:11;;10000:25;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10067:11:21;;-1:-1:-1;;;;;10094:17:21;;;;;;:12;:17;;;;;;;10053:59;;;;-1:-1:-1;10053:59:21;;-1:-1:-1;10063:2:21;;-1:-1:-1;10080:12:21;;10094:17;10053:59;:::i;:::-;;;;;;;;9854:266;;:::o;6725:282::-;6856:41;719:10:5;6889:7:21;6856:18;:41::i;:::-;6848:103;;;;-1:-1:-1;;;6848:103:21;;;;;;;:::i;:::-;6961:39;6975:4;6981:2;6985:7;6994:5;6961:13;:39::i;:::-;6725:282;;;;:::o;3243:181::-;3312:15;;:::i;:::-;3338:27;3368:12;:21;3381:7;3368:21;;;;;;;;;;;3338:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3338:51:21;;;;-1:-1:-1;;;3338:51:21;;-1:-1:-1;3338:51:21;3243:181;-1:-1:-1;;;3243:181:21:o;13885:164::-;13959:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13959:29:21;-1:-1:-1;;;;;13959:29:21;;;;;;;;:24;;14012:16;13959:24;14012:7;:16::i;:::-;-1:-1:-1;;;;;14003:39:21;;;;;;;;;;;13885:164;;:::o;8762:337::-;8855:4;8567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8567:16:21;8871:73;;;;-1:-1:-1;;;8871:73:21;;16199:2:39;8871:73:21;;;16181:21:39;16238:2;16218:18;;;16211:30;16277:34;16257:18;;;16250:62;-1:-1:-1;;;16328:18:39;;;16321:42;16380:19;;8871:73:21;15997:408:39;8871:73:21;8954:13;8970:16;8978:7;8970;:16::i;:::-;8954:32;;9015:5;-1:-1:-1;;;;;9004:16:21;:7;-1:-1:-1;;;;;9004:16:21;;:51;;;;9048:7;-1:-1:-1;;;;;9024:31:21;:20;9036:7;9024:11;:20::i;:::-;-1:-1:-1;;;;;9024:31:21;;9004:51;:87;;;-1:-1:-1;;;;;;6042:25:21;;;6019:4;6042:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;9059:32;8996:96;8762:337;-1:-1:-1;;;;8762:337:21:o;13224:550::-;13371:4;-1:-1:-1;;;;;13351:24:21;:16;13359:7;13351;:16::i;:::-;-1:-1:-1;;;;;13351:24:21;;13343:78;;;;-1:-1:-1;;;13343:78:21;;16612:2:39;13343:78:21;;;16594:21:39;16651:2;16631:18;;;16624:30;16690:34;16670:18;;;16663:62;-1:-1:-1;;;16741:18:39;;;16734:39;16790:19;;13343:78:21;16410:405:39;13343:78:21;-1:-1:-1;;;;;13439:16:21;;13431:65;;;;-1:-1:-1;;;13431:65:21;;17022:2:39;13431:65:21;;;17004:21:39;17061:2;17041:18;;;17034:30;17100:34;17080:18;;;17073:62;-1:-1:-1;;;17151:18:39;;;17144:34;17195:19;;13431:65:21;16820:400:39;13431:65:21;13608:29;13625:1;13629:7;13608:8;:29::i;:::-;-1:-1:-1;;;;;13648:16:21;;;;;;;:12;:16;;;;;;;;:39;;;;;;;;;;;;;;;;;13698:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;13698:21:21;;;;;13735:27;13679:7;;13735:27;;;;;;13224:550;;;:::o;11831:1070::-;11890:13;11906:16;11914:7;11906;:16::i;:::-;11890:32;-1:-1:-1;;;;;;11940:19:21;;11932:57;;;;-1:-1:-1;;;11932:57:21;;17427:2:39;11932:57:21;;;17409:21:39;17466:2;17446:18;;;17439:30;17505:27;17485:18;;;17478:55;17550:18;;11932:57:21;17225:349:39;11932:57:21;12086:29;12103:1;12107:7;12086:8;:29::i;:::-;12130:36;;12158:7;;12154:1;;-1:-1:-1;;;;;12130:36:21;;;;;12154:1;;12130:36;-1:-1:-1;;;;;12349:19:21;;12286:21;12349:19;;;:12;:19;;;;;:35;12286:21;12394:501;12411:14;12409:1;:16;12394:501;;;-1:-1:-1;;;;;12461:19:21;;;;;;:12;:19;;;;;:31;;12490:1;;12461:31;;;;;;:::i;:::-;;;;;;;;;12450:7;:42;12446:273;;-1:-1:-1;;;;;12545:19:21;;;;;;:12;:19;;;;;12574:16;12589:1;12574:14;:16;:::i;:::-;12545:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;12511:19:21;;;;:12;:19;;;;;;;:31;;12540:1;;12511:31;;;;;;:::i;:::-;;;;;;;;;;;;:80;;;;-1:-1:-1;;;;;12609:19:21;;;;:12;:19;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12681:4;12662:23;;12703:5;;12446:273;12735:16;;;;:7;:16;;;;;;;;12728:23;;-1:-1:-1;;;;;;12728:23:21;;;-1:-1:-1;;;;;12767:19:21;;;;:12;:19;;;;;:35;:40;;12763:91;;12823:5;:19;;;:16;:19;;;:::i;:::-;;;;;;12763:91;12864:16;:19;;;:16;:19;;;:::i;:::-;;;;;;12427:3;;;;;:::i;:::-;;;;12394:501;;;;11880:1021;;;11831:1070;:::o;14184:307::-;14334:8;-1:-1:-1;;;;;14325:17:21;:5;-1:-1:-1;;;;;14325:17:21;;14317:55;;;;-1:-1:-1;;;14317:55:21;;18184:2:39;14317:55:21;;;18166:21:39;18223:2;18203:18;;;18196:30;18262:27;18242:18;;;18235:55;18307:18;;14317:55:21;17982:349:39;14317:55:21;-1:-1:-1;;;;;14382:25:21;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;14382:46:21;;;;;;;;;;14443:41;;540::39;;;14443::21;;513:18:39;14443:41:21;;;;;;;14184:307;;;:::o;11055:559::-;-1:-1:-1;;;;;11134:16:21;;11126:61;;;;-1:-1:-1;;;11126:61:21;;18538:2:39;11126:61:21;;;18520:21:39;;;18557:18;;;18550:30;18616:34;18596:18;;;18589:62;18668:18;;11126:61:21;18336:356:39;11126:61:21;8544:4;8567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;8567:16:21;:30;11224:58;;;;-1:-1:-1;;;11224:58:21;;18899:2:39;11224:58:21;;;18881:21:39;18938:2;18918:18;;;18911:30;18977;18957:18;;;18950:58;19025:18;;11224:58:21;18697:352:39;11224:58:21;-1:-1:-1;;;;;11359:16:21;;;;;;:12;:16;;;;;;;;:39;;;;;;;;;;;;;;;;;11408:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11408:21:21;;;;;11447:33;11390:7;;11359:16;;11447:33;;11359:16;;11447:33;-1:-1:-1;;;;;11495:16:21;;;;;;:12;:16;;;;;:32;11531:1;11495:37;11491:88;;11548:5;:19;;;:16;:19;;;:::i;:::-;;;;;;11491:88;11588:16;:19;;;:16;:19;;;:::i;:::-;;;;;;11055:559;;:::o;7869:307::-;8020:28;8030:4;8036:2;8040:7;8020:9;:28::i;:::-;8066:48;8089:4;8095:2;8099:7;8108:5;8066:22;:48::i;:::-;8058:111;;;;-1:-1:-1;;;8058:111:21;;;;;;;:::i;15044:778::-;15194:4;-1:-1:-1;;;;;15214:13:21;;1087:20:4;1133:8;15210:606:21;;15249:72;;-1:-1:-1;;;15249:72:21;;-1:-1:-1;;;;;15249:36:21;;;;;:72;;719:10:5;;15300:4:21;;15306:7;;15315:5;;15249:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15249:72:21;;;;;;;;-1:-1:-1;;15249:72:21;;;;;;;;;;;;:::i;:::-;;;15245:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15488:6;:13;15505:1;15488:18;15484:266;;15530:60;;-1:-1:-1;;;15530:60:21;;;;;;;:::i;15484:266::-;15702:6;15696:13;15687:6;15683:2;15679:15;15672:38;15245:519;-1:-1:-1;;;;;;15371:51:21;-1:-1:-1;;;15371:51:21;;-1:-1:-1;15364:58:21;;15210:606;-1:-1:-1;15801:4:21;15044:778;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:39;-1:-1:-1;;;;;;88:32:39;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:472::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:162;748:6;745:1;742:13;734:162;;;810:4;866:13;;;862:22;;856:29;838:11;;;834:20;;827:59;763:12;734:162;;;914:6;911:1;908:13;905:87;;;980:1;973:4;964:6;959:3;955:16;951:27;944:38;905:87;-1:-1:-1;1046:2:39;1025:15;-1:-1:-1;;1021:29:39;1012:39;;;;1053:4;1008:50;;592:472;-1:-1:-1;;592:472:39:o;1069:220::-;1218:2;1207:9;1200:21;1181:4;1238:45;1279:2;1268:9;1264:18;1256:6;1238:45;:::i;1294:180::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;-1:-1:-1;1445:23:39;;1294:180;-1:-1:-1;1294:180:39:o;1687:173::-;1755:20;;-1:-1:-1;;;;;1804:31:39;;1794:42;;1784:70;;1850:1;1847;1840:12;1784:70;1687:173;;;:::o;1865:254::-;1933:6;1941;1994:2;1982:9;1973:7;1969:23;1965:32;1962:52;;;2010:1;2007;2000:12;1962:52;2033:29;2052:9;2033:29;:::i;:::-;2023:39;2109:2;2094:18;;;;2081:32;;-1:-1:-1;;;1865:254:39:o;2124:328::-;2201:6;2209;2217;2270:2;2258:9;2249:7;2245:23;2241:32;2238:52;;;2286:1;2283;2276:12;2238:52;2309:29;2328:9;2309:29;:::i;:::-;2299:39;;2357:38;2391:2;2380:9;2376:18;2357:38;:::i;:::-;2347:48;;2442:2;2431:9;2427:18;2414:32;2404:42;;2124:328;;;;;:::o;2457:186::-;2516:6;2569:2;2557:9;2548:7;2544:23;2540:32;2537:52;;;2585:1;2582;2575:12;2537:52;2608:29;2627:9;2608:29;:::i;2648:737::-;2831:2;2842:21;;;2933:13;;2962:18;;;2955:30;;;3034:19;;2901:2;2886:18;;3062:22;;;2802:4;;2831:2;3141:21;;;2802:4;;3115:2;3100:18;;;3190:169;3204:6;3201:1;3198:13;3190:169;;;3265:13;;3253:26;;3334:15;;;;3226:1;3219:9;;;;;3299:12;;;;3190:169;;;-1:-1:-1;3376:3:39;2648:737;-1:-1:-1;;;;;;2648:737:39:o;3390:701::-;3477:5;3471:12;3466:3;3459:25;3533:4;3526:5;3522:16;3516:23;3509:4;3504:3;3500:14;3493:47;3589:4;3582:5;3578:16;3572:23;3565:4;3560:3;3556:14;3549:47;3441:3;3642:4;3635:5;3631:16;3625:23;3680:4;3673;3668:3;3664:14;3657:28;3723:12;3717:19;3710:4;3705:3;3701:14;3694:43;3793:4;3779:12;3775:23;3769:30;3762:4;3757:3;3753:14;3746:54;3855:4;3841:12;3837:23;3831:30;3825:3;3820;3816:13;3809:53;3917:4;3903:12;3899:23;3893:30;3887:3;3882;3878:13;3871:53;3979:4;3965:12;3961:23;3955:30;3933:52;;4016:4;4010:3;4005;4001:13;3994:27;4037:48;4080:3;4075;4071:13;4055:14;4037:48;:::i;4096:844::-;4290:4;4319:2;4359;4348:9;4344:18;4389:2;4378:9;4371:21;4412:6;4447;4441:13;4478:6;4470;4463:22;4516:2;4505:9;4501:18;4494:25;;4578:2;4568:6;4565:1;4561:14;4550:9;4546:30;4542:39;4528:53;;4616:2;4608:6;4604:15;4637:1;4647:264;4661:6;4658:1;4655:13;4647:264;;;4754:2;4750:7;4738:9;4730:6;4726:22;4722:36;4717:3;4710:49;4782;4824:6;4815;4809:13;4782:49;:::i;:::-;4772:59;-1:-1:-1;4889:12:39;;;;4854:15;;;;4683:1;4676:9;4647:264;;;-1:-1:-1;4928:6:39;;4096:844;-1:-1:-1;;;;;;;4096:844:39:o;4945:127::-;5006:10;5001:3;4997:20;4994:1;4987:31;5037:4;5034:1;5027:15;5061:4;5058:1;5051:15;5077:253;5149:2;5143:9;5191:4;5179:17;;5226:18;5211:34;;5247:22;;;5208:62;5205:88;;;5273:18;;:::i;:::-;5309:2;5302:22;5077:253;:::o;5335:248::-;5402:2;5396:9;5444:4;5432:17;;5479:18;5464:34;;5500:22;;;5461:62;5458:88;;;5526:18;;:::i;5588:632::-;5653:5;5683:18;5724:2;5716:6;5713:14;5710:40;;;5730:18;;:::i;:::-;5805:2;5799:9;5773:2;5859:15;;-1:-1:-1;;5855:24:39;;;5881:2;5851:33;5847:42;5835:55;;;5905:18;;;5925:22;;;5902:46;5899:72;;;5951:18;;:::i;:::-;5991:10;5987:2;5980:22;6020:6;6011:15;;6050:6;6042;6035:22;6090:3;6081:6;6076:3;6072:16;6069:25;6066:45;;;6107:1;6104;6097:12;6066:45;6157:6;6152:3;6145:4;6137:6;6133:17;6120:44;6212:1;6205:4;6196:6;6188;6184:19;6180:30;6173:41;;;;5588:632;;;;;:::o;6225:222::-;6268:5;6321:3;6314:4;6306:6;6302:17;6298:27;6288:55;;6339:1;6336;6329:12;6288:55;6361:80;6437:3;6428:6;6415:20;6408:4;6400:6;6396:17;6361:80;:::i;6452:1054::-;6507:5;6555:4;6543:9;6538:3;6534:19;6530:30;6527:50;;;6573:1;6570;6563:12;6527:50;6595:22;;:::i;:::-;6586:31;;6653:9;6640:23;6633:5;6626:38;6724:2;6713:9;6709:18;6696:32;6691:2;6684:5;6680:14;6673:56;6789:2;6778:9;6774:18;6761:32;6756:2;6749:5;6745:14;6738:56;6845:2;6834:9;6830:18;6817:32;6868:18;6909:2;6901:6;6898:14;6895:34;;;6925:1;6922;6915:12;6895:34;6948:22;;;;7000:4;6986:12;;;6982:23;6979:43;;;7018:1;7015;7008:12;6979:43;7046:17;;:::i;:::-;7101:2;7088:16;7079:7;7072:33;7160:2;7156;7152:11;7139:25;7134:2;7125:7;7121:16;7114:51;7220:2;7216;7212:11;7199:25;7194:2;7185:7;7181:16;7174:51;7280:2;7276;7272:11;7259:25;7254:2;7245:7;7241:16;7234:51;7331:4;7327:2;7323:13;7310:27;7362:2;7352:8;7349:16;7346:36;;;7378:1;7375;7368:12;7346:36;7418:41;7455:3;7444:8;7440:2;7436:17;7418:41;:::i;:::-;7411:4;7398:18;;7391:69;-1:-1:-1;7487:2:39;7476:14;;7469:31;-1:-1:-1;7480:5:39;;6452:1054;-1:-1:-1;;;6452:1054:39:o;7511:415::-;7605:6;7613;7666:2;7654:9;7645:7;7641:23;7637:32;7634:52;;;7682:1;7679;7672:12;7634:52;7718:9;7705:23;7695:33;;7779:2;7768:9;7764:18;7751:32;7806:18;7798:6;7795:30;7792:50;;;7838:1;7835;7828:12;7792:50;7861:59;7912:7;7903:6;7892:9;7888:22;7861:59;:::i;:::-;7851:69;;;7511:415;;;;;:::o;8113:396::-;8191:6;8199;8252:2;8240:9;8231:7;8227:23;8223:32;8220:52;;;8268:1;8265;8258:12;8220:52;8308:9;8295:23;8341:18;8333:6;8330:30;8327:50;;;8373:1;8370;8363:12;8327:50;8396;8438:7;8429:6;8418:9;8414:22;8396:50;:::i;:::-;8386:60;;;8465:38;8499:2;8488:9;8484:18;8465:38;:::i;:::-;8455:48;;8113:396;;;;;:::o;8514:118::-;8600:5;8593:13;8586:21;8579:5;8576:32;8566:60;;8622:1;8619;8612:12;8637:315;8702:6;8710;8763:2;8751:9;8742:7;8738:23;8734:32;8731:52;;;8779:1;8776;8769:12;8731:52;8802:29;8821:9;8802:29;:::i;:::-;8792:39;;8881:2;8870:9;8866:18;8853:32;8894:28;8916:5;8894:28;:::i;:::-;8941:5;8931:15;;;8637:315;;;;;:::o;8957:421::-;9051:6;9059;9112:2;9100:9;9091:7;9087:23;9083:32;9080:52;;;9128:1;9125;9118:12;9080:52;9151:29;9170:9;9151:29;:::i;:::-;9141:39;;9231:2;9220:9;9216:18;9203:32;9258:18;9250:6;9247:30;9244:50;;;9290:1;9287;9280:12;9383:667;9478:6;9486;9494;9502;9555:3;9543:9;9534:7;9530:23;9526:33;9523:53;;;9572:1;9569;9562:12;9523:53;9595:29;9614:9;9595:29;:::i;:::-;9585:39;;9643:38;9677:2;9666:9;9662:18;9643:38;:::i;:::-;9633:48;;9728:2;9717:9;9713:18;9700:32;9690:42;;9783:2;9772:9;9768:18;9755:32;9810:18;9802:6;9799:30;9796:50;;;9842:1;9839;9832:12;9796:50;9865:22;;9918:4;9910:13;;9906:27;-1:-1:-1;9896:55:39;;9947:1;9944;9937:12;9896:55;9970:74;10036:7;10031:2;10018:16;10013:2;10009;10005:11;9970:74;:::i;:::-;9960:84;;;9383:667;;;;;;;:::o;10539:260::-;10607:6;10615;10668:2;10656:9;10647:7;10643:23;10639:32;10636:52;;;10684:1;10681;10674:12;10636:52;10707:29;10726:9;10707:29;:::i;:::-;10697:39;;10755:38;10789:2;10778:9;10774:18;10755:38;:::i;10804:261::-;10985:2;10974:9;10967:21;10948:4;11005:54;11055:2;11044:9;11040:18;11032:6;11005:54;:::i;11070:380::-;11149:1;11145:12;;;;11192;;;11213:61;;11267:4;11259:6;11255:17;11245:27;;11213:61;11320:2;11312:6;11309:14;11289:18;11286:38;11283:161;;11366:10;11361:3;11357:20;11354:1;11347:31;11401:4;11398:1;11391:15;11429:4;11426:1;11419:15;11283:161;;11070:380;;;:::o;12695:413::-;12897:2;12879:21;;;12936:2;12916:18;;;12909:30;12975:34;12970:2;12955:18;;12948:62;-1:-1:-1;;;13041:2:39;13026:18;;13019:47;13098:3;13083:19;;12695:413::o;13113:127::-;13174:10;13169:3;13165:20;13162:1;13155:31;13205:4;13202:1;13195:15;13229:4;13226:1;13219:15;13245:127;13306:10;13301:3;13297:20;13294:1;13287:31;13337:4;13334:1;13327:15;13361:4;13358:1;13351:15;13377:135;13416:3;13437:17;;;13434:43;;13457:18;;:::i;:::-;-1:-1:-1;13504:1:39;13493:13;;13377:135::o;13517:128::-;13557:3;13588:1;13584:6;13581:1;13578:13;13575:39;;;13594:18;;:::i;:::-;-1:-1:-1;13630:9:39;;13517:128::o;14060:317::-;14237:2;14226:9;14219:21;14200:4;14257:45;14298:2;14287:9;14283:18;14275:6;14257:45;:::i;:::-;14249:53;;14367:1;14363;14358:3;14354:11;14350:19;14342:6;14338:32;14333:2;14322:9;14318:18;14311:60;14060:317;;;;;:::o;14382:245::-;14449:6;14502:2;14490:9;14481:7;14477:23;14473:32;14470:52;;;14518:1;14515;14508:12;14470:52;14550:9;14544:16;14569:28;14591:5;14569:28;:::i;15043:949::-;-1:-1:-1;;;;;15315:32:39;;15297:51;;15367:2;15385:18;;;15378:34;;;15443:2;15428:18;;15421:34;;;15491:3;15486:2;15471:18;;15464:31;;;15553:19;;15546:31;;;15626:13;;15335:3;15518:19;;15648:22;;;15278:4;15714:17;;;15754:16;;;15278:4;;15367:2;15701:3;15686:19;;;15278:4;15798:168;15812:6;15809:1;15806:13;15798:168;;;15873:13;;15861:26;;15954:1;15942:14;;;;15907:12;;;;15827:9;15798:168;;;-1:-1:-1;15983:3:39;;15043:949;-1:-1:-1;;;;;;;;;15043:949:39:o;17579:125::-;17619:4;17647:1;17644;17641:8;17638:34;;;17652:18;;:::i;:::-;-1:-1:-1;17689:9:39;;17579:125::o;17709:127::-;17770:10;17765:3;17761:20;17758:1;17751:31;17801:4;17798:1;17791:15;17825:4;17822:1;17815:15;17841:136;17880:3;17908:5;17898:39;;17917:18;;:::i;:::-;-1:-1:-1;;;17953:18:39;;17841:136::o;19054:414::-;19256:2;19238:21;;;19295:2;19275:18;;;19268:30;19334:34;19329:2;19314:18;;19307:62;-1:-1:-1;;;19400:2:39;19385:18;;19378:48;19458:3;19443:19;;19054:414::o;19473:489::-;-1:-1:-1;;;;;19742:15:39;;;19724:34;;19794:15;;19789:2;19774:18;;19767:43;19841:2;19826:18;;19819:34;;;19889:3;19884:2;19869:18;;19862:31;;;19667:4;;19910:46;;19936:19;;19928:6;19910:46;:::i;:::-;19902:54;19473:489;-1:-1:-1;;;;;;19473:489:39:o;19967:249::-;20036:6;20089:2;20077:9;20068:7;20064:23;20060:32;20057:52;;;20105:1;20102;20095:12;20057:52;20137:9;20131:16;20156:30;20180:5;20156:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "events": {
      "MintToken(address,uint256,uint256,(uint256[]))": {
        "details": "Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "ownerTokenCount(address)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    1047,
    16502
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB1D1D00B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC19D93FB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xC2FB09A8 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF45FD0F3 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB1D1D00B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xBC43CBAF EQ PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x650655C3 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x6C9CD097 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D7660E6 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3D7660E6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x46E5573E EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x48F5ADCE EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x52E5EB79 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x2CC34A62 EQ PUSH2 0x219 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x24C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x204 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x204 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x177C JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x98A JUMP JUMPDEST PUSH2 0x19C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x204 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BDD JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x204 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1D9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x391 SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x41E PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x177C JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55E DUP3 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5E7 JUMPI POP PUSH2 0x5E7 DUP2 CALLER PUSH2 0x3DD JUMP JUMPDEST PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST PUSH2 0x663 DUP4 DUP4 PUSH2 0xD78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x672 CALLER DUP3 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x663 DUP4 DUP4 DUP4 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP1 DUP6 MUL DUP3 ADD DUP5 ADD DUP5 MSTORE SWAP4 DUP2 ADD DUP5 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6F9 JUMPI JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x755 JUMPI PUSH2 0x755 PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x78E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x77B PUSH2 0x15F9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x773 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH2 0x7C2 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7B2 JUMPI PUSH2 0x7B2 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0xC5D JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7D4 JUMPI PUSH2 0x7D4 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x7EA SWAP1 PUSH2 0x1D85 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x794 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x663 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x81E DUP2 PUSH2 0x103C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP2 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE DUP4 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP1 MLOAD PUSH1 0x3 DUP5 ADD SWAP1 DUP2 SSTORE DUP2 DUP6 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE SWAP6 DUP2 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE SWAP1 DUP2 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD DUP8 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 PUSH2 0x88E SWAP4 DUP8 ADD SWAP3 ADD SWAP1 PUSH2 0x1650 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x7 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8D1 JUMPI PUSH2 0x8D1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x905 DUP2 PUSH2 0x1D85 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x7 PUSH1 0x0 DUP5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9C4 JUMPI PUSH2 0x9C4 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP3 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x9F8 DUP2 PUSH2 0x1D85 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6C9CD097 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6C9CD097 SWAP1 PUSH2 0xA33 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA74 SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0xB1A CALLER DUP4 DUP4 PUSH2 0x127B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x1D9E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB44 DUP3 PUSH1 0x5 SLOAD PUSH2 0x1349 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xBC5 SWAP3 SWAP2 SWAP1 PUSH2 0x1650 JUMP JUMPDEST POP POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xB8B1C58D1488F8BFF2B71422D8AAAB70B7FAB5D1DB4A430A7D3232D2BC0ADB83 SWAP6 POP PUSH2 0xC19 SWAP5 POP DUP8 SWAP4 POP NUMBER SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xC2F CALLER DUP4 PUSH2 0xDE6 JUMP JUMPDEST PUSH2 0xC4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0xC57 DUP5 DUP5 DUP5 DUP5 PUSH2 0x14C5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC65 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xCEB SWAP1 PUSH2 0x1CCE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD17 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD64 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD39 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD64 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD47 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP SWAP1 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xDAD DUP3 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP4 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEA5 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE9A DUP5 PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xED5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEF0 DUP3 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x52E JUMP JUMPDEST PUSH2 0xFC5 PUSH1 0x0 DUP3 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP7 SWAP1 SSTORE DUP6 DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP5 SWAP4 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 DUP3 PUSH2 0x90D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520746F6B656E20646F6573206E6F742065787369737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52E JUMP JUMPDEST PUSH2 0x10AA PUSH1 0x0 DUP4 PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1274 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x112F JUMPI PUSH2 0x112F PUSH2 0x1D59 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 SUB PUSH2 0x11FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1163 PUSH1 0x1 DUP5 PUSH2 0x1E6C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x11A9 JUMPI PUSH2 0x11A9 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x11DE JUMPI PUSH2 0x11DE PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE PUSH1 0x1 SWAP3 POP PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x124C JUMPI PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1246 DUP4 PUSH2 0x1E99 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x125C DUP4 PUSH2 0x1E99 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH2 0x126C SWAP1 PUSH2 0x1D85 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10FD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x12DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x139F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SUB PUSH2 0x14AC JUMPI PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x14A6 DUP4 PUSH2 0x1D85 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x14BC DUP4 PUSH2 0x1D85 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x14D0 DUP5 DUP5 DUP5 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x14DC DUP5 DUP5 DUP5 DUP5 PUSH2 0x14F8 JUMP JUMPDEST PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x15EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x153C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1577 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1574 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15D4 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x15A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xED5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x164B PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x165C SWAP1 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x167E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x16C4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1697 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x16C4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x16C4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16C4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16A9 JUMP JUMPDEST POP PUSH2 0x16D0 SWAP3 SWAP2 POP PUSH2 0x16D4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16D0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA74 DUP2 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1742 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1726 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x17AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CD DUP4 PUSH2 0x1795 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17F9 DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 POP PUSH2 0x1807 PUSH1 0x20 DUP6 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA74 DUP3 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x40 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 ADD SWAP1 DUP4 SWAP1 PUSH1 0x60 DUP7 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1877 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1857 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE DUP1 MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP1 POP PUSH1 0xA0 PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0xED5 PUSH2 0x120 DUP6 ADD DUP3 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x193F JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x192D DUP6 DUP4 MLOAD PUSH2 0x1882 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1911 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1985 PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1985 PUSH2 0x194C JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x19C9 JUMPI PUSH2 0x19C9 PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19F1 JUMPI PUSH2 0x19F1 PUSH2 0x194C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1A0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA74 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5E PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0xA0 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AAF PUSH2 0x198B JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEF DUP8 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B40 DUP6 DUP3 DUP7 ADD PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1A24 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1B8F PUSH1 0x20 DUP5 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC2 DUP4 PUSH2 0x1795 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1BD2 DUP2 PUSH2 0x1B98 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BF9 DUP4 PUSH2 0x1795 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C34 DUP6 PUSH2 0x1795 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C42 PUSH1 0x20 DUP7 ADD PUSH2 0x1795 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1C76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C85 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x19AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CAD DUP4 PUSH2 0x1795 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F PUSH1 0x20 DUP5 ADD PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA74 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CE2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D02 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D97 JUMPI PUSH2 0x1D97 PUSH2 0x1D6F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1DB1 JUMPI PUSH2 0x1DB1 PUSH2 0x1D6F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1DC9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA74 DUP2 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 SLOAD PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E5D JUMPI DUP4 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 ADD PUSH2 0x1E41 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7E PUSH2 0x1D6F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1EA8 JUMPI PUSH2 0x1EA8 PUSH2 0x1D6F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F35 SWAP1 DUP4 ADD DUP5 PUSH2 0x171C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA74 DUP2 PUSH2 0x16E9 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x21 DELEGATECALL 0x2E 0xC6 0x4C 0xB6 0xD8 PUSH7 0xC0E339B219B44B CALLDATACOPY DELEGATECALL 0xDA 0xE7 JUMPI CALLVALUE PUSH20 0x95ABF14D5D62A513BE64736F6C634300080D0033 ",
  "pcMap": {
    "0": {
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "6": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "REVERT",
      "path": "21"
    },
    "16": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "17": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "POP",
      "path": "21"
    },
    "18": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "21": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "LT",
      "path": "21"
    },
    "22": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x173"
    },
    "25": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "26": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "29": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "SHR",
      "path": "21"
    },
    "32": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "33": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "GT",
      "path": "21"
    },
    "39": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "43": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "44": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xB1D1D00B"
    },
    "49": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "GT",
      "path": "21"
    },
    "50": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "54": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "55": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xC19D93FB"
    },
    "60": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "GT",
      "path": "21"
    },
    "61": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "65": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "66": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xC19D93FB"
    },
    "71": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "72": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x383"
    },
    "75": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "76": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "77": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xC2FB09A8"
    },
    "82": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "83": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3A6"
    },
    "86": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "87": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "88": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "94": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3CF"
    },
    "97": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "98": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "99": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xF45FD0F3"
    },
    "104": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "105": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x40B"
    },
    "108": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "109": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "112": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "REVERT",
      "path": "21"
    },
    "113": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "114": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "115": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xB1D1D00B"
    },
    "120": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "121": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x34A"
    },
    "124": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "125": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "126": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xB88D4FDE"
    },
    "131": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "132": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x35D"
    },
    "135": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "136": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "137": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xBC43CBAF"
    },
    "142": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "143": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x370"
    },
    "146": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "147": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "150": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "REVERT",
      "path": "21"
    },
    "151": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "152": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "153": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6352211E"
    },
    "158": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "159": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2E3"
    },
    "162": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "163": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "164": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x650655C3"
    },
    "169": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "170": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F6"
    },
    "173": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "174": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "175": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6C9CD097"
    },
    "180": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "181": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x309"
    },
    "184": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "185": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "186": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x70A08231"
    },
    "191": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "192": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x31C"
    },
    "195": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "196": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "197": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x95D89B41"
    },
    "202": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "203": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32F"
    },
    "206": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "207": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "208": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xA22CB465"
    },
    "213": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "214": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x337"
    },
    "217": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "218": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "221": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "REVERT",
      "path": "21"
    },
    "222": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "223": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "224": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x3D7660E6"
    },
    "229": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "GT",
      "path": "21"
    },
    "230": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x130"
    },
    "233": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "234": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "235": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x3D7660E6"
    },
    "240": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "241": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x239"
    },
    "244": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "245": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "246": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x42842E0E"
    },
    "251": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "252": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x259"
    },
    "255": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "256": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "257": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x42966C68"
    },
    "262": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "263": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x26C"
    },
    "266": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "267": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "268": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x46E5573E"
    },
    "273": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "274": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x27F"
    },
    "277": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "278": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "279": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x48F5ADCE"
    },
    "284": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "285": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x292"
    },
    "288": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "289": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "290": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x52E5EB79"
    },
    "295": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "296": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2B3"
    },
    "299": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "300": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "303": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "REVERT",
      "path": "21"
    },
    "304": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "305": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "306": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x1FFC9A7"
    },
    "311": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "312": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x178"
    },
    "315": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "316": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "317": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x6FDDE03"
    },
    "322": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "323": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B1"
    },
    "326": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "327": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "328": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x81812FC"
    },
    "333": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "334": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1C6"
    },
    "337": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "338": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "339": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x95EA7B3"
    },
    "344": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "345": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F1"
    },
    "348": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "349": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "350": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x23B872DD"
    },
    "355": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "356": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x206"
    },
    "359": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "360": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "361": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x2CC34A62"
    },
    "366": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "EQ",
      "path": "21"
    },
    "367": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x219"
    },
    "370": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "371": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "372": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "374": {
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "DUP1",
      "path": "21"
    },
    "375": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1047,
        16502
      ],
      "op": "REVERT",
      "path": "21"
    },
    "376": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "377": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19C"
    },
    "380": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x186"
    },
    "383": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "384": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "386": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16FF"
    },
    "389": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "7"
    },
    "390": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "op": "NOT"
    },
    "400": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "7",
      "statement": 0
    },
    "401": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "7"
    },
    "410": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "411": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "7"
    },
    "412": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "413": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "416": {
      "op": "SWAP1"
    },
    "417": {
      "op": "ISZERO"
    },
    "418": {
      "op": "ISZERO"
    },
    "419": {
      "op": "DUP2"
    },
    "420": {
      "op": "MSTORE"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "423": {
      "op": "ADD"
    },
    "424": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "425": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "427": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "428": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "DUP1",
      "path": "7"
    },
    "429": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "430": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "SUB",
      "path": "7"
    },
    "431": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "432": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "RETURN",
      "path": "7"
    },
    "433": {
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "434": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B9"
    },
    "437": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x42B"
    },
    "440": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMP",
      "path": "21"
    },
    "441": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "442": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "444": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "445": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "448": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "449": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "450": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1769"
    },
    "453": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMP",
      "path": "21"
    },
    "454": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "455": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D9"
    },
    "458": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D4"
    },
    "461": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "462": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "464": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x177C"
    },
    "467": {
      "fn": "DepositNFT.getApproved",
      "jump": "i",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMP",
      "path": "21"
    },
    "468": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "469": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B9"
    },
    "472": {
      "fn": "DepositNFT.getApproved",
      "jump": "i",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMP",
      "path": "21"
    },
    "473": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "474": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "476": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "483": {
      "op": "SHL"
    },
    "484": {
      "op": "SUB"
    },
    "485": {
      "op": "SWAP1"
    },
    "486": {
      "op": "SWAP2"
    },
    "487": {
      "op": "AND"
    },
    "488": {
      "op": "DUP2"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "op": "ADD"
    },
    "493": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "496": {
      "op": "JUMP"
    },
    "497": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "498": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "501": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1FF"
    },
    "504": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "505": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "507": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17B1"
    },
    "510": {
      "fn": "DepositNFT.approve",
      "jump": "i",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMP",
      "path": "21"
    },
    "511": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "512": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x553"
    },
    "515": {
      "fn": "DepositNFT.approve",
      "jump": "i",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMP",
      "path": "21"
    },
    "516": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "517": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "STOP",
      "path": "21"
    },
    "518": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "519": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "522": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x214"
    },
    "525": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "526": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "528": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17DB"
    },
    "531": {
      "fn": "DepositNFT.transferFrom",
      "jump": "i",
      "offset": [
        6146,
        6446
      ],
      "op": "JUMP",
      "path": "21"
    },
    "532": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "533": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x668"
    },
    "536": {
      "fn": "DepositNFT.transferFrom",
      "jump": "i",
      "offset": [
        6146,
        6446
      ],
      "op": "JUMP",
      "path": "21"
    },
    "537": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "538": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x22C"
    },
    "541": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x227"
    },
    "544": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "545": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "547": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1817"
    },
    "550": {
      "fn": "DepositNFT.getOwnerState",
      "jump": "i",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMP",
      "path": "21"
    },
    "551": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "552": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x699"
    },
    "555": {
      "fn": "DepositNFT.getOwnerState",
      "jump": "i",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMP",
      "path": "21"
    },
    "556": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "557": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "559": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "560": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "563": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "564": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "565": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1832"
    },
    "568": {
      "fn": "DepositNFT.getOwnerState",
      "jump": "i",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMP",
      "path": "21"
    },
    "569": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "570": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x24C"
    },
    "573": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x247"
    },
    "576": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "577": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "579": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1817"
    },
    "582": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMP",
      "path": "21"
    },
    "583": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "584": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x71F"
    },
    "587": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMP",
      "path": "21"
    },
    "588": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "589": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "591": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "592": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "595": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "596": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "597": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x18EA"
    },
    "600": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMP",
      "path": "21"
    },
    "601": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "602": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "605": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x267"
    },
    "608": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "609": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "611": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17DB"
    },
    "614": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6511,
        6659
      ],
      "op": "JUMP",
      "path": "21"
    },
    "615": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "616": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7FA"
    },
    "619": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6511,
        6659
      ],
      "op": "JUMP",
      "path": "21"
    },
    "620": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "621": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "624": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x27A"
    },
    "627": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "628": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "630": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x177C"
    },
    "633": {
      "fn": "DepositNFT.burn",
      "jump": "i",
      "offset": [
        10126,
        10205
      ],
      "op": "JUMP",
      "path": "21"
    },
    "634": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "635": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x815"
    },
    "638": {
      "fn": "DepositNFT.burn",
      "jump": "i",
      "offset": [
        10126,
        10205
      ],
      "op": "JUMP",
      "path": "21"
    },
    "639": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "640": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "643": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x28D"
    },
    "646": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "647": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "649": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B03"
    },
    "652": {
      "fn": "DepositNFT.updateTokenState",
      "jump": "i",
      "offset": [
        3430,
        3568
      ],
      "op": "JUMP",
      "path": "21"
    },
    "653": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "654": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x821"
    },
    "657": {
      "fn": "DepositNFT.updateTokenState",
      "jump": "i",
      "offset": [
        3430,
        3568
      ],
      "op": "JUMP",
      "path": "21"
    },
    "658": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "659": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A5"
    },
    "662": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A0"
    },
    "665": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "666": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "668": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1817"
    },
    "671": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "jump": "i",
      "offset": [
        2690,
        3047
      ],
      "op": "JUMP",
      "path": "21"
    },
    "672": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "673": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x897"
    },
    "676": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "jump": "i",
      "offset": [
        2690,
        3047
      ],
      "op": "JUMP",
      "path": "21"
    },
    "677": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "678": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "680": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "681": {
      "op": "SWAP1"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "690": {
      "op": "JUMP"
    },
    "691": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "692": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x204"
    },
    "695": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2C1"
    },
    "698": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "699": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "701": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1817"
    },
    "704": {
      "fn": "AccessControlAdapter.connectAccessController",
      "jump": "i",
      "offset": [
        674,
        809
      ],
      "op": "JUMP",
      "path": "28"
    },
    "705": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "706": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        771
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 1,
      "value": "0x0"
    },
    "708": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "DUP1",
      "path": "28"
    },
    "709": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "op": "NOT"
    },
    "719": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "AND",
      "path": "28"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "729": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "730": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "731": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "AND",
      "path": "28"
    },
    "732": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "733": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "734": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "735": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "OR",
      "path": "28"
    },
    "736": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "737": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        755,
        802
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "738": {
      "fn": "AccessControlAdapter.connectAccessController",
      "offset": [
        674,
        809
      ],
      "op": "JUMP",
      "path": "28"
    },
    "739": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "740": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D9"
    },
    "743": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F1"
    },
    "746": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "747": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "749": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x177C"
    },
    "752": {
      "fn": "DepositNFT.ownerOf",
      "jump": "i",
      "offset": [
        4671,
        4906
      ],
      "op": "JUMP",
      "path": "21"
    },
    "753": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "754": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90D"
    },
    "757": {
      "fn": "DepositNFT.ownerOf",
      "jump": "i",
      "offset": [
        4671,
        4906
      ],
      "op": "JUMP",
      "path": "21"
    },
    "758": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "759": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A5"
    },
    "762": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x304"
    },
    "765": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "766": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "768": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1817"
    },
    "771": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "jump": "i",
      "offset": [
        2322,
        2684
      ],
      "op": "JUMP",
      "path": "21"
    },
    "772": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "773": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x98A"
    },
    "776": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "jump": "i",
      "offset": [
        2322,
        2684
      ],
      "op": "JUMP",
      "path": "21"
    },
    "777": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "778": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x19C"
    },
    "781": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x317"
    },
    "784": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "785": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "787": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B4A"
    },
    "790": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        814,
        965
      ],
      "op": "JUMP",
      "path": "28"
    },
    "791": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "792": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA00"
    },
    "795": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        814,
        965
      ],
      "op": "JUMP",
      "path": "28"
    },
    "796": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "797": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A5"
    },
    "800": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x32A"
    },
    "803": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "804": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "806": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1817"
    },
    "809": {
      "fn": "DepositNFT.balanceOf",
      "jump": "i",
      "offset": [
        4390,
        4614
      ],
      "op": "JUMP",
      "path": "21"
    },
    "810": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "811": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xA7B"
    },
    "814": {
      "fn": "DepositNFT.balanceOf",
      "jump": "i",
      "offset": [
        4390,
        4614
      ],
      "op": "JUMP",
      "path": "21"
    },
    "815": {
      "offset": [
        1287,
        1307
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "816": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1B9"
    },
    "819": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB02"
    },
    "822": {
      "fn": "DepositNFT.balanceOf",
      "jump": "i",
      "offset": [
        1287,
        1307
      ],
      "op": "JUMP",
      "path": "21"
    },
    "823": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "824": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "827": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x345"
    },
    "830": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "831": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "833": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1BA6"
    },
    "836": {
      "fn": "DepositNFT.setApprovalForAll",
      "jump": "i",
      "offset": [
        5703,
        5856
      ],
      "op": "JUMP",
      "path": "21"
    },
    "837": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "838": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB0F"
    },
    "841": {
      "fn": "DepositNFT.setApprovalForAll",
      "jump": "i",
      "offset": [
        5703,
        5856
      ],
      "op": "JUMP",
      "path": "21"
    },
    "842": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "843": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "846": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x358"
    },
    "849": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "850": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "852": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1BDD"
    },
    "855": {
      "fn": "DepositNFT.mint",
      "jump": "i",
      "offset": [
        9854,
        10120
      ],
      "op": "JUMP",
      "path": "21"
    },
    "856": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "857": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB1E"
    },
    "860": {
      "fn": "DepositNFT.mint",
      "jump": "i",
      "offset": [
        9854,
        10120
      ],
      "op": "JUMP",
      "path": "21"
    },
    "861": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "862": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x204"
    },
    "865": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36B"
    },
    "868": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "869": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "871": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1C15"
    },
    "874": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6725,
        7007
      ],
      "op": "JUMP",
      "path": "21"
    },
    "875": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "876": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC25"
    },
    "879": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6725,
        7007
      ],
      "op": "JUMP",
      "path": "21"
    },
    "880": {
      "offset": [
        348,
        386
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "881": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        348,
        386
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "883": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        348,
        386
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "884": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        348,
        386
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D9"
    },
    "887": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        348,
        386
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "894": {
      "op": "SHL"
    },
    "895": {
      "op": "SUB"
    },
    "896": {
      "offset": [
        348,
        386
      ],
      "op": "AND",
      "path": "28"
    },
    "897": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        348,
        386
      ],
      "op": "DUP2",
      "path": "28"
    },
    "898": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        348,
        386
      ],
      "op": "JUMP",
      "path": "28"
    },
    "899": {
      "offset": [
        1207,
        1236
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "900": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "902": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "903": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "905": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "906": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x391"
    },
    "909": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "910": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "911": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "DUP3",
      "path": "21"
    },
    "912": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "JUMP",
      "path": "21"
    },
    "913": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "914": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "916": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "DUP1",
      "path": "21"
    },
    "917": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        1207,
        1236
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "918": {
      "op": "SWAP3"
    },
    "919": {
      "op": "DUP4"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "923": {
      "op": "DUP4"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "SWAP2"
    },
    "926": {
      "op": "SWAP1"
    },
    "927": {
      "op": "SWAP2"
    },
    "928": {
      "op": "MSTORE"
    },
    "929": {
      "op": "ADD"
    },
    "930": {
      "offset": [
        1207,
        1236
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "933": {
      "op": "JUMP"
    },
    "934": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "935": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2A5"
    },
    "938": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3B4"
    },
    "941": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "942": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "944": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1817"
    },
    "947": {
      "fn": "DepositNFT.ownerTokenCount",
      "jump": "i",
      "offset": [
        2178,
        2316
      ],
      "op": "JUMP",
      "path": "21"
    },
    "948": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "AND",
      "path": "21",
      "statement": 2
    },
    "958": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "960": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "961": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "DUP2",
      "path": "21"
    },
    "962": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "963": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2286
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "965": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "967": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "968": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "970": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "971": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2293
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "972": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2309
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "973": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2274,
        2309
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "974": {
      "fn": "DepositNFT.ownerTokenCount",
      "offset": [
        2178,
        2316
      ],
      "op": "JUMP",
      "path": "21"
    },
    "975": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "976": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x19C"
    },
    "979": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3DD"
    },
    "982": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "983": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "985": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1C91"
    },
    "988": {
      "fn": "DepositNFT.isApprovedForAll",
      "jump": "i",
      "offset": [
        5922,
        6084
      ],
      "op": "JUMP",
      "path": "21"
    },
    "989": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "op": "SUB"
    },
    "998": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "SWAP2",
      "path": "21",
      "statement": 3
    },
    "999": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1000": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "AND",
      "path": "21"
    },
    "1001": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6019,
        6023
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1003": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1004": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1005": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1006": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6060
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "1008": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1010": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1011": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1012": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1013": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1015": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1016": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1017": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1018": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "1019": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1020": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "1021": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "AND",
      "path": "21"
    },
    "1022": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1023": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1024": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1025": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1026": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1027": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1028": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1029": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1030": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "1032": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "AND",
      "path": "21"
    },
    "1033": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1034": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1035": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1036": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x41E"
    },
    "1039": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x419"
    },
    "1042": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "1043": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1045": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x177C"
    },
    "1048": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1049": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1050": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC5D"
    },
    "1053": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1054": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1055": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1057": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1058": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A8"
    },
    "1061": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1062": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1063": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CBB"
    },
    "1066": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1067": {
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1068": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "1070": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1071": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1072": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x438"
    },
    "1075": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1076": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CCE"
    },
    "1079": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1080": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1081": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1082": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "1084": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1085": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1087": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1088": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1089": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DIV",
      "path": "21"
    },
    "1090": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MUL",
      "path": "21"
    },
    "1091": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1093": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1094": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1096": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1097": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1098": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1099": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1100": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1102": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1103": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1104": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "1105": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1106": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1107": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1108": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1109": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1110": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1112": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1113": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1114": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1115": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1116": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x464"
    },
    "1119": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1120": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CCE"
    },
    "1123": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1124": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1125": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1126": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1127": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B1"
    },
    "1130": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1131": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1132": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "1134": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "LT",
      "path": "21"
    },
    "1135": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x486"
    },
    "1138": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1139": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x100"
    },
    "1142": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1143": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1144": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1145": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DIV",
      "path": "21"
    },
    "1146": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MUL",
      "path": "21"
    },
    "1147": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1148": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1149": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1150": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1152": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1153": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1154": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B1"
    },
    "1157": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1158": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1159": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1160": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1161": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1162": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1163": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1165": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1166": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1168": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1170": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1171": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1172": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1173": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1174": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1175": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1176": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1177": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1178": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "1180": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1181": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1182": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1184": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1185": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1186": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1187": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "GT",
      "path": "21"
    },
    "1188": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x494"
    },
    "1191": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1192": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1193": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1194": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SUB",
      "path": "21"
    },
    "1195": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "1197": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "AND",
      "path": "21"
    },
    "1198": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1199": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "ADD",
      "path": "21"
    },
    "1200": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1201": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1202": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "POP",
      "path": "21"
    },
    "1203": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "POP",
      "path": "21"
    },
    "1204": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "POP",
      "path": "21"
    },
    "1205": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "POP",
      "path": "21"
    },
    "1206": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "POP",
      "path": "21"
    },
    "1207": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        1243,
        1261
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1208": {
      "fn": "DepositNFT.getTokenState",
      "jump": "o",
      "offset": [
        1243,
        1261
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1209": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1210": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5495,
        5502
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1212": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 4
    },
    "1213": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1214": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1215": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8574
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "1217": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1219": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1220": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1222": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1223": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1224": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1231": {
      "op": "SHL"
    },
    "1232": {
      "op": "SUB"
    },
    "1233": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "AND",
      "path": "21"
    },
    "1234": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 5,
      "value": "0x537"
    },
    "1237": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1238": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1240": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1249": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1252": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1254": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1255": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "ADD",
      "path": "21"
    },
    "1256": {
      "op": "MSTORE"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1261": {
      "op": "DUP3"
    },
    "1262": {
      "op": "ADD"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1320": {
      "op": "DUP3"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "op": "MSTORE"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1325": {
      "op": "ADD"
    },
    "1326": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1327": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1329": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1330": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1331": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1332": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "SUB",
      "path": "21"
    },
    "1333": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1334": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "21"
    },
    "1335": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5514,
        5587
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1336": {
      "op": "POP"
    },
    "1337": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 6,
      "value": "0x0"
    },
    "1339": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1340": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1341": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1342": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5620
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x9"
    },
    "1344": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1346": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1347": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1349": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1350": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1351": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "op": "SUB"
    },
    "1360": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "AND",
      "path": "21"
    },
    "1361": {
      "fn": "DepositNFT.getApproved",
      "offset": [
        5605,
        5629
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1362": {
      "fn": "DepositNFT.getApproved",
      "jump": "o",
      "offset": [
        5419,
        5636
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1363": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1364": {
      "fn": "DepositNFT.approve",
      "offset": [
        5044,
        5057
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1366": {
      "fn": "DepositNFT.approve",
      "offset": [
        5060,
        5076
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x55E"
    },
    "1369": {
      "fn": "DepositNFT.approve",
      "offset": [
        5068,
        5075
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1370": {
      "fn": "DepositNFT.approve",
      "offset": [
        5060,
        5067
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90D"
    },
    "1373": {
      "fn": "DepositNFT.approve",
      "jump": "i",
      "offset": [
        5060,
        5076
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1374": {
      "fn": "DepositNFT.approve",
      "offset": [
        5060,
        5076
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1375": {
      "fn": "DepositNFT.approve",
      "offset": [
        5044,
        5076
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1376": {
      "fn": "DepositNFT.approve",
      "offset": [
        5044,
        5076
      ],
      "op": "POP",
      "path": "21"
    },
    "1377": {
      "fn": "DepositNFT.approve",
      "offset": [
        5100,
        5105
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 7
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "fn": "DepositNFT.approve",
      "offset": [
        5094,
        5105
      ],
      "op": "AND",
      "path": "21"
    },
    "1387": {
      "fn": "DepositNFT.approve",
      "offset": [
        5094,
        5096
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "fn": "DepositNFT.approve",
      "offset": [
        5094,
        5105
      ],
      "op": "AND",
      "path": "21"
    },
    "1397": {
      "branch": 72,
      "fn": "DepositNFT.approve",
      "offset": [
        5094,
        5105
      ],
      "op": "SUB",
      "path": "21"
    },
    "1398": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5CB"
    },
    "1401": {
      "branch": 72,
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1402": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1404": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1413": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1416": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1418": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1419": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "ADD",
      "path": "21"
    },
    "1420": {
      "op": "MSTORE"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1425": {
      "op": "DUP3"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "MSTORE"
    },
    "1428": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1463": {
      "op": "DUP3"
    },
    "1464": {
      "op": "ADD"
    },
    "1465": {
      "op": "MSTORE"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1470": {
      "op": "SHL"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1473": {
      "op": "DUP3"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1478": {
      "op": "ADD"
    },
    "1479": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "1482": {
      "op": "JUMP"
    },
    "1483": {
      "fn": "DepositNFT.approve",
      "offset": [
        5086,
        5143
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1484": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 8
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "op": "SUB"
    },
    "1493": {
      "fn": "DepositNFT.approve",
      "offset": [
        5175,
        5196
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 9
    },
    "1494": {
      "fn": "DepositNFT.approve",
      "offset": [
        5175,
        5196
      ],
      "op": "AND",
      "path": "21"
    },
    "1495": {
      "fn": "DepositNFT.approve",
      "offset": [
        5175,
        5196
      ],
      "op": "EQ",
      "path": "21"
    },
    "1496": {
      "branch": 73,
      "fn": "DepositNFT.approve",
      "offset": [
        5175,
        5196
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1497": {
      "fn": "DepositNFT.approve",
      "offset": [
        5175,
        5237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5E7"
    },
    "1500": {
      "branch": 73,
      "fn": "DepositNFT.approve",
      "offset": [
        5175,
        5237
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "DepositNFT.approve",
      "offset": [
        5200,
        5237
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x5E7"
    },
    "1505": {
      "fn": "DepositNFT.approve",
      "offset": [
        5217,
        5222
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1506": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1507": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        5922,
        6084
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3DD"
    },
    "1510": {
      "fn": "DepositNFT.isApprovedForAll",
      "jump": "i",
      "offset": [
        5922,
        6084
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1511": {
      "branch": 74,
      "fn": "DepositNFT.approve",
      "offset": [
        5200,
        5237
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1512": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x659"
    },
    "1515": {
      "branch": 74,
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1516": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1518": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1527": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1530": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1532": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1533": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "ADD",
      "path": "21"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1539": {
      "op": "DUP3"
    },
    "1540": {
      "op": "ADD"
    },
    "1541": {
      "op": "MSTORE"
    },
    "1542": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1577": {
      "op": "DUP3"
    },
    "1578": {
      "op": "ADD"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1615": {
      "op": "DUP3"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "1624": {
      "op": "JUMP"
    },
    "1625": {
      "fn": "DepositNFT.approve",
      "offset": [
        5154,
        5319
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1626": {
      "fn": "DepositNFT.approve",
      "offset": [
        5330,
        5351
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 10,
      "value": "0x663"
    },
    "1629": {
      "fn": "DepositNFT.approve",
      "offset": [
        5339,
        5341
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1630": {
      "fn": "DepositNFT.approve",
      "offset": [
        5343,
        5350
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1631": {
      "fn": "DepositNFT.approve",
      "offset": [
        5330,
        5338
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD78"
    },
    "1634": {
      "fn": "DepositNFT.approve",
      "jump": "i",
      "offset": [
        5330,
        5351
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1635": {
      "fn": "DepositNFT.approve",
      "offset": [
        5330,
        5351
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1636": {
      "fn": "DepositNFT.approve",
      "offset": [
        5034,
        5358
      ],
      "op": "POP",
      "path": "21"
    },
    "1637": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "POP",
      "path": "21"
    },
    "1638": {
      "fn": "DepositNFT.approve",
      "offset": [
        4963,
        5358
      ],
      "op": "POP",
      "path": "21"
    },
    "1639": {
      "fn": "DepositNFT.approve",
      "jump": "o",
      "offset": [
        4963,
        5358
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1640": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6146,
        6446
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1641": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6305,
        6346
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 11,
      "value": "0x672"
    },
    "1644": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1645": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6338,
        6345
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1646": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6305,
        6323
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDE6"
    },
    "1649": {
      "fn": "DepositNFT.transferFrom",
      "jump": "i",
      "offset": [
        6305,
        6346
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1650": {
      "branch": 75,
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6305,
        6346
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1651": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x68E"
    },
    "1654": {
      "branch": 75,
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1655": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1657": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1664": {
      "op": "SHL"
    },
    "1665": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1666": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1667": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "1669": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "ADD",
      "path": "21"
    },
    "1670": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "1673": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1674": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D08"
    },
    "1677": {
      "fn": "DepositNFT.transferFrom",
      "jump": "i",
      "offset": [
        6297,
        6400
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1678": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6297,
        6400
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1679": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6411,
        6439
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 12,
      "value": "0x663"
    },
    "1682": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6421,
        6425
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1683": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6427,
        6429
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1684": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6431,
        6438
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1685": {
      "fn": "DepositNFT.transferFrom",
      "offset": [
        6411,
        6420
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEDD"
    },
    "1688": {
      "fn": "DepositNFT.transferFrom",
      "jump": "i",
      "offset": [
        6411,
        6439
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1689": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1692": {
      "op": "DUP1"
    },
    "1693": {
      "op": "MLOAD"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1696": {
      "op": "DUP2"
    },
    "1697": {
      "op": "ADD"
    },
    "1698": {
      "op": "SWAP1"
    },
    "1699": {
      "op": "SWAP2"
    },
    "1700": {
      "op": "MSTORE"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1703": {
      "op": "DUP2"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1714": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "AND",
      "path": "21"
    },
    "1715": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3183
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1717": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1718": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1719": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1720": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3196
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "1722": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1724": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1725": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1726": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1727": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1729": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1730": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1731": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1732": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1733": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1734": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1735": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1736": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1737": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP6",
      "path": "21"
    },
    "1738": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MUL",
      "path": "21"
    },
    "1739": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1740": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1741": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP5",
      "path": "21"
    },
    "1742": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1743": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP5",
      "path": "21"
    },
    "1744": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1745": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "1746": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1747": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1748": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP5",
      "path": "21"
    },
    "1749": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1750": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1751": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1752": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "1753": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1754": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "1755": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP5",
      "path": "21"
    },
    "1756": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "1757": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP5",
      "path": "21"
    },
    "1758": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1759": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP5",
      "path": "21"
    },
    "1760": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1761": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3184,
        3203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1762": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1763": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1764": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1765": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x70D"
    },
    "1768": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1769": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1771": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MUL",
      "path": "21"
    },
    "1772": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1773": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1774": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1775": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1776": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1778": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1779": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1781": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1783": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1784": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1785": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1786": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1787": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1788": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1789": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1790": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1792": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1793": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1794": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "1796": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "ADD",
      "path": "21"
    },
    "1797": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1798": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1799": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1800": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "GT",
      "path": "21"
    },
    "1801": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6F9"
    },
    "1804": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1805": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1810": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1811": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "1812": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1815": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3151,
        3203
      ],
      "op": "SWAP6",
      "path": "21"
    },
    "1816": {
      "fn": "DepositNFT.getOwnerState",
      "offset": [
        3053,
        3238
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "fn": "DepositNFT.getOwnerState",
      "jump": "o",
      "offset": [
        3053,
        3238
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1823": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "SUB"
    },
    "1832": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1833": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "AND",
      "path": "21"
    },
    "1834": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3687,
        3718
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1836": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1837": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1838": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1839": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3733
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "1841": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1843": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1844": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1846": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1847": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3721,
        3740
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1848": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3810,
        3830
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1849": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3810,
        3830
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1850": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3650,
        3667
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "1852": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3650,
        3667
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "1853": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3687,
        3718
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1854": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH8",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1863": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1864": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "GT",
      "path": "21"
    },
    "1865": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1866": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x755"
    },
    "1869": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1870": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x755"
    },
    "1873": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x194C"
    },
    "1876": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1877": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1878": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1880": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1881": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1882": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1883": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1884": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1885": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1886": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1888": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "MUL",
      "path": "21"
    },
    "1889": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1891": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "ADD",
      "path": "21"
    },
    "1892": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1893": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "ADD",
      "path": "21"
    },
    "1894": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1896": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1897": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP1",
      "path": "21"
    },
    "1898": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1899": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x78E"
    },
    "1902": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1903": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1904": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1906": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "ADD",
      "path": "21"
    },
    "1907": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1908": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x77B"
    },
    "1911": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15F9"
    },
    "1914": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1915": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1916": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1917": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1918": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1920": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "ADD",
      "path": "21"
    },
    "1921": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1922": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "1924": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1925": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "SUB",
      "path": "21"
    },
    "1926": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1927": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1928": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x773"
    },
    "1931": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1932": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1933": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "POP",
      "path": "21"
    },
    "1934": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1935": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3795,
        3831
      ],
      "op": "POP",
      "path": "21"
    },
    "1936": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3759,
        3831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1937": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3759,
        3831
      ],
      "op": "POP",
      "path": "21"
    },
    "1938": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3846,
        3852
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1940": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1941": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3858,
        3878
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1942": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3858,
        3878
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1943": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3856,
        3878
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1944": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3856,
        3878
      ],
      "op": "LT",
      "path": "21"
    },
    "1945": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "1946": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7F2"
    },
    "1949": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1950": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3918,
        3949
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 13,
      "value": "0x7C2"
    },
    "1953": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3945
      ],
      "op": "DUP4",
      "path": "21"
    },
    "1954": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3946,
        3947
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1955": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1956": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1957": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1958": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "LT",
      "path": "21"
    },
    "1959": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7B2"
    },
    "1962": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1963": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7B2"
    },
    "1966": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "1969": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3932,
        3948
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1970": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1971": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1972": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1974": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1975": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1977": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1979": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1980": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "ADD",
      "path": "21"
    },
    "1981": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3932,
        3948
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1982": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3918,
        3931
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC5D"
    },
    "1985": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3918,
        3949
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1986": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3918,
        3949
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1987": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3912
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1988": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3913,
        3914
      ],
      "op": "DUP3",
      "path": "21"
    },
    "1989": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1990": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "1991": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1992": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "LT",
      "path": "21"
    },
    "1993": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7D4"
    },
    "1996": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "1997": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7D4"
    },
    "2000": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "2003": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3898,
        3915
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2004": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2005": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2007": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "MUL",
      "path": "21"
    },
    "2008": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2010": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "ADD",
      "path": "21"
    },
    "2011": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3915
      ],
      "op": "ADD",
      "path": "21"
    },
    "2012": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3949
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2013": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3949
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2014": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3949
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2015": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3898,
        3949
      ],
      "op": "POP",
      "path": "21"
    },
    "2016": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 14
    },
    "2017": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2018": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7EA"
    },
    "2021": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2022": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D85"
    },
    "2025": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "i",
      "offset": [
        3880,
        3883
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2026": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2027": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2028": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "POP",
      "path": "21"
    },
    "2029": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3880,
        3883
      ],
      "op": "POP",
      "path": "21"
    },
    "2030": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x794"
    },
    "2033": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2034": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3841,
        3960
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3976,
        3990
      ],
      "op": "SWAP4",
      "path": "21",
      "statement": 15
    },
    "2037": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "offset": [
        3574,
        3997
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2038": {
      "op": "POP"
    },
    "2039": {
      "op": "POP"
    },
    "2040": {
      "op": "POP"
    },
    "2041": {
      "fn": "DepositNFT.getAllOwnerTokenStates",
      "jump": "o",
      "offset": [
        3574,
        3997
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2042": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6511,
        6659
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2043": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 16,
      "value": "0x663"
    },
    "2046": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6630,
        6634
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2047": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6636,
        6638
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2048": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6640,
        6647
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2049": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2051": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2052": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2053": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2055": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "ADD",
      "path": "21"
    },
    "2056": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2058": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2059": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2060": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2062": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2063": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2064": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6652
      ],
      "op": "POP",
      "path": "21"
    },
    "2065": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6613,
        6629
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC25"
    },
    "2068": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6613,
        6652
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2069": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2070": {
      "fn": "DepositNFT.burn",
      "offset": [
        10184,
        10198
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 17,
      "value": "0x81E"
    },
    "2073": {
      "fn": "DepositNFT.burn",
      "offset": [
        10190,
        10197
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2074": {
      "fn": "DepositNFT.burn",
      "offset": [
        10184,
        10189
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x103C"
    },
    "2077": {
      "fn": "DepositNFT.burn",
      "jump": "i",
      "offset": [
        10184,
        10198
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2078": {
      "fn": "DepositNFT.burn",
      "offset": [
        10184,
        10198
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2079": {
      "fn": "DepositNFT.burn",
      "offset": [
        10126,
        10205
      ],
      "op": "POP",
      "path": "21"
    },
    "2080": {
      "fn": "DepositNFT.burn",
      "jump": "o",
      "offset": [
        10126,
        10205
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2081": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3430,
        3568
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2082": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 18,
      "value": "0x0"
    },
    "2084": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2085": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2086": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2087": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3539
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "2089": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2091": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2092": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2093": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2094": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2096": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2097": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2098": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2099": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2100": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP5",
      "path": "21"
    },
    "2101": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2102": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2103": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2104": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2105": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP6",
      "path": "21"
    },
    "2106": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2107": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2108": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "2110": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2111": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2112": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2113": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2114": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP6",
      "path": "21"
    },
    "2115": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2116": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2117": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2119": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2120": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2121": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2122": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "2124": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2125": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP7",
      "path": "21"
    },
    "2126": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2127": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2128": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2129": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2130": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "2132": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP5",
      "path": "21"
    },
    "2133": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2134": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2135": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2136": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2137": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2138": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP6",
      "path": "21"
    },
    "2139": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2140": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2141": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2143": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP6",
      "path": "21"
    },
    "2144": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2145": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2146": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP6",
      "path": "21"
    },
    "2147": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2148": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2149": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2150": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x5"
    },
    "2152": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP5",
      "path": "21"
    },
    "2153": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2154": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2155": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2156": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2157": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2158": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2159": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "2161": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2162": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2163": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2164": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2166": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2167": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2168": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2169": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2170": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2171": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3551,
        3561
      ],
      "op": "DUP8",
      "path": "21"
    },
    "2172": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3551,
        3561
      ],
      "op": "SWAP7",
      "path": "21"
    },
    "2173": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "2174": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3548
      ],
      "op": "SWAP6",
      "path": "21"
    },
    "2175": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2176": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "2177": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x88E"
    },
    "2180": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "2181": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "DUP8",
      "path": "21"
    },
    "2182": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2183": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2184": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "ADD",
      "path": "21"
    },
    "2185": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2186": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1650"
    },
    "2189": {
      "fn": "DepositNFT.updateTokenState",
      "jump": "i",
      "offset": [
        3527,
        3561
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2190": {
      "fn": "DepositNFT.updateTokenState",
      "offset": [
        3527,
        3561
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "op": "POP"
    },
    "2194": {
      "op": "POP"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "op": "POP"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "fn": "DepositNFT.updateTokenState",
      "jump": "o",
      "offset": [
        3430,
        3568
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2199": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2690,
        3047
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2209": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "AND",
      "path": "21"
    },
    "2210": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2764,
        2771
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2212": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2213": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2214": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2215": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2824
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "2217": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2219": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2220": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2222": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2223": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2812,
        2831
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2224": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2764,
        2771
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2225": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2764,
        2771
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2226": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2889,
        3008
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2227": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2904,
        2919
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2228": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2904,
        2919
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2229": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2902,
        2919
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2230": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2902,
        2919
      ],
      "op": "LT",
      "path": "21"
    },
    "2231": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2889,
        3008
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2232": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2889,
        3008
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7F2"
    },
    "2235": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2889,
        3008
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2236": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2972
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 19,
      "value": "0x7"
    },
    "2238": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2240": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2981
      ],
      "op": "DUP5",
      "path": "21"
    },
    "2241": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2982,
        2983
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2242": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2243": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2244": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2245": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "LT",
      "path": "21"
    },
    "2246": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8D1"
    },
    "2249": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2250": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8D1"
    },
    "2253": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "2256": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "jump": "i",
      "offset": [
        2973,
        2984
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2257": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2258": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2259": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2261": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2262": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2264": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2266": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2267": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "ADD",
      "path": "21"
    },
    "2268": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2973,
        2984
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2269": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2270": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2271": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2273": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "ADD",
      "path": "21"
    },
    "2274": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2275": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2276": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2277": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2279": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "ADD",
      "path": "21"
    },
    "2280": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2282": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2985
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2283": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2997
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "2285": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2997
      ],
      "op": "ADD",
      "path": "21"
    },
    "2286": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2960,
        2997
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2287": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2288": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8F9"
    },
    "2291": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2292": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2293": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D9E"
    },
    "2296": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "jump": "i",
      "offset": [
        2940,
        2997
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2297": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2298": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2940,
        2997
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 20
    },
    "2301": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x905"
    },
    "2304": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2305": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D85"
    },
    "2308": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "jump": "i",
      "offset": [
        2921,
        2924
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2309": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2310": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2311": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "POP",
      "path": "21"
    },
    "2312": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2921,
        2924
      ],
      "op": "POP",
      "path": "21"
    },
    "2313": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2889,
        3008
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x8B2"
    },
    "2316": {
      "fn": "DepositNFT.getOwnerMarketValue",
      "offset": [
        2889,
        3008
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2317": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2318": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4743,
        4750
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2320": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2321": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2322": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2323": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4785
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "2325": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2327": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2328": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2330": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2331": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2332": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "AND",
      "path": "21"
    },
    "2342": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4778,
        4794
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2343": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 21,
      "value": "0x984"
    },
    "2346": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2347": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2349": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2350": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2358": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2361": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2363": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2364": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "ADD",
      "path": "21"
    },
    "2365": {
      "op": "MSTORE"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2370": {
      "op": "DUP3"
    },
    "2371": {
      "op": "ADD"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2408": {
      "op": "DUP3"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2426": {
      "op": "DUP3"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "MSTORE"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2431": {
      "op": "ADD"
    },
    "2432": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "2435": {
      "op": "JUMP"
    },
    "2436": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4804,
        4877
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2437": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4894,
        4899
      ],
      "op": "SWAP3",
      "path": "21",
      "statement": 22
    },
    "2438": {
      "fn": "DepositNFT.ownerOf",
      "offset": [
        4671,
        4906
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "fn": "DepositNFT.ownerOf",
      "jump": "o",
      "offset": [
        4671,
        4906
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2442": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2322,
        2684
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "op": "SUB"
    },
    "2451": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2452": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "AND",
      "path": "21"
    },
    "2453": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2397,
        2404
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2455": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2456": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2457": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2458": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2457
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "2460": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2462": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2463": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2465": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2466": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2445,
        2464
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2467": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2397,
        2404
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2468": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2397,
        2404
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2469": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2523,
        2644
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2470": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2538,
        2553
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2471": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2538,
        2553
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2472": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2536,
        2553
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2473": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2536,
        2553
      ],
      "op": "LT",
      "path": "21"
    },
    "2474": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2523,
        2644
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "2475": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2523,
        2644
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x7F2"
    },
    "2478": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2523,
        2644
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2479": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2607
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 23,
      "value": "0x7"
    },
    "2481": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2483": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2616
      ],
      "op": "DUP5",
      "path": "21"
    },
    "2484": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2617,
        2618
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2485": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2486": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2487": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2488": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "LT",
      "path": "21"
    },
    "2489": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9C4"
    },
    "2492": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2493": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9C4"
    },
    "2496": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "2499": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "jump": "i",
      "offset": [
        2608,
        2619
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2500": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2501": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2502": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2504": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2505": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2507": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2509": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2510": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "ADD",
      "path": "21"
    },
    "2511": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2608,
        2619
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2512": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2513": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2514": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2516": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "ADD",
      "path": "21"
    },
    "2517": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2518": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2519": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2520": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2522": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "ADD",
      "path": "21"
    },
    "2523": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2525": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2620
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2526": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2633
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2528": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2633
      ],
      "op": "ADD",
      "path": "21"
    },
    "2529": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2595,
        2633
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2530": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2531": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9EC"
    },
    "2534": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2535": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2536": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D9E"
    },
    "2539": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "jump": "i",
      "offset": [
        2574,
        2633
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2540": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2541": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2574,
        2633
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 24
    },
    "2544": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9F8"
    },
    "2547": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2548": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D85"
    },
    "2551": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "jump": "i",
      "offset": [
        2555,
        2558
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2552": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2553": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2554": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "POP",
      "path": "21"
    },
    "2555": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2555,
        2558
      ],
      "op": "POP",
      "path": "21"
    },
    "2556": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2523,
        2644
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x9A5"
    },
    "2559": {
      "fn": "DepositNFT.getOwnerDepositValue",
      "offset": [
        2523,
        2644
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2560": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2561": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        897,
        901
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2563": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 25
    },
    "2564": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2565": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2567": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2568": {
      "op": "PUSH4",
      "value": "0x6C9CD097"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2577": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "op": "SUB"
    },
    "2586": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2587": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2588": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "AND",
      "path": "28"
    },
    "2589": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        935
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2590": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        943
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x6C9CD097"
    },
    "2595": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        943
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2596": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA33"
    },
    "2599": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2600": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        944,
        948
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2601": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        944,
        948
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2602": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        950,
        957
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2603": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        950,
        957
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2604": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2606": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "28"
    },
    "2607": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DB6"
    },
    "2610": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        919,
        958
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2611": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2612": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2614": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2616": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2617": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2618": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2619": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SUB",
      "path": "28"
    },
    "2620": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2621": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP7",
      "path": "28"
    },
    "2622": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "GAS",
      "path": "28"
    },
    "2623": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "2624": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2625": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2626": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2627": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA50"
    },
    "2630": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2631": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2632": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2634": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2635": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "2636": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2637": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2639": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2640": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2641": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "28"
    },
    "2642": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "28"
    },
    "2643": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "28"
    },
    "2644": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "28"
    },
    "2645": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2647": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2648": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "2649": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2651": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "NOT",
      "path": "28"
    },
    "2652": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2654": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2655": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "28"
    },
    "2656": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "AND",
      "path": "28"
    },
    "2657": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2658": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "28"
    },
    "2659": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2660": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2662": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2663": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "POP",
      "path": "28"
    },
    "2664": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2665": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "ADD",
      "path": "28"
    },
    "2666": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2667": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA74"
    },
    "2670": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2671": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2672": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DE0"
    },
    "2675": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "i",
      "offset": [
        919,
        958
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2676": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        919,
        958
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2677": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        912,
        958
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2678": {
      "fn": "AccessControlAdapter.hasRole",
      "offset": [
        814,
        965
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "fn": "AccessControlAdapter.hasRole",
      "jump": "o",
      "offset": [
        814,
        965
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2683": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4390,
        4614
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2684": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4462,
        4469
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4489,
        4508
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 26
    },
    "2695": {
      "branch": 76,
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4489,
        4508
      ],
      "op": "AND",
      "path": "21"
    },
    "2696": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xAE6"
    },
    "2699": {
      "branch": 76,
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "2700": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2702": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2709": {
      "op": "SHL"
    },
    "2710": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2711": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2714": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2716": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2717": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "ADD",
      "path": "21"
    },
    "2718": {
      "op": "MSTORE"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2723": {
      "op": "DUP3"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "op": "MSTORE"
    },
    "2726": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2761": {
      "op": "DUP3"
    },
    "2762": {
      "op": "ADD"
    },
    "2763": {
      "op": "MSTORE"
    },
    "2764": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2780": {
      "op": "DUP3"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2785": {
      "op": "ADD"
    },
    "2786": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "2789": {
      "op": "JUMP"
    },
    "2790": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4481,
        4555
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2798": {
      "op": "SHL"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "AND",
      "path": "21",
      "statement": 27
    },
    "2801": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2803": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2804": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2805": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2806": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4584
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "2808": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2810": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2811": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2813": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2814": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4591
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2815": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4607
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2816": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        4572,
        4607
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2817": {
      "fn": "DepositNFT.balanceOf",
      "jump": "o",
      "offset": [
        4390,
        4614
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2818": {
      "offset": [
        1287,
        1307
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2819": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2821": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2822": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2823": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x438"
    },
    "2826": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2827": {
      "fn": "DepositNFT.balanceOf",
      "offset": [
        1287,
        1307
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CCE"
    },
    "2830": {
      "fn": "DepositNFT.balanceOf",
      "jump": "i",
      "offset": [
        1287,
        1307
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2831": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2832": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5797,
        5849
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 28,
      "value": "0xB1A"
    },
    "2835": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2836": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5830,
        5838
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2837": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5840,
        5848
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2838": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5797,
        5815
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x127B"
    },
    "2841": {
      "fn": "DepositNFT.setApprovalForAll",
      "jump": "i",
      "offset": [
        5797,
        5849
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2842": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5797,
        5849
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2843": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "POP",
      "path": "21"
    },
    "2844": {
      "fn": "DepositNFT.setApprovalForAll",
      "offset": [
        5703,
        5856
      ],
      "op": "POP",
      "path": "21"
    },
    "2845": {
      "fn": "DepositNFT.setApprovalForAll",
      "jump": "o",
      "offset": [
        5703,
        5856
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2846": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2847": {
      "fn": "DepositNFT.mint",
      "offset": [
        9948,
        9949
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 29,
      "value": "0x1"
    },
    "2849": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9944
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x5"
    },
    "2851": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9944
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2853": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2854": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2855": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2856": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xB31"
    },
    "2859": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "2860": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2861": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D9E"
    },
    "2864": {
      "fn": "DepositNFT.mint",
      "jump": "i",
      "offset": [
        9933,
        9949
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2865": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2866": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2867": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "POP",
      "path": "21"
    },
    "2868": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "POP",
      "path": "21"
    },
    "2869": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2870": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2871": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2872": {
      "fn": "DepositNFT.mint",
      "offset": [
        9933,
        9949
      ],
      "op": "POP",
      "path": "21"
    },
    "2873": {
      "fn": "DepositNFT.mint",
      "offset": [
        9968,
        9990
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 30,
      "value": "0xB44"
    },
    "2876": {
      "fn": "DepositNFT.mint",
      "offset": [
        9974,
        9976
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2877": {
      "fn": "DepositNFT.mint",
      "offset": [
        9978,
        9989
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x5"
    },
    "2879": {
      "fn": "DepositNFT.mint",
      "offset": [
        9978,
        9989
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2880": {
      "fn": "DepositNFT.mint",
      "offset": [
        9968,
        9973
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1349"
    },
    "2883": {
      "fn": "DepositNFT.mint",
      "jump": "i",
      "offset": [
        9968,
        9990
      ],
      "op": "JUMP",
      "path": "21"
    },
    "2884": {
      "fn": "DepositNFT.mint",
      "offset": [
        9968,
        9990
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "2885": {
      "fn": "DepositNFT.mint",
      "offset": [
        10028,
        10038
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 31
    },
    "2886": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10012
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "2888": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2890": {
      "fn": "DepositNFT.mint",
      "offset": [
        10013,
        10024
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x5"
    },
    "2892": {
      "fn": "DepositNFT.mint",
      "offset": [
        10013,
        10024
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "2893": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2894": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2895": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2897": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "ADD",
      "path": "21"
    },
    "2898": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2899": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2900": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "2901": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2903": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "ADD",
      "path": "21"
    },
    "2904": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2906": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10025
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "2907": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2909": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2910": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2911": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2912": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2913": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2915": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2916": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2917": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2919": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2920": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2921": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2922": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2923": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "2925": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2926": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2927": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2929": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2930": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2931": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2932": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2933": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2935": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2936": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2937": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "2939": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2940": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2941": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2942": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2943": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "2945": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2946": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2948": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2949": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2950": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2951": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2952": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "2954": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2955": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2956": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "2958": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2959": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2960": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2961": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2962": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "2964": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2965": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2966": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "2968": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2969": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2970": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2971": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2972": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "2974": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2975": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2976": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "2978": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2979": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2980": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2981": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2982": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "2984": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2985": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "2986": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2988": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP3",
      "path": "21"
    },
    "2989": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2990": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2991": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2992": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "2994": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "2995": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2996": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "DUP1",
      "path": "21"
    },
    "2997": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2998": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "2999": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3001": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "ADD",
      "path": "21"
    },
    "3002": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3003": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xBC5"
    },
    "3006": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "3007": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3008": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3009": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1650"
    },
    "3012": {
      "fn": "DepositNFT.mint",
      "jump": "i",
      "offset": [
        10000,
        10038
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3013": {
      "fn": "DepositNFT.mint",
      "offset": [
        10000,
        10038
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3014": {
      "op": "POP"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "fn": "DepositNFT.mint",
      "offset": [
        10067,
        10078
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 32,
      "value": "0x5"
    },
    "3018": {
      "fn": "DepositNFT.mint",
      "offset": [
        10067,
        10078
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3025": {
      "op": "SHL"
    },
    "3026": {
      "op": "SUB"
    },
    "3027": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "DUP7",
      "path": "21"
    },
    "3028": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "AND",
      "path": "21"
    },
    "3029": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3031": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3032": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3033": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3034": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10106
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "3036": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3038": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3039": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3041": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3042": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3043": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3044": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3045": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3046": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3047": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xB8B1C58D1488F8BFF2B71422D8AAAB70B7FAB5D1DB4A430A7D3232D2BC0ADB83"
    },
    "3080": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "SWAP6",
      "path": "21"
    },
    "3081": {
      "op": "POP"
    },
    "3082": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC19"
    },
    "3085": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "3086": {
      "op": "POP"
    },
    "3087": {
      "fn": "DepositNFT.mint",
      "offset": [
        10063,
        10065
      ],
      "op": "DUP8",
      "path": "21"
    },
    "3088": {
      "fn": "DepositNFT.mint",
      "offset": [
        10063,
        10065
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "3089": {
      "op": "POP"
    },
    "3090": {
      "fn": "DepositNFT.mint",
      "offset": [
        10080,
        10092
      ],
      "op": "NUMBER",
      "path": "21"
    },
    "3091": {
      "fn": "DepositNFT.mint",
      "offset": [
        10080,
        10092
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3092": {
      "fn": "DepositNFT.mint",
      "offset": [
        10094,
        10111
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3093": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1DFD"
    },
    "3096": {
      "fn": "DepositNFT.mint",
      "jump": "i",
      "offset": [
        10053,
        10112
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3097": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3098": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3100": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3101": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3102": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3103": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "SUB",
      "path": "21"
    },
    "3104": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3105": {
      "fn": "DepositNFT.mint",
      "offset": [
        10053,
        10112
      ],
      "op": "LOG1",
      "path": "21"
    },
    "3106": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "POP",
      "path": "21"
    },
    "3107": {
      "fn": "DepositNFT.mint",
      "offset": [
        9854,
        10120
      ],
      "op": "POP",
      "path": "21"
    },
    "3108": {
      "fn": "DepositNFT.mint",
      "jump": "o",
      "offset": [
        9854,
        10120
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3109": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3110": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6856,
        6897
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 33,
      "value": "0xC2F"
    },
    "3113": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3114": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6889,
        6896
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3115": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6856,
        6874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xDE6"
    },
    "3118": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6856,
        6897
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3119": {
      "branch": 77,
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6856,
        6897
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3120": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC4B"
    },
    "3123": {
      "branch": 77,
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3124": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3126": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3135": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3136": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3138": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "ADD",
      "path": "21"
    },
    "3139": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "3142": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3143": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D08"
    },
    "3146": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6848,
        6951
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3147": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6848,
        6951
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3148": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6961,
        7000
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 34,
      "value": "0xC57"
    },
    "3151": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6975,
        6979
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3152": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6981,
        6983
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3153": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6985,
        6992
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3154": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6994,
        6999
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3155": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6961,
        6974
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14C5"
    },
    "3158": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "i",
      "offset": [
        6961,
        7000
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3159": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6961,
        7000
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3160": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "POP",
      "path": "21"
    },
    "3161": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "POP",
      "path": "21"
    },
    "3162": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "POP",
      "path": "21"
    },
    "3163": {
      "fn": "DepositNFT.safeTransferFrom",
      "offset": [
        6725,
        7007
      ],
      "op": "POP",
      "path": "21"
    },
    "3164": {
      "fn": "DepositNFT.safeTransferFrom",
      "jump": "o",
      "offset": [
        6725,
        7007
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3165": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3166": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3312,
        3327
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC65"
    },
    "3169": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3312,
        3327
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15F9"
    },
    "3172": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        3312,
        3327
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3173": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3312,
        3327
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3174": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3365
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3176": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3380
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x7"
    },
    "3178": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3180": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3381,
        3388
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3181": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3182": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3183": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3185": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3186": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3187": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3188": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3189": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3191": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3192": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3194": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3368,
        3389
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3195": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3197": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3198": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3199": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "3201": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3202": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3204": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3205": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3206": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3207": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3209": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3210": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3211": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3212": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3213": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3214": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3216": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3217": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "3219": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3220": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3221": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3222": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3223": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3224": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3226": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3227": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "3229": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3230": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3231": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3232": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3233": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3234": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3236": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3237": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "3239": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3240": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3241": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3243": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3244": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3245": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA0"
    },
    "3247": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3248": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3250": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3251": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3252": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3253": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3255": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3256": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3257": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3258": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3259": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3260": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3262": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3263": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "3265": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3266": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3267": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3268": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3269": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3270": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3272": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3273": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "3275": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3276": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3277": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3278": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3279": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3280": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3282": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3283": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "3285": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3286": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3287": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3288": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3289": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3290": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3292": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3293": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3295": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3296": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3297": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3298": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3299": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xCEB"
    },
    "3302": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3303": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CCE"
    },
    "3306": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3307": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3308": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3309": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "3311": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3312": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3314": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3315": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3316": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DIV",
      "path": "21"
    },
    "3317": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MUL",
      "path": "21"
    },
    "3318": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3320": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3321": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3323": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3324": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3325": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3326": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3327": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3329": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3330": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3331": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "3332": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3333": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3334": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3335": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3336": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3337": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3339": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3340": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3341": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3342": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3343": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD17"
    },
    "3346": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3347": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1CCE"
    },
    "3350": {
      "fn": "DepositNFT.getTokenState",
      "jump": "i",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3351": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3352": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3353": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "3354": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD64"
    },
    "3357": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3358": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3359": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "3361": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "LT",
      "path": "21"
    },
    "3362": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD39"
    },
    "3365": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3366": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x100"
    },
    "3369": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3370": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3371": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3372": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DIV",
      "path": "21"
    },
    "3373": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MUL",
      "path": "21"
    },
    "3374": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3375": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3376": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3377": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3379": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3380": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3381": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD64"
    },
    "3384": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3385": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3386": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3387": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3388": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3389": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3390": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3392": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3393": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3395": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3397": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3398": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3399": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3400": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3401": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3402": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3403": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3404": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3405": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "3407": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3408": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3409": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3411": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3412": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3413": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3414": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "GT",
      "path": "21"
    },
    "3415": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD47"
    },
    "3418": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3419": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3420": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3421": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SUB",
      "path": "21"
    },
    "3422": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "3424": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "AND",
      "path": "21"
    },
    "3425": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3426": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "ADD",
      "path": "21"
    },
    "3427": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3428": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3429": {
      "op": "POP"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3433": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3434": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "3435": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3440": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3441": {
      "op": "POP"
    },
    "3442": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3338,
        3389
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "3443": {
      "fn": "DepositNFT.getTokenState",
      "offset": [
        3243,
        3424
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "3444": {
      "op": "POP"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "fn": "DepositNFT.getTokenState",
      "jump": "o",
      "offset": [
        3243,
        3424
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3448": {
      "fn": "DepositNFT._approve",
      "offset": [
        13885,
        14049
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3449": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 35,
      "value": "0x0"
    },
    "3451": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3452": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3453": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3454": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13974
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x9"
    },
    "3456": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3458": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3459": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3461": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3462": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3463": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3464": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3471": {
      "op": "SHL"
    },
    "3472": {
      "op": "SUB"
    },
    "3473": {
      "op": "NOT"
    },
    "3474": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "AND",
      "path": "21"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3481": {
      "op": "SHL"
    },
    "3482": {
      "op": "SUB"
    },
    "3483": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3484": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "AND",
      "path": "21"
    },
    "3485": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3486": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3487": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "OR",
      "path": "21"
    },
    "3488": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3489": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3490": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13988
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "3491": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3492": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3493": {
      "fn": "DepositNFT._approve",
      "offset": [
        14012,
        14028
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 36,
      "value": "0xDAD"
    },
    "3496": {
      "fn": "DepositNFT._approve",
      "offset": [
        13959,
        13983
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3497": {
      "fn": "DepositNFT._approve",
      "offset": [
        14012,
        14019
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90D"
    },
    "3500": {
      "fn": "DepositNFT._approve",
      "jump": "i",
      "offset": [
        14012,
        14028
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3501": {
      "fn": "DepositNFT._approve",
      "offset": [
        14012,
        14028
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "op": "SUB"
    },
    "3510": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "AND",
      "path": "21"
    },
    "3511": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3544": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3546": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3547": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3549": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3550": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3551": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "3552": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "SUB",
      "path": "21"
    },
    "3553": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3554": {
      "fn": "DepositNFT._approve",
      "offset": [
        14003,
        14042
      ],
      "op": "LOG4",
      "path": "21"
    },
    "3555": {
      "fn": "DepositNFT._approve",
      "offset": [
        13885,
        14049
      ],
      "op": "POP",
      "path": "21"
    },
    "3556": {
      "fn": "DepositNFT._approve",
      "offset": [
        13885,
        14049
      ],
      "op": "POP",
      "path": "21"
    },
    "3557": {
      "fn": "DepositNFT._approve",
      "jump": "o",
      "offset": [
        13885,
        14049
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3558": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8762,
        9099
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3559": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8855,
        8859
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3561": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3562": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3563": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3564": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8574
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "3566": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3568": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3569": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3571": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3572": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3573": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3580": {
      "op": "SHL"
    },
    "3581": {
      "op": "SUB"
    },
    "3582": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "AND",
      "path": "21"
    },
    "3583": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 37,
      "value": "0xE5F"
    },
    "3586": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3587": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3589": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3598": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3601": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3603": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3604": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "ADD",
      "path": "21"
    },
    "3605": {
      "op": "MSTORE"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3648": {
      "op": "DUP3"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "MSTORE"
    },
    "3651": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3669": {
      "op": "DUP3"
    },
    "3670": {
      "op": "ADD"
    },
    "3671": {
      "op": "MSTORE"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "3678": {
      "op": "JUMP"
    },
    "3679": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8871,
        8944
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3680": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8954,
        8967
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3682": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8970,
        8986
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xE6A"
    },
    "3685": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8978,
        8985
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3686": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8970,
        8977
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90D"
    },
    "3689": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8970,
        8986
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3690": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8970,
        8986
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3691": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8954,
        8986
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3692": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8954,
        8986
      ],
      "op": "POP",
      "path": "21"
    },
    "3693": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9015,
        9020
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 38
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9020
      ],
      "op": "AND",
      "path": "21"
    },
    "3703": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9011
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "op": "SUB"
    },
    "3712": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9020
      ],
      "op": "AND",
      "path": "21"
    },
    "3713": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9020
      ],
      "op": "EQ",
      "path": "21"
    },
    "3714": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9055
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3715": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEA5"
    },
    "3718": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9055
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3719": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9055
      ],
      "op": "POP",
      "path": "21"
    },
    "3720": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9048,
        9055
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "op": "SUB"
    },
    "3729": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9024,
        9055
      ],
      "op": "AND",
      "path": "21"
    },
    "3730": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9024,
        9044
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xE9A"
    },
    "3733": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9036,
        9043
      ],
      "op": "DUP5",
      "path": "21"
    },
    "3734": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9024,
        9035
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4B9"
    },
    "3737": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        9024,
        9044
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3738": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9024,
        9044
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3745": {
      "op": "SHL"
    },
    "3746": {
      "op": "SUB"
    },
    "3747": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9024,
        9055
      ],
      "op": "AND",
      "path": "21"
    },
    "3748": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9024,
        9055
      ],
      "op": "EQ",
      "path": "21"
    },
    "3749": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3750": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9091
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3751": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9091
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xED5"
    },
    "3754": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9004,
        9091
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3765": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3766": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "AND",
      "path": "21"
    },
    "3767": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6019,
        6023
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "3769": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3770": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3771": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3772": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6060
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "3774": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "3776": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3777": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3778": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3779": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3781": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP1",
      "path": "21"
    },
    "3782": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3783": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6067
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3784": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "3785": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "DUP9",
      "path": "21"
    },
    "3786": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "AND",
      "path": "21"
    },
    "3787": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "DUP4",
      "path": "21"
    },
    "3788": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3789": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "3790": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "3791": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3792": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "3793": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "3794": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "3796": {
      "fn": "DepositNFT.isApprovedForAll",
      "offset": [
        6042,
        6077
      ],
      "op": "AND",
      "path": "21"
    },
    "3797": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        9059,
        9091
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3798": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8996,
        9092
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "3799": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "offset": [
        8762,
        9099
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "fn": "DepositNFT._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8762,
        9099
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3805": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13224,
        13774
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3806": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13371,
        13375
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 39
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3813": {
      "op": "SHL"
    },
    "3814": {
      "op": "SUB"
    },
    "3815": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13351,
        13375
      ],
      "op": "AND",
      "path": "21"
    },
    "3816": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13351,
        13367
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEF0"
    },
    "3819": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13359,
        13366
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3820": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13351,
        13358
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90D"
    },
    "3823": {
      "fn": "DepositNFT._transfer",
      "jump": "i",
      "offset": [
        13351,
        13367
      ],
      "op": "JUMP",
      "path": "21"
    },
    "3824": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13351,
        13367
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3831": {
      "op": "SHL"
    },
    "3832": {
      "op": "SUB"
    },
    "3833": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13351,
        13375
      ],
      "op": "AND",
      "path": "21"
    },
    "3834": {
      "branch": 78,
      "fn": "DepositNFT._transfer",
      "offset": [
        13351,
        13375
      ],
      "op": "EQ",
      "path": "21"
    },
    "3835": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xF58"
    },
    "3838": {
      "branch": 78,
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3839": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3841": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3842": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3848": {
      "op": "SHL"
    },
    "3849": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3850": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3853": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3855": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3856": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "ADD",
      "path": "21"
    },
    "3857": {
      "op": "MSTORE"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3862": {
      "op": "DUP3"
    },
    "3863": {
      "op": "ADD"
    },
    "3864": {
      "op": "MSTORE"
    },
    "3865": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3900": {
      "op": "DUP3"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3915": {
      "op": "SHL"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3918": {
      "op": "DUP3"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "op": "MSTORE"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3923": {
      "op": "ADD"
    },
    "3924": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "3927": {
      "op": "JUMP"
    },
    "3928": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13343,
        13421
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3935": {
      "op": "SHL"
    },
    "3936": {
      "op": "SUB"
    },
    "3937": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13439,
        13455
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 40
    },
    "3938": {
      "branch": 79,
      "fn": "DepositNFT._transfer",
      "offset": [
        13439,
        13455
      ],
      "op": "AND",
      "path": "21"
    },
    "3939": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xFBA"
    },
    "3942": {
      "branch": 79,
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "3943": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "3945": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "3946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3952": {
      "op": "SHL"
    },
    "3953": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "DUP2",
      "path": "21"
    },
    "3954": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3957": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "3959": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "DUP3",
      "path": "21"
    },
    "3960": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "ADD",
      "path": "21"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3964": {
      "op": "DUP1"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4003": {
      "op": "DUP3"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "MSTORE"
    },
    "4006": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4013": {
      "op": "SHL"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "4025": {
      "op": "JUMP"
    },
    "4026": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13431,
        13496
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4027": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13608,
        13637
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 41,
      "value": "0xFC5"
    },
    "4030": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13625,
        13626
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4032": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13629,
        13636
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4033": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13608,
        13616
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD78"
    },
    "4036": {
      "fn": "DepositNFT._transfer",
      "jump": "i",
      "offset": [
        13608,
        13637
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4037": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13608,
        13637
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4044": {
      "op": "SHL"
    },
    "4045": {
      "op": "SUB"
    },
    "4046": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 42
    },
    "4047": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4048": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "AND",
      "path": "21"
    },
    "4049": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4051": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4052": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4053": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4054": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13660
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4056": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4058": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4059": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4060": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4061": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4063": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4064": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4065": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13664
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4066": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4067": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4068": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "4070": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4071": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "ADD",
      "path": "21"
    },
    "4072": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4073": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4074": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4075": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4076": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4077": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4078": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4079": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4080": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "ADD",
      "path": "21"
    },
    "4081": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4082": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4083": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13648,
        13687
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4084": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "DUP6",
      "path": "21",
      "statement": 43
    },
    "4085": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4086": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4087": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13705
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "4089": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4090": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4091": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4092": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4093": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4094": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13714
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4095": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4096": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4103": {
      "op": "SHL"
    },
    "4104": {
      "op": "SUB"
    },
    "4105": {
      "op": "NOT"
    },
    "4106": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "AND",
      "path": "21"
    },
    "4107": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4108": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "OR",
      "path": "21"
    },
    "4109": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4110": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13698,
        13719
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4111": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "MLOAD",
      "path": "21",
      "statement": 44
    },
    "4112": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13679,
        13686
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4113": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13679,
        13686
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "4114": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4115": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "AND",
      "path": "21"
    },
    "4116": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4117": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4150": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4151": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13735,
        13762
      ],
      "op": "LOG4",
      "path": "21"
    },
    "4152": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13224,
        13774
      ],
      "op": "POP",
      "path": "21"
    },
    "4153": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13224,
        13774
      ],
      "op": "POP",
      "path": "21"
    },
    "4154": {
      "fn": "DepositNFT._transfer",
      "offset": [
        13224,
        13774
      ],
      "op": "POP",
      "path": "21"
    },
    "4155": {
      "fn": "DepositNFT._transfer",
      "jump": "o",
      "offset": [
        13224,
        13774
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4156": {
      "fn": "DepositNFT._burn",
      "offset": [
        11831,
        12901
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4157": {
      "fn": "DepositNFT._burn",
      "offset": [
        11890,
        11903
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4159": {
      "fn": "DepositNFT._burn",
      "offset": [
        11906,
        11922
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1047"
    },
    "4162": {
      "fn": "DepositNFT._burn",
      "offset": [
        11914,
        11921
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4163": {
      "fn": "DepositNFT._burn",
      "offset": [
        11906,
        11913
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x90D"
    },
    "4166": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        11906,
        11922
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4167": {
      "fn": "DepositNFT._burn",
      "offset": [
        11906,
        11922
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4168": {
      "fn": "DepositNFT._burn",
      "offset": [
        11890,
        11922
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4169": {
      "op": "POP"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4176": {
      "op": "SHL"
    },
    "4177": {
      "op": "SUB"
    },
    "4178": {
      "fn": "DepositNFT._burn",
      "offset": [
        11940,
        11959
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 45
    },
    "4179": {
      "branch": 80,
      "fn": "DepositNFT._burn",
      "offset": [
        11940,
        11959
      ],
      "op": "AND",
      "path": "21"
    },
    "4180": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x109F"
    },
    "4183": {
      "branch": 80,
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4184": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4186": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4193": {
      "op": "SHL"
    },
    "4194": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4195": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4198": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4200": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4201": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "ADD",
      "path": "21"
    },
    "4202": {
      "op": "MSTORE"
    },
    "4203": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4207": {
      "op": "DUP3"
    },
    "4208": {
      "op": "ADD"
    },
    "4209": {
      "op": "MSTORE"
    },
    "4210": {
      "op": "PUSH32",
      "value": "0x54686520746F6B656E20646F6573206E6F742065787369737400000000000000"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4245": {
      "op": "DUP3"
    },
    "4246": {
      "op": "ADD"
    },
    "4247": {
      "op": "MSTORE"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "4254": {
      "op": "JUMP"
    },
    "4255": {
      "fn": "DepositNFT._burn",
      "offset": [
        11932,
        11989
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4256": {
      "fn": "DepositNFT._burn",
      "offset": [
        12086,
        12115
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 46,
      "value": "0x10AA"
    },
    "4259": {
      "fn": "DepositNFT._burn",
      "offset": [
        12103,
        12104
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4261": {
      "fn": "DepositNFT._burn",
      "offset": [
        12107,
        12114
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4262": {
      "fn": "DepositNFT._burn",
      "offset": [
        12086,
        12094
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xD78"
    },
    "4265": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12086,
        12115
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4266": {
      "fn": "DepositNFT._burn",
      "offset": [
        12086,
        12115
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4267": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 47,
      "value": "0x40"
    },
    "4269": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4270": {
      "fn": "DepositNFT._burn",
      "offset": [
        12158,
        12165
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4271": {
      "fn": "DepositNFT._burn",
      "offset": [
        12158,
        12165
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4272": {
      "fn": "DepositNFT._burn",
      "offset": [
        12154,
        12155
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4274": {
      "fn": "DepositNFT._burn",
      "offset": [
        12154,
        12155
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "op": "SUB"
    },
    "4283": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4284": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "AND",
      "path": "21"
    },
    "4285": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4286": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4319": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4320": {
      "fn": "DepositNFT._burn",
      "offset": [
        12154,
        12155
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4321": {
      "fn": "DepositNFT._burn",
      "offset": [
        12154,
        12155
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4322": {
      "fn": "DepositNFT._burn",
      "offset": [
        12130,
        12166
      ],
      "op": "LOG4",
      "path": "21"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "SUB"
    },
    "4331": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4332": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "AND",
      "path": "21"
    },
    "4333": {
      "fn": "DepositNFT._burn",
      "offset": [
        12286,
        12307
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4335": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4336": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4337": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4338": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12361
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4340": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4342": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4343": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4345": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4346": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12368
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4347": {
      "fn": "DepositNFT._burn",
      "offset": [
        12349,
        12384
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4348": {
      "fn": "DepositNFT._burn",
      "offset": [
        12286,
        12307
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4349": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4350": {
      "fn": "DepositNFT._burn",
      "offset": [
        12411,
        12425
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4351": {
      "fn": "DepositNFT._burn",
      "offset": [
        12409,
        12410
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4352": {
      "fn": "DepositNFT._burn",
      "offset": [
        12409,
        12425
      ],
      "op": "LT",
      "path": "21"
    },
    "4353": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4354": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1274"
    },
    "4357": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4364": {
      "op": "SHL"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4367": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "AND",
      "path": "21"
    },
    "4368": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4370": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4371": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4372": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4373": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12473
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4375": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4377": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4378": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4380": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4381": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12480
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4382": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4383": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4384": {
      "fn": "DepositNFT._burn",
      "offset": [
        12490,
        12491
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4385": {
      "fn": "DepositNFT._burn",
      "offset": [
        12490,
        12491
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4386": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4387": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "LT",
      "path": "21"
    },
    "4388": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x112F"
    },
    "4391": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4392": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x112F"
    },
    "4395": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "4398": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12461,
        12492
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4399": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4400": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4401": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4403": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4404": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4406": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4408": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4409": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "ADD",
      "path": "21"
    },
    "4410": {
      "fn": "DepositNFT._burn",
      "offset": [
        12461,
        12492
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4411": {
      "fn": "DepositNFT._burn",
      "offset": [
        12450,
        12457
      ],
      "op": "DUP6",
      "path": "21"
    },
    "4412": {
      "branch": 81,
      "fn": "DepositNFT._burn",
      "offset": [
        12450,
        12492
      ],
      "op": "SUB",
      "path": "21"
    },
    "4413": {
      "fn": "DepositNFT._burn",
      "offset": [
        12446,
        12719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11FD"
    },
    "4416": {
      "branch": 81,
      "fn": "DepositNFT._burn",
      "offset": [
        12446,
        12719
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4423": {
      "op": "SHL"
    },
    "4424": {
      "op": "SUB"
    },
    "4425": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "DUP5",
      "path": "21",
      "statement": 48
    },
    "4426": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "AND",
      "path": "21"
    },
    "4427": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4429": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4430": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4431": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4432": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12557
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4434": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4436": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4437": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4439": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4440": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12564
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4441": {
      "fn": "DepositNFT._burn",
      "offset": [
        12574,
        12590
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1163"
    },
    "4444": {
      "fn": "DepositNFT._burn",
      "offset": [
        12589,
        12590
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "4446": {
      "fn": "DepositNFT._burn",
      "offset": [
        12574,
        12588
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4447": {
      "fn": "DepositNFT._burn",
      "offset": [
        12574,
        12590
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E6C"
    },
    "4450": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12574,
        12590
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4451": {
      "fn": "DepositNFT._burn",
      "offset": [
        12574,
        12590
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4452": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4453": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4454": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4455": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "LT",
      "path": "21"
    },
    "4456": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1173"
    },
    "4459": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4460": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1173"
    },
    "4463": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "4466": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12545,
        12591
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4467": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4468": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4470": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4471": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4472": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4473": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4475": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4476": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4477": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4478": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4479": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4480": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "ADD",
      "path": "21"
    },
    "4481": {
      "fn": "DepositNFT._burn",
      "offset": [
        12545,
        12591
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4488": {
      "op": "SHL"
    },
    "4489": {
      "op": "SUB"
    },
    "4490": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4491": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "AND",
      "path": "21"
    },
    "4492": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4493": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4494": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12523
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4496": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4497": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4498": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4499": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4501": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4502": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4503": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12530
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4504": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4505": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4506": {
      "fn": "DepositNFT._burn",
      "offset": [
        12540,
        12541
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4507": {
      "fn": "DepositNFT._burn",
      "offset": [
        12540,
        12541
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4508": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4509": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "LT",
      "path": "21"
    },
    "4510": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11A9"
    },
    "4513": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4514": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11A9"
    },
    "4517": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D59"
    },
    "4520": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12511,
        12542
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4521": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4522": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4524": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4525": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4526": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4527": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4529": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4530": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4531": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4532": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4533": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4534": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12542
      ],
      "op": "ADD",
      "path": "21"
    },
    "4535": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12591
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4536": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12591
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4537": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12591
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4538": {
      "fn": "DepositNFT._burn",
      "offset": [
        12511,
        12591
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "op": "SUB"
    },
    "4547": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "DUP7",
      "path": "21",
      "statement": 49
    },
    "4548": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "AND",
      "path": "21"
    },
    "4549": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4550": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4551": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12621
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4553": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4554": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4555": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4556": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4558": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4559": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12628
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4560": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4561": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4562": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4563": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11DE"
    },
    "4566": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4567": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11DE"
    },
    "4570": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E83"
    },
    "4573": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12609,
        12643
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4574": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4575": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "4577": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4578": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SUB",
      "path": "21"
    },
    "4579": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4580": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4581": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4582": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4584": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4585": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4587": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4589": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4590": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "ADD",
      "path": "21"
    },
    "4591": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4593": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4594": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4595": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4596": {
      "fn": "DepositNFT._burn",
      "offset": [
        12609,
        12643
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4597": {
      "fn": "DepositNFT._burn",
      "offset": [
        12681,
        12685
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 50,
      "value": "0x1"
    },
    "4599": {
      "fn": "DepositNFT._burn",
      "offset": [
        12662,
        12685
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4600": {
      "fn": "DepositNFT._burn",
      "offset": [
        12662,
        12685
      ],
      "op": "POP",
      "path": "21"
    },
    "4601": {
      "fn": "DepositNFT._burn",
      "offset": [
        12703,
        12708
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 51,
      "value": "0x1274"
    },
    "4604": {
      "fn": "DepositNFT._burn",
      "offset": [
        12703,
        12708
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4605": {
      "fn": "DepositNFT._burn",
      "offset": [
        12446,
        12719
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4606": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 52,
      "value": "0x0"
    },
    "4608": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "DUP6",
      "path": "21"
    },
    "4609": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4610": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4611": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12742
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "4613": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4615": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4616": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4617": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4618": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4620": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4621": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4622": {
      "fn": "DepositNFT._burn",
      "offset": [
        12735,
        12751
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4623": {
      "fn": "DepositNFT._burn",
      "offset": [
        12728,
        12751
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4624": {
      "fn": "DepositNFT._burn",
      "offset": [
        12728,
        12751
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "op": "NOT"
    },
    "4634": {
      "fn": "DepositNFT._burn",
      "offset": [
        12728,
        12751
      ],
      "op": "AND",
      "path": "21"
    },
    "4635": {
      "fn": "DepositNFT._burn",
      "offset": [
        12728,
        12751
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4636": {
      "fn": "DepositNFT._burn",
      "offset": [
        12728,
        12751
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4643": {
      "op": "SHL"
    },
    "4644": {
      "op": "SUB"
    },
    "4645": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4646": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "AND",
      "path": "21"
    },
    "4647": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4648": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4649": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12779
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "4651": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4652": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4653": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4654": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4655": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12786
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4656": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12802
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4657": {
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12807
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4658": {
      "branch": 82,
      "fn": "DepositNFT._burn",
      "offset": [
        12767,
        12807
      ],
      "op": "SUB",
      "path": "21"
    },
    "4659": {
      "fn": "DepositNFT._burn",
      "offset": [
        12763,
        12854
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x124C"
    },
    "4662": {
      "branch": 82,
      "fn": "DepositNFT._burn",
      "offset": [
        12763,
        12854
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4663": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12828
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 53,
      "value": "0x1"
    },
    "4665": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4666": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4667": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4668": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4670": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1246"
    },
    "4673": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4674": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E99"
    },
    "4677": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12823,
        12842
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4678": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4679": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4680": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4681": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "POP",
      "path": "21"
    },
    "4682": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4683": {
      "fn": "DepositNFT._burn",
      "offset": [
        12823,
        12842
      ],
      "op": "POP",
      "path": "21"
    },
    "4684": {
      "fn": "DepositNFT._burn",
      "offset": [
        12763,
        12854
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4685": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12880
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 54,
      "value": "0x2"
    },
    "4687": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4688": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4689": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4690": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12880
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4692": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x125C"
    },
    "4695": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4696": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1E99"
    },
    "4699": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12864,
        12883
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4700": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4701": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4702": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4703": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "POP",
      "path": "21"
    },
    "4704": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4705": {
      "fn": "DepositNFT._burn",
      "offset": [
        12864,
        12883
      ],
      "op": "POP",
      "path": "21"
    },
    "4706": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 55
    },
    "4707": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4708": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x126C"
    },
    "4711": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4712": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D85"
    },
    "4715": {
      "fn": "DepositNFT._burn",
      "jump": "i",
      "offset": [
        12427,
        12430
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4716": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4717": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4718": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "POP",
      "path": "21"
    },
    "4719": {
      "fn": "DepositNFT._burn",
      "offset": [
        12427,
        12430
      ],
      "op": "POP",
      "path": "21"
    },
    "4720": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10FD"
    },
    "4723": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4724": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4725": {
      "fn": "DepositNFT._burn",
      "offset": [
        12394,
        12895
      ],
      "op": "POP",
      "path": "21"
    },
    "4726": {
      "fn": "DepositNFT._burn",
      "offset": [
        11880,
        12901
      ],
      "op": "POP",
      "path": "21"
    },
    "4727": {
      "fn": "DepositNFT._burn",
      "offset": [
        11880,
        12901
      ],
      "op": "POP",
      "path": "21"
    },
    "4728": {
      "fn": "DepositNFT._burn",
      "offset": [
        11880,
        12901
      ],
      "op": "POP",
      "path": "21"
    },
    "4729": {
      "fn": "DepositNFT._burn",
      "offset": [
        11831,
        12901
      ],
      "op": "POP",
      "path": "21"
    },
    "4730": {
      "fn": "DepositNFT._burn",
      "jump": "o",
      "offset": [
        11831,
        12901
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4731": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14184,
        14491
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4732": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14334,
        14342
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 56
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4739": {
      "op": "SHL"
    },
    "4740": {
      "op": "SUB"
    },
    "4741": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14325,
        14342
      ],
      "op": "AND",
      "path": "21"
    },
    "4742": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14325,
        14330
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4749": {
      "op": "SHL"
    },
    "4750": {
      "op": "SUB"
    },
    "4751": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14325,
        14342
      ],
      "op": "AND",
      "path": "21"
    },
    "4752": {
      "branch": 83,
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14325,
        14342
      ],
      "op": "SUB",
      "path": "21"
    },
    "4753": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x12DC"
    },
    "4756": {
      "branch": 83,
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4757": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4759": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4766": {
      "op": "SHL"
    },
    "4767": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4768": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4771": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4773": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4774": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "ADD",
      "path": "21"
    },
    "4775": {
      "op": "MSTORE"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4780": {
      "op": "DUP3"
    },
    "4781": {
      "op": "ADD"
    },
    "4782": {
      "op": "MSTORE"
    },
    "4783": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4818": {
      "op": "DUP3"
    },
    "4819": {
      "op": "ADD"
    },
    "4820": {
      "op": "MSTORE"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4823": {
      "op": "ADD"
    },
    "4824": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "4827": {
      "op": "JUMP"
    },
    "4828": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14317,
        14372
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "op": "SUB"
    },
    "4837": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 57
    },
    "4838": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4839": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "AND",
      "path": "21"
    },
    "4840": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "4842": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4843": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4844": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4845": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14400
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "4847": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "4849": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4850": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4851": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4852": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4854": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4855": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4856": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14407
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4857": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "4858": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4859": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "AND",
      "path": "21"
    },
    "4860": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4861": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4862": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4863": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "4864": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4865": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4866": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4867": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4868": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4869": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14417
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "4870": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4871": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4874": {
      "op": "NOT"
    },
    "4875": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "AND",
      "path": "21"
    },
    "4876": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4877": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4878": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4879": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4880": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4881": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "OR",
      "path": "21"
    },
    "4882": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4883": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4884": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14382,
        14428
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "4885": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "SWAP2",
      "path": "21",
      "statement": 58
    },
    "4886": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4887": {
      "op": "SWAP2"
    },
    "4888": {
      "op": "DUP3"
    },
    "4889": {
      "op": "MSTORE"
    },
    "4890": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "4923": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4924": {
      "op": "ADD"
    },
    "4925": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4927": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4928": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "DUP1",
      "path": "21"
    },
    "4929": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4930": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "SUB",
      "path": "21"
    },
    "4931": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4932": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14443,
        14484
      ],
      "op": "LOG3",
      "path": "21"
    },
    "4933": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14184,
        14491
      ],
      "op": "POP",
      "path": "21"
    },
    "4934": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14184,
        14491
      ],
      "op": "POP",
      "path": "21"
    },
    "4935": {
      "fn": "DepositNFT._setApprovalForAll",
      "offset": [
        14184,
        14491
      ],
      "op": "POP",
      "path": "21"
    },
    "4936": {
      "fn": "DepositNFT._setApprovalForAll",
      "jump": "o",
      "offset": [
        14184,
        14491
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4937": {
      "fn": "DepositNFT._mint",
      "offset": [
        11055,
        11614
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4944": {
      "op": "SHL"
    },
    "4945": {
      "op": "SUB"
    },
    "4946": {
      "fn": "DepositNFT._mint",
      "offset": [
        11134,
        11150
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 59
    },
    "4947": {
      "branch": 84,
      "fn": "DepositNFT._mint",
      "offset": [
        11134,
        11150
      ],
      "op": "AND",
      "path": "21"
    },
    "4948": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x139F"
    },
    "4951": {
      "branch": 84,
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4952": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4954": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "4955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4961": {
      "op": "SHL"
    },
    "4962": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4963": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4966": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "4968": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4969": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "ADD",
      "path": "21"
    },
    "4970": {
      "op": "DUP2"
    },
    "4971": {
      "op": "SWAP1"
    },
    "4972": {
      "op": "MSTORE"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4975": {
      "op": "DUP3"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "MSTORE"
    },
    "4978": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5013": {
      "op": "DUP3"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "op": "MSTORE"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5018": {
      "op": "ADD"
    },
    "5019": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "5022": {
      "op": "JUMP"
    },
    "5023": {
      "fn": "DepositNFT._mint",
      "offset": [
        11126,
        11187
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5024": {
      "fn": "DepositNFT._exists",
      "offset": [
        8544,
        8548
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5026": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5027": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5028": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5029": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8574
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "5031": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5033": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5034": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5036": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5037": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5038": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5045": {
      "op": "SHL"
    },
    "5046": {
      "op": "SUB"
    },
    "5047": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8583
      ],
      "op": "AND",
      "path": "21"
    },
    "5048": {
      "fn": "DepositNFT._exists",
      "offset": [
        8567,
        8597
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5049": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 60,
      "value": "0x1404"
    },
    "5052": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5053": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5055": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5062": {
      "op": "SHL"
    },
    "5063": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5064": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5067": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "5069": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5070": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "ADD",
      "path": "21"
    },
    "5071": {
      "op": "MSTORE"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5076": {
      "op": "DUP3"
    },
    "5077": {
      "op": "ADD"
    },
    "5078": {
      "op": "MSTORE"
    },
    "5079": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5114": {
      "op": "DUP3"
    },
    "5115": {
      "op": "ADD"
    },
    "5116": {
      "op": "MSTORE"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5119": {
      "op": "ADD"
    },
    "5120": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "5123": {
      "op": "JUMP"
    },
    "5124": {
      "fn": "DepositNFT._mint",
      "offset": [
        11224,
        11282
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5131": {
      "op": "SHL"
    },
    "5132": {
      "op": "SUB"
    },
    "5133": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 61
    },
    "5134": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "AND",
      "path": "21"
    },
    "5135": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5137": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5138": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5139": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5140": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11371
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5142": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5144": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5145": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5146": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5147": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5149": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5150": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5151": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5152": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5153": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5154": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "5156": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5157": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "ADD",
      "path": "21"
    },
    "5158": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5159": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5160": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5161": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5162": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5163": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5164": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5165": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5166": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "ADD",
      "path": "21"
    },
    "5167": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "DUP6",
      "path": "21"
    },
    "5168": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5169": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11398
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5170": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "DUP5",
      "path": "21",
      "statement": 62
    },
    "5171": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5172": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5173": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11415
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "5175": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5176": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5177": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5178": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5179": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5180": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11424
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5181": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5182": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5189": {
      "op": "SHL"
    },
    "5190": {
      "op": "SUB"
    },
    "5191": {
      "op": "NOT"
    },
    "5192": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "AND",
      "path": "21"
    },
    "5193": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5194": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "OR",
      "path": "21"
    },
    "5195": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5196": {
      "fn": "DepositNFT._mint",
      "offset": [
        11408,
        11429
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5197": {
      "fn": "DepositNFT._mint",
      "offset": [
        11447,
        11480
      ],
      "op": "MLOAD",
      "path": "21",
      "statement": 63
    },
    "5198": {
      "fn": "DepositNFT._mint",
      "offset": [
        11390,
        11397
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5199": {
      "fn": "DepositNFT._mint",
      "offset": [
        11390,
        11397
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "5200": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5201": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5202": {
      "fn": "DepositNFT._mint",
      "offset": [
        11447,
        11480
      ],
      "op": "PUSH32",
      "path": "21",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5235": {
      "fn": "DepositNFT._mint",
      "offset": [
        11447,
        11480
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5236": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5237": {
      "fn": "DepositNFT._mint",
      "offset": [
        11359,
        11375
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5238": {
      "fn": "DepositNFT._mint",
      "offset": [
        11447,
        11480
      ],
      "op": "LOG4",
      "path": "21"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5245": {
      "op": "SHL"
    },
    "5246": {
      "op": "SUB"
    },
    "5247": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5248": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "AND",
      "path": "21"
    },
    "5249": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5251": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5252": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5253": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5254": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11507
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "5256": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5258": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5259": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5261": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5262": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11511
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "5263": {
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11527
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5264": {
      "fn": "DepositNFT._mint",
      "offset": [
        11531,
        11532
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "5266": {
      "branch": 85,
      "fn": "DepositNFT._mint",
      "offset": [
        11495,
        11532
      ],
      "op": "SUB",
      "path": "21"
    },
    "5267": {
      "fn": "DepositNFT._mint",
      "offset": [
        11491,
        11579
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14AC"
    },
    "5270": {
      "branch": 85,
      "fn": "DepositNFT._mint",
      "offset": [
        11491,
        11579
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5271": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11553
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 64,
      "value": "0x1"
    },
    "5273": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5274": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5275": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5276": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11564
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5278": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14A6"
    },
    "5281": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5282": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D85"
    },
    "5285": {
      "fn": "DepositNFT._mint",
      "jump": "i",
      "offset": [
        11548,
        11567
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5286": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5287": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5288": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5289": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "POP",
      "path": "21"
    },
    "5290": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5291": {
      "fn": "DepositNFT._mint",
      "offset": [
        11548,
        11567
      ],
      "op": "POP",
      "path": "21"
    },
    "5292": {
      "fn": "DepositNFT._mint",
      "offset": [
        11491,
        11579
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5293": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11604
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 65,
      "value": "0x2"
    },
    "5295": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5296": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "5297": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5298": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11604
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5300": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14BC"
    },
    "5303": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5304": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1D85"
    },
    "5307": {
      "fn": "DepositNFT._mint",
      "jump": "i",
      "offset": [
        11588,
        11607
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5308": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5309": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5310": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5311": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "POP",
      "path": "21"
    },
    "5312": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "SSTORE",
      "path": "21"
    },
    "5313": {
      "fn": "DepositNFT._mint",
      "offset": [
        11588,
        11607
      ],
      "op": "POP",
      "path": "21"
    },
    "5314": {
      "fn": "DepositNFT._mint",
      "offset": [
        11055,
        11614
      ],
      "op": "POP",
      "path": "21"
    },
    "5315": {
      "fn": "DepositNFT._mint",
      "offset": [
        11055,
        11614
      ],
      "op": "POP",
      "path": "21"
    },
    "5316": {
      "fn": "DepositNFT._mint",
      "jump": "o",
      "offset": [
        11055,
        11614
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5317": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        7869,
        8176
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5318": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8020,
        8048
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 66,
      "value": "0x14D0"
    },
    "5321": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8030,
        8034
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5322": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8036,
        8038
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5323": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8040,
        8047
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5324": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8020,
        8029
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xEDD"
    },
    "5327": {
      "fn": "DepositNFT._safeTransfer",
      "jump": "i",
      "offset": [
        8020,
        8048
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5328": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8020,
        8048
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5329": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8066,
        8114
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 67,
      "value": "0x14DC"
    },
    "5332": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8089,
        8093
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5333": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8095,
        8097
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5334": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8099,
        8106
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5335": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8108,
        8113
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5336": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8066,
        8088
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x14F8"
    },
    "5339": {
      "fn": "DepositNFT._safeTransfer",
      "jump": "i",
      "offset": [
        8066,
        8114
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5340": {
      "branch": 86,
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8066,
        8114
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5341": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xC57"
    },
    "5344": {
      "branch": 86,
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5345": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5347": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5354": {
      "op": "SHL"
    },
    "5355": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5356": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5357": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "5359": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "ADD",
      "path": "21"
    },
    "5360": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "5363": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5364": {
      "fn": "DepositNFT._safeTransfer",
      "offset": [
        8058,
        8169
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EB0"
    },
    "5367": {
      "fn": "DepositNFT._safeTransfer",
      "jump": "i",
      "offset": [
        8058,
        8169
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5368": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5369": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15194,
        15198
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5377": {
      "op": "SHL"
    },
    "5378": {
      "op": "SUB"
    },
    "5379": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15214,
        15227
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5380": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15214,
        15227
      ],
      "op": "AND",
      "path": "21"
    },
    "5381": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "5382": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "4",
      "statement": 68
    },
    "5383": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15210,
        15816
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15EE"
    },
    "5386": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15210,
        15816
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5387": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5389": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5390": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5397": {
      "op": "SHL"
    },
    "5398": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5399": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "op": "SUB"
    },
    "5408": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15285
      ],
      "op": "DUP6",
      "path": "21"
    },
    "5409": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15285
      ],
      "op": "AND",
      "path": "21"
    },
    "5410": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15285
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5411": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15285
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x150B7A02"
    },
    "5416": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15285
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5417": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x153C"
    },
    "5420": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5421": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5422": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5423": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15300,
        15304
      ],
      "op": "DUP10",
      "path": "21"
    },
    "5424": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15300,
        15304
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5425": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15306,
        15313
      ],
      "op": "DUP9",
      "path": "21"
    },
    "5426": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15306,
        15313
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5427": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15315,
        15320
      ],
      "op": "DUP9",
      "path": "21"
    },
    "5428": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15315,
        15320
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5429": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "5431": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "ADD",
      "path": "21"
    },
    "5432": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F02"
    },
    "5435": {
      "fn": "DepositNFT._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15249,
        15321
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5436": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5437": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5439": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5441": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5442": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5443": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP4",
      "path": "21"
    },
    "5444": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SUB",
      "path": "21"
    },
    "5445": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5446": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5448": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP8",
      "path": "21"
    },
    "5449": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "GAS",
      "path": "21"
    },
    "5450": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "CALL",
      "path": "21"
    },
    "5451": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "5452": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "POP",
      "path": "21"
    },
    "5453": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "POP",
      "path": "21"
    },
    "5454": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "POP",
      "path": "21"
    },
    "5455": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5456": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5457": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1577"
    },
    "5460": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5464": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5465": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5466": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "5468": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "5469": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5470": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5471": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "ADD",
      "path": "21"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5474": {
      "op": "NOT"
    },
    "5475": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "AND",
      "path": "21"
    },
    "5476": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5477": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "ADD",
      "path": "21"
    },
    "5478": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5479": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "5480": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5481": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1574"
    },
    "5484": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5485": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5486": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "ADD",
      "path": "21"
    },
    "5487": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5488": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F3F"
    },
    "5491": {
      "fn": "DepositNFT._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15249,
        15321
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5492": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5493": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "5495": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15249,
        15321
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5496": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15D4"
    },
    "5499": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5500": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "5501": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5502": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5503": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "5504": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15A5"
    },
    "5507": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5508": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5510": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5511": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5512": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "POP",
      "path": "21"
    },
    "5513": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "5515": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "NOT",
      "path": "21"
    },
    "5516": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3F"
    },
    "5518": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "5519": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "ADD",
      "path": "21"
    },
    "5520": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "AND",
      "path": "21"
    },
    "5521": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5522": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "ADD",
      "path": "21"
    },
    "5523": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "5525": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5526": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "5527": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "DUP3",
      "path": "21"
    },
    "5528": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5529": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "5530": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5532": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5534": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "DUP5",
      "path": "21"
    },
    "5535": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "ADD",
      "path": "21"
    },
    "5536": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "5537": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15AA"
    },
    "5540": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5541": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5542": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "5544": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "5545": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "POP",
      "path": "21"
    },
    "5546": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5547": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "POP",
      "path": "21"
    },
    "5548": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15488,
        15494
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5549": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15488,
        15501
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5550": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15505,
        15506
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "5552": {
      "branch": 87,
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15488,
        15506
      ],
      "op": "SUB",
      "path": "21"
    },
    "5553": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15484,
        15750
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x15CC"
    },
    "5556": {
      "branch": 87,
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15484,
        15750
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "5557": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 69,
      "value": "0x40"
    },
    "5559": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5568": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5569": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "5571": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "ADD",
      "path": "21"
    },
    "5572": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x52E"
    },
    "5575": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5576": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15530,
        15590
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EB0"
    },
    "5579": {
      "fn": "DepositNFT._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15530,
        15590
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5580": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15484,
        15750
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5581": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15702,
        15708
      ],
      "op": "DUP1",
      "path": "21"
    },
    "5582": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15696,
        15709
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "5583": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15687,
        15693
      ],
      "op": "DUP2",
      "path": "21"
    },
    "5584": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15683,
        15685
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "5586": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15679,
        15694
      ],
      "op": "ADD",
      "path": "21"
    },
    "5587": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15672,
        15710
      ],
      "op": "REVERT",
      "path": "21"
    },
    "5588": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15245,
        15764
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5595": {
      "op": "SHL"
    },
    "5596": {
      "op": "SUB"
    },
    "5597": {
      "op": "NOT"
    },
    "5598": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15371,
        15422
      ],
      "op": "AND",
      "path": "21",
      "statement": 70
    },
    "5599": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15371,
        15422
      ],
      "op": "EQ",
      "path": "21"
    },
    "5608": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15371,
        15422
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "5609": {
      "op": "POP"
    },
    "5610": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15364,
        15422
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xED5"
    },
    "5613": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15364,
        15422
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5614": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15210,
        15816
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "5615": {
      "op": "POP"
    },
    "5616": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15801,
        15805
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 71,
      "value": "0x1"
    },
    "5618": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "5619": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "5620": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "POP",
      "path": "21"
    },
    "5621": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "POP",
      "path": "21"
    },
    "5622": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "POP",
      "path": "21"
    },
    "5623": {
      "fn": "DepositNFT._checkOnERC721Received",
      "offset": [
        15044,
        15822
      ],
      "op": "POP",
      "path": "21"
    },
    "5624": {
      "fn": "DepositNFT._checkOnERC721Received",
      "jump": "o",
      "offset": [
        15044,
        15822
      ],
      "op": "JUMP",
      "path": "21"
    },
    "5625": {
      "op": "JUMPDEST"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5628": {
      "op": "MLOAD"
    },
    "5629": {
      "op": "DUP1"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5632": {
      "op": "ADD"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5635": {
      "op": "MSTORE"
    },
    "5636": {
      "op": "DUP1"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5639": {
      "op": "DUP2"
    },
    "5640": {
      "op": "MSTORE"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5643": {
      "op": "ADD"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5646": {
      "op": "DUP2"
    },
    "5647": {
      "op": "MSTORE"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5653": {
      "op": "DUP2"
    },
    "5654": {
      "op": "MSTORE"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5657": {
      "op": "ADD"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x164B"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5663": {
      "op": "MLOAD"
    },
    "5664": {
      "op": "DUP1"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5667": {
      "op": "ADD"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5670": {
      "op": "MSTORE"
    },
    "5671": {
      "op": "DUP1"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "MSTORE"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5681": {
      "op": "DUP2"
    },
    "5682": {
      "op": "MSTORE"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5685": {
      "op": "ADD"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5688": {
      "op": "DUP2"
    },
    "5689": {
      "op": "MSTORE"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5692": {
      "op": "ADD"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5695": {
      "op": "DUP2"
    },
    "5696": {
      "op": "MSTORE"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5699": {
      "op": "ADD"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5702": {
      "op": "DUP2"
    },
    "5703": {
      "op": "MSTORE"
    },
    "5704": {
      "op": "POP"
    },
    "5705": {
      "op": "SWAP1"
    },
    "5706": {
      "op": "JUMP"
    },
    "5707": {
      "op": "JUMPDEST"
    },
    "5708": {
      "op": "SWAP1"
    },
    "5709": {
      "op": "MSTORE"
    },
    "5710": {
      "op": "SWAP1"
    },
    "5711": {
      "jump": "o",
      "op": "JUMP"
    },
    "5712": {
      "op": "JUMPDEST"
    },
    "5713": {
      "op": "DUP3"
    },
    "5714": {
      "op": "DUP1"
    },
    "5715": {
      "op": "SLOAD"
    },
    "5716": {
      "op": "PUSH2",
      "value": "0x165C"
    },
    "5719": {
      "op": "SWAP1"
    },
    "5720": {
      "op": "PUSH2",
      "value": "0x1CCE"
    },
    "5723": {
      "jump": "i",
      "op": "JUMP"
    },
    "5724": {
      "op": "JUMPDEST"
    },
    "5725": {
      "op": "SWAP1"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "op": "MSTORE"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5733": {
      "op": "KECCAK256"
    },
    "5734": {
      "op": "SWAP1"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5737": {
      "op": "ADD"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5740": {
      "op": "SWAP1"
    },
    "5741": {
      "op": "DIV"
    },
    "5742": {
      "op": "DUP2"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "SWAP3"
    },
    "5745": {
      "op": "DUP3"
    },
    "5746": {
      "op": "PUSH2",
      "value": "0x167E"
    },
    "5749": {
      "op": "JUMPI"
    },
    "5750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5752": {
      "op": "DUP6"
    },
    "5753": {
      "op": "SSTORE"
    },
    "5754": {
      "op": "PUSH2",
      "value": "0x16C4"
    },
    "5757": {
      "op": "JUMP"
    },
    "5758": {
      "op": "JUMPDEST"
    },
    "5759": {
      "op": "DUP3"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5762": {
      "op": "LT"
    },
    "5763": {
      "op": "PUSH2",
      "value": "0x1697"
    },
    "5766": {
      "op": "JUMPI"
    },
    "5767": {
      "op": "DUP1"
    },
    "5768": {
      "op": "MLOAD"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5771": {
      "op": "NOT"
    },
    "5772": {
      "op": "AND"
    },
    "5773": {
      "op": "DUP4"
    },
    "5774": {
      "op": "DUP1"
    },
    "5775": {
      "op": "ADD"
    },
    "5776": {
      "op": "OR"
    },
    "5777": {
      "op": "DUP6"
    },
    "5778": {
      "op": "SSTORE"
    },
    "5779": {
      "op": "PUSH2",
      "value": "0x16C4"
    },
    "5782": {
      "op": "JUMP"
    },
    "5783": {
      "op": "JUMPDEST"
    },
    "5784": {
      "op": "DUP3"
    },
    "5785": {
      "op": "DUP1"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5789": {
      "op": "ADD"
    },
    "5790": {
      "op": "DUP6"
    },
    "5791": {
      "op": "SSTORE"
    },
    "5792": {
      "op": "DUP3"
    },
    "5793": {
      "op": "ISZERO"
    },
    "5794": {
      "op": "PUSH2",
      "value": "0x16C4"
    },
    "5797": {
      "op": "JUMPI"
    },
    "5798": {
      "op": "SWAP2"
    },
    "5799": {
      "op": "DUP3"
    },
    "5800": {
      "op": "ADD"
    },
    "5801": {
      "op": "JUMPDEST"
    },
    "5802": {
      "op": "DUP3"
    },
    "5803": {
      "op": "DUP2"
    },
    "5804": {
      "op": "GT"
    },
    "5805": {
      "op": "ISZERO"
    },
    "5806": {
      "op": "PUSH2",
      "value": "0x16C4"
    },
    "5809": {
      "op": "JUMPI"
    },
    "5810": {
      "op": "DUP3"
    },
    "5811": {
      "op": "MLOAD"
    },
    "5812": {
      "op": "DUP3"
    },
    "5813": {
      "op": "SSTORE"
    },
    "5814": {
      "op": "SWAP2"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5817": {
      "op": "ADD"
    },
    "5818": {
      "op": "SWAP2"
    },
    "5819": {
      "op": "SWAP1"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5822": {
      "op": "ADD"
    },
    "5823": {
      "op": "SWAP1"
    },
    "5824": {
      "op": "PUSH2",
      "value": "0x16A9"
    },
    "5827": {
      "op": "JUMP"
    },
    "5828": {
      "op": "JUMPDEST"
    },
    "5829": {
      "op": "POP"
    },
    "5830": {
      "op": "PUSH2",
      "value": "0x16D0"
    },
    "5833": {
      "op": "SWAP3"
    },
    "5834": {
      "op": "SWAP2"
    },
    "5835": {
      "op": "POP"
    },
    "5836": {
      "op": "PUSH2",
      "value": "0x16D4"
    },
    "5839": {
      "jump": "i",
      "op": "JUMP"
    },
    "5840": {
      "op": "JUMPDEST"
    },
    "5841": {
      "op": "POP"
    },
    "5842": {
      "op": "SWAP1"
    },
    "5843": {
      "jump": "o",
      "op": "JUMP"
    },
    "5844": {
      "op": "JUMPDEST"
    },
    "5845": {
      "op": "JUMPDEST"
    },
    "5846": {
      "op": "DUP1"
    },
    "5847": {
      "op": "DUP3"
    },
    "5848": {
      "op": "GT"
    },
    "5849": {
      "op": "ISZERO"
    },
    "5850": {
      "op": "PUSH2",
      "value": "0x16D0"
    },
    "5853": {
      "op": "JUMPI"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5856": {
      "op": "DUP2"
    },
    "5857": {
      "op": "SSTORE"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "ADD"
    },
    "5861": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "5864": {
      "op": "JUMP"
    },
    "5865": {
      "op": "JUMPDEST"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5872": {
      "op": "SHL"
    },
    "5873": {
      "op": "SUB"
    },
    "5874": {
      "op": "NOT"
    },
    "5875": {
      "op": "DUP2"
    },
    "5876": {
      "op": "AND"
    },
    "5877": {
      "op": "DUP2"
    },
    "5878": {
      "op": "EQ"
    },
    "5879": {
      "op": "PUSH2",
      "value": "0x81E"
    },
    "5882": {
      "op": "JUMPI"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5885": {
      "op": "DUP1"
    },
    "5886": {
      "op": "REVERT"
    },
    "5887": {
      "op": "JUMPDEST"
    },
    "5888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5892": {
      "op": "DUP3"
    },
    "5893": {
      "op": "DUP5"
    },
    "5894": {
      "op": "SUB"
    },
    "5895": {
      "op": "SLT"
    },
    "5896": {
      "op": "ISZERO"
    },
    "5897": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "5900": {
      "op": "JUMPI"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5903": {
      "op": "DUP1"
    },
    "5904": {
      "op": "REVERT"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "DUP2"
    },
    "5907": {
      "op": "CALLDATALOAD"
    },
    "5908": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "5911": {
      "op": "DUP2"
    },
    "5912": {
      "op": "PUSH2",
      "value": "0x16E9"
    },
    "5915": {
      "jump": "i",
      "op": "JUMP"
    },
    "5916": {
      "op": "JUMPDEST"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5919": {
      "op": "DUP2"
    },
    "5920": {
      "op": "MLOAD"
    },
    "5921": {
      "op": "DUP1"
    },
    "5922": {
      "op": "DUP5"
    },
    "5923": {
      "op": "MSTORE"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5926": {
      "op": "JUMPDEST"
    },
    "5927": {
      "op": "DUP2"
    },
    "5928": {
      "op": "DUP2"
    },
    "5929": {
      "op": "LT"
    },
    "5930": {
      "op": "ISZERO"
    },
    "5931": {
      "op": "PUSH2",
      "value": "0x1742"
    },
    "5934": {
      "op": "JUMPI"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5937": {
      "op": "DUP2"
    },
    "5938": {
      "op": "DUP6"
    },
    "5939": {
      "op": "ADD"
    },
    "5940": {
      "op": "DUP2"
    },
    "5941": {
      "op": "ADD"
    },
    "5942": {
      "op": "MLOAD"
    },
    "5943": {
      "op": "DUP7"
    },
    "5944": {
      "op": "DUP4"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "DUP3"
    },
    "5947": {
      "op": "ADD"
    },
    "5948": {
      "op": "MSTORE"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "op": "PUSH2",
      "value": "0x1726"
    },
    "5953": {
      "op": "JUMP"
    },
    "5954": {
      "op": "JUMPDEST"
    },
    "5955": {
      "op": "DUP2"
    },
    "5956": {
      "op": "DUP2"
    },
    "5957": {
      "op": "GT"
    },
    "5958": {
      "op": "ISZERO"
    },
    "5959": {
      "op": "PUSH2",
      "value": "0x1754"
    },
    "5962": {
      "op": "JUMPI"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5967": {
      "op": "DUP4"
    },
    "5968": {
      "op": "DUP8"
    },
    "5969": {
      "op": "ADD"
    },
    "5970": {
      "op": "ADD"
    },
    "5971": {
      "op": "MSTORE"
    },
    "5972": {
      "op": "JUMPDEST"
    },
    "5973": {
      "op": "POP"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5976": {
      "op": "ADD"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5979": {
      "op": "NOT"
    },
    "5980": {
      "op": "AND"
    },
    "5981": {
      "op": "SWAP3"
    },
    "5982": {
      "op": "SWAP1"
    },
    "5983": {
      "op": "SWAP3"
    },
    "5984": {
      "op": "ADD"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "SWAP3"
    },
    "5989": {
      "op": "SWAP2"
    },
    "5990": {
      "op": "POP"
    },
    "5991": {
      "op": "POP"
    },
    "5992": {
      "jump": "o",
      "op": "JUMP"
    },
    "5993": {
      "op": "JUMPDEST"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5996": {
      "op": "DUP2"
    },
    "5997": {
      "op": "MSTORE"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6000": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6005": {
      "op": "DUP4"
    },
    "6006": {
      "op": "ADD"
    },
    "6007": {
      "op": "DUP5"
    },
    "6008": {
      "op": "PUSH2",
      "value": "0x171C"
    },
    "6011": {
      "jump": "i",
      "op": "JUMP"
    },
    "6012": {
      "op": "JUMPDEST"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6017": {
      "op": "DUP3"
    },
    "6018": {
      "op": "DUP5"
    },
    "6019": {
      "op": "SUB"
    },
    "6020": {
      "op": "SLT"
    },
    "6021": {
      "op": "ISZERO"
    },
    "6022": {
      "op": "PUSH2",
      "value": "0x178E"
    },
    "6025": {
      "op": "JUMPI"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6028": {
      "op": "DUP1"
    },
    "6029": {
      "op": "REVERT"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "POP"
    },
    "6032": {
      "op": "CALLDATALOAD"
    },
    "6033": {
      "op": "SWAP2"
    },
    "6034": {
      "op": "SWAP1"
    },
    "6035": {
      "op": "POP"
    },
    "6036": {
      "jump": "o",
      "op": "JUMP"
    },
    "6037": {
      "op": "JUMPDEST"
    },
    "6038": {
      "op": "DUP1"
    },
    "6039": {
      "op": "CALLDATALOAD"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6046": {
      "op": "SHL"
    },
    "6047": {
      "op": "SUB"
    },
    "6048": {
      "op": "DUP2"
    },
    "6049": {
      "op": "AND"
    },
    "6050": {
      "op": "DUP2"
    },
    "6051": {
      "op": "EQ"
    },
    "6052": {
      "op": "PUSH2",
      "value": "0x17AC"
    },
    "6055": {
      "op": "JUMPI"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6058": {
      "op": "DUP1"
    },
    "6059": {
      "op": "REVERT"
    },
    "6060": {
      "op": "JUMPDEST"
    },
    "6061": {
      "op": "SWAP2"
    },
    "6062": {
      "op": "SWAP1"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "jump": "o",
      "op": "JUMP"
    },
    "6065": {
      "op": "JUMPDEST"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6068": {
      "op": "DUP1"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6071": {
      "op": "DUP4"
    },
    "6072": {
      "op": "DUP6"
    },
    "6073": {
      "op": "SUB"
    },
    "6074": {
      "op": "SLT"
    },
    "6075": {
      "op": "ISZERO"
    },
    "6076": {
      "op": "PUSH2",
      "value": "0x17C4"
    },
    "6079": {
      "op": "JUMPI"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6082": {
      "op": "DUP1"
    },
    "6083": {
      "op": "REVERT"
    },
    "6084": {
      "op": "JUMPDEST"
    },
    "6085": {
      "op": "PUSH2",
      "value": "0x17CD"
    },
    "6088": {
      "op": "DUP4"
    },
    "6089": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6092": {
      "jump": "i",
      "op": "JUMP"
    },
    "6093": {
      "op": "JUMPDEST"
    },
    "6094": {
      "op": "SWAP5"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6097": {
      "op": "SWAP4"
    },
    "6098": {
      "op": "SWAP1"
    },
    "6099": {
      "op": "SWAP4"
    },
    "6100": {
      "op": "ADD"
    },
    "6101": {
      "op": "CALLDATALOAD"
    },
    "6102": {
      "op": "SWAP4"
    },
    "6103": {
      "op": "POP"
    },
    "6104": {
      "op": "POP"
    },
    "6105": {
      "op": "POP"
    },
    "6106": {
      "jump": "o",
      "op": "JUMP"
    },
    "6107": {
      "op": "JUMPDEST"
    },
    "6108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6110": {
      "op": "DUP1"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6115": {
      "op": "DUP5"
    },
    "6116": {
      "op": "DUP7"
    },
    "6117": {
      "op": "SUB"
    },
    "6118": {
      "op": "SLT"
    },
    "6119": {
      "op": "ISZERO"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x17F0"
    },
    "6123": {
      "op": "JUMPI"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6126": {
      "op": "DUP1"
    },
    "6127": {
      "op": "REVERT"
    },
    "6128": {
      "op": "JUMPDEST"
    },
    "6129": {
      "op": "PUSH2",
      "value": "0x17F9"
    },
    "6132": {
      "op": "DUP5"
    },
    "6133": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6136": {
      "jump": "i",
      "op": "JUMP"
    },
    "6137": {
      "op": "JUMPDEST"
    },
    "6138": {
      "op": "SWAP3"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "op": "PUSH2",
      "value": "0x1807"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6145": {
      "op": "DUP6"
    },
    "6146": {
      "op": "ADD"
    },
    "6147": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6150": {
      "jump": "i",
      "op": "JUMP"
    },
    "6151": {
      "op": "JUMPDEST"
    },
    "6152": {
      "op": "SWAP2"
    },
    "6153": {
      "op": "POP"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6156": {
      "op": "DUP5"
    },
    "6157": {
      "op": "ADD"
    },
    "6158": {
      "op": "CALLDATALOAD"
    },
    "6159": {
      "op": "SWAP1"
    },
    "6160": {
      "op": "POP"
    },
    "6161": {
      "op": "SWAP3"
    },
    "6162": {
      "op": "POP"
    },
    "6163": {
      "op": "SWAP3"
    },
    "6164": {
      "op": "POP"
    },
    "6165": {
      "op": "SWAP3"
    },
    "6166": {
      "jump": "o",
      "op": "JUMP"
    },
    "6167": {
      "op": "JUMPDEST"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6172": {
      "op": "DUP3"
    },
    "6173": {
      "op": "DUP5"
    },
    "6174": {
      "op": "SUB"
    },
    "6175": {
      "op": "SLT"
    },
    "6176": {
      "op": "ISZERO"
    },
    "6177": {
      "op": "PUSH2",
      "value": "0x1829"
    },
    "6180": {
      "op": "JUMPI"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6183": {
      "op": "DUP1"
    },
    "6184": {
      "op": "REVERT"
    },
    "6185": {
      "op": "JUMPDEST"
    },
    "6186": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "6189": {
      "op": "DUP3"
    },
    "6190": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "6193": {
      "jump": "i",
      "op": "JUMP"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6197": {
      "op": "DUP1"
    },
    "6198": {
      "op": "DUP3"
    },
    "6199": {
      "op": "MSTORE"
    },
    "6200": {
      "op": "DUP3"
    },
    "6201": {
      "op": "MLOAD"
    },
    "6202": {
      "op": "DUP3"
    },
    "6203": {
      "op": "DUP3"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "DUP3"
    },
    "6206": {
      "op": "SWAP1"
    },
    "6207": {
      "op": "MSTORE"
    },
    "6208": {
      "op": "DUP1"
    },
    "6209": {
      "op": "MLOAD"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6212": {
      "op": "DUP5"
    },
    "6213": {
      "op": "ADD"
    },
    "6214": {
      "op": "DUP2"
    },
    "6215": {
      "op": "SWAP1"
    },
    "6216": {
      "op": "MSTORE"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6219": {
      "op": "SWAP3"
    },
    "6220": {
      "op": "SWAP2"
    },
    "6221": {
      "op": "DUP3"
    },
    "6222": {
      "op": "ADD"
    },
    "6223": {
      "op": "SWAP1"
    },
    "6224": {
      "op": "DUP4"
    },
    "6225": {
      "op": "SWAP1"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6228": {
      "op": "DUP7"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "SWAP1"
    },
    "6231": {
      "op": "JUMPDEST"
    },
    "6232": {
      "op": "DUP1"
    },
    "6233": {
      "op": "DUP4"
    },
    "6234": {
      "op": "LT"
    },
    "6235": {
      "op": "ISZERO"
    },
    "6236": {
      "op": "PUSH2",
      "value": "0x1877"
    },
    "6239": {
      "op": "JUMPI"
    },
    "6240": {
      "op": "DUP4"
    },
    "6241": {
      "op": "MLOAD"
    },
    "6242": {
      "op": "DUP3"
    },
    "6243": {
      "op": "MSTORE"
    },
    "6244": {
      "op": "SWAP3"
    },
    "6245": {
      "op": "DUP5"
    },
    "6246": {
      "op": "ADD"
    },
    "6247": {
      "op": "SWAP3"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6250": {
      "op": "SWAP3"
    },
    "6251": {
      "op": "SWAP1"
    },
    "6252": {
      "op": "SWAP3"
    },
    "6253": {
      "op": "ADD"
    },
    "6254": {
      "op": "SWAP2"
    },
    "6255": {
      "op": "SWAP1"
    },
    "6256": {
      "op": "DUP5"
    },
    "6257": {
      "op": "ADD"
    },
    "6258": {
      "op": "SWAP1"
    },
    "6259": {
      "op": "PUSH2",
      "value": "0x1857"
    },
    "6262": {
      "op": "JUMP"
    },
    "6263": {
      "op": "JUMPDEST"
    },
    "6264": {
      "op": "POP"
    },
    "6265": {
      "op": "SWAP7"
    },
    "6266": {
      "op": "SWAP6"
    },
    "6267": {
      "op": "POP"
    },
    "6268": {
      "op": "POP"
    },
    "6269": {
      "op": "POP"
    },
    "6270": {
      "op": "POP"
    },
    "6271": {
      "op": "POP"
    },
    "6272": {
      "op": "POP"
    },
    "6273": {
      "jump": "o",
      "op": "JUMP"
    },
    "6274": {
      "op": "JUMPDEST"
    },
    "6275": {
      "op": "DUP1"
    },
    "6276": {
      "op": "MLOAD"
    },
    "6277": {
      "op": "DUP3"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6281": {
      "op": "DUP2"
    },
    "6282": {
      "op": "ADD"
    },
    "6283": {
      "op": "MLOAD"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6286": {
      "op": "DUP4"
    },
    "6287": {
      "op": "ADD"
    },
    "6288": {
      "op": "MSTORE"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6291": {
      "op": "DUP2"
    },
    "6292": {
      "op": "ADD"
    },
    "6293": {
      "op": "MLOAD"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6296": {
      "op": "DUP4"
    },
    "6297": {
      "op": "ADD"
    },
    "6298": {
      "op": "MSTORE"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6303": {
      "op": "DUP3"
    },
    "6304": {
      "op": "ADD"
    },
    "6305": {
      "op": "MLOAD"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6310": {
      "op": "DUP6"
    },
    "6311": {
      "op": "ADD"
    },
    "6312": {
      "op": "MSTORE"
    },
    "6313": {
      "op": "DUP1"
    },
    "6314": {
      "op": "MLOAD"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6317": {
      "op": "DUP6"
    },
    "6318": {
      "op": "ADD"
    },
    "6319": {
      "op": "MSTORE"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6322": {
      "op": "DUP2"
    },
    "6323": {
      "op": "ADD"
    },
    "6324": {
      "op": "MLOAD"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6327": {
      "op": "DUP6"
    },
    "6328": {
      "op": "ADD"
    },
    "6329": {
      "op": "MSTORE"
    },
    "6330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6332": {
      "op": "DUP2"
    },
    "6333": {
      "op": "ADD"
    },
    "6334": {
      "op": "MLOAD"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6337": {
      "op": "DUP6"
    },
    "6338": {
      "op": "ADD"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6342": {
      "op": "DUP2"
    },
    "6343": {
      "op": "ADD"
    },
    "6344": {
      "op": "MLOAD"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6347": {
      "op": "DUP6"
    },
    "6348": {
      "op": "ADD"
    },
    "6349": {
      "op": "MSTORE"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6352": {
      "op": "DUP2"
    },
    "6353": {
      "op": "ADD"
    },
    "6354": {
      "op": "MLOAD"
    },
    "6355": {
      "op": "SWAP1"
    },
    "6356": {
      "op": "POP"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6359": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6362": {
      "op": "DUP6"
    },
    "6363": {
      "op": "ADD"
    },
    "6364": {
      "op": "MSTORE"
    },
    "6365": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "6368": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "6371": {
      "op": "DUP6"
    },
    "6372": {
      "op": "ADD"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "PUSH2",
      "value": "0x171C"
    },
    "6377": {
      "jump": "i",
      "op": "JUMP"
    },
    "6378": {
      "op": "JUMPDEST"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6383": {
      "op": "DUP1"
    },
    "6384": {
      "op": "DUP4"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "op": "DUP2"
    },
    "6387": {
      "op": "DUP5"
    },
    "6388": {
      "op": "MSTORE"
    },
    "6389": {
      "op": "DUP1"
    },
    "6390": {
      "op": "DUP6"
    },
    "6391": {
      "op": "MLOAD"
    },
    "6392": {
      "op": "DUP1"
    },
    "6393": {
      "op": "DUP4"
    },
    "6394": {
      "op": "MSTORE"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6397": {
      "op": "DUP7"
    },
    "6398": {
      "op": "ADD"
    },
    "6399": {
      "op": "SWAP2"
    },
    "6400": {
      "op": "POP"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6403": {
      "op": "DUP2"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6406": {
      "op": "SHL"
    },
    "6407": {
      "op": "DUP8"
    },
    "6408": {
      "op": "ADD"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "SWAP3"
    },
    "6411": {
      "op": "POP"
    },
    "6412": {
      "op": "DUP4"
    },
    "6413": {
      "op": "DUP8"
    },
    "6414": {
      "op": "ADD"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6417": {
      "op": "JUMPDEST"
    },
    "6418": {
      "op": "DUP3"
    },
    "6419": {
      "op": "DUP2"
    },
    "6420": {
      "op": "LT"
    },
    "6421": {
      "op": "ISZERO"
    },
    "6422": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "6425": {
      "op": "JUMPI"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6428": {
      "op": "NOT"
    },
    "6429": {
      "op": "DUP9"
    },
    "6430": {
      "op": "DUP7"
    },
    "6431": {
      "op": "SUB"
    },
    "6432": {
      "op": "ADD"
    },
    "6433": {
      "op": "DUP5"
    },
    "6434": {
      "op": "MSTORE"
    },
    "6435": {
      "op": "PUSH2",
      "value": "0x192D"
    },
    "6438": {
      "op": "DUP6"
    },
    "6439": {
      "op": "DUP4"
    },
    "6440": {
      "op": "MLOAD"
    },
    "6441": {
      "op": "PUSH2",
      "value": "0x1882"
    },
    "6444": {
      "jump": "i",
      "op": "JUMP"
    },
    "6445": {
      "op": "JUMPDEST"
    },
    "6446": {
      "op": "SWAP5"
    },
    "6447": {
      "op": "POP"
    },
    "6448": {
      "op": "SWAP3"
    },
    "6449": {
      "op": "DUP6"
    },
    "6450": {
      "op": "ADD"
    },
    "6451": {
      "op": "SWAP3"
    },
    "6452": {
      "op": "SWAP1"
    },
    "6453": {
      "op": "DUP6"
    },
    "6454": {
      "op": "ADD"
    },
    "6455": {
      "op": "SWAP1"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6458": {
      "op": "ADD"
    },
    "6459": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "6462": {
      "op": "JUMP"
    },
    "6463": {
      "op": "JUMPDEST"
    },
    "6464": {
      "op": "POP"
    },
    "6465": {
      "op": "SWAP3"
    },
    "6466": {
      "op": "SWAP8"
    },
    "6467": {
      "op": "SWAP7"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "op": "POP"
    },
    "6470": {
      "op": "POP"
    },
    "6471": {
      "op": "POP"
    },
    "6472": {
      "op": "POP"
    },
    "6473": {
      "op": "POP"
    },
    "6474": {
      "op": "POP"
    },
    "6475": {
      "jump": "o",
      "op": "JUMP"
    },
    "6476": {
      "op": "JUMPDEST"
    },
    "6477": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6484": {
      "op": "SHL"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6487": {
      "op": "MSTORE"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6492": {
      "op": "MSTORE"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6497": {
      "op": "REVERT"
    },
    "6498": {
      "op": "JUMPDEST"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6501": {
      "op": "MLOAD"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6504": {
      "op": "DUP2"
    },
    "6505": {
      "op": "ADD"
    },
    "6506": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6515": {
      "op": "DUP2"
    },
    "6516": {
      "op": "GT"
    },
    "6517": {
      "op": "DUP3"
    },
    "6518": {
      "op": "DUP3"
    },
    "6519": {
      "op": "LT"
    },
    "6520": {
      "op": "OR"
    },
    "6521": {
      "op": "ISZERO"
    },
    "6522": {
      "op": "PUSH2",
      "value": "0x1985"
    },
    "6525": {
      "op": "JUMPI"
    },
    "6526": {
      "op": "PUSH2",
      "value": "0x1985"
    },
    "6529": {
      "op": "PUSH2",
      "value": "0x194C"
    },
    "6532": {
      "jump": "i",
      "op": "JUMP"
    },
    "6533": {
      "op": "JUMPDEST"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6536": {
      "op": "MSTORE"
    },
    "6537": {
      "op": "SWAP1"
    },
    "6538": {
      "jump": "o",
      "op": "JUMP"
    },
    "6539": {
      "op": "JUMPDEST"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6542": {
      "op": "MLOAD"
    },
    "6543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6545": {
      "op": "DUP2"
    },
    "6546": {
      "op": "ADD"
    },
    "6547": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6556": {
      "op": "DUP2"
    },
    "6557": {
      "op": "GT"
    },
    "6558": {
      "op": "DUP3"
    },
    "6559": {
      "op": "DUP3"
    },
    "6560": {
      "op": "LT"
    },
    "6561": {
      "op": "OR"
    },
    "6562": {
      "op": "ISZERO"
    },
    "6563": {
      "op": "PUSH2",
      "value": "0x1985"
    },
    "6566": {
      "op": "JUMPI"
    },
    "6567": {
      "op": "PUSH2",
      "value": "0x1985"
    },
    "6570": {
      "op": "PUSH2",
      "value": "0x194C"
    },
    "6573": {
      "jump": "i",
      "op": "JUMP"
    },
    "6574": {
      "op": "JUMPDEST"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6577": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6586": {
      "op": "DUP1"
    },
    "6587": {
      "op": "DUP5"
    },
    "6588": {
      "op": "GT"
    },
    "6589": {
      "op": "ISZERO"
    },
    "6590": {
      "op": "PUSH2",
      "value": "0x19C9"
    },
    "6593": {
      "op": "JUMPI"
    },
    "6594": {
      "op": "PUSH2",
      "value": "0x19C9"
    },
    "6597": {
      "op": "PUSH2",
      "value": "0x194C"
    },
    "6600": {
      "jump": "i",
      "op": "JUMP"
    },
    "6601": {
      "op": "JUMPDEST"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6604": {
      "op": "MLOAD"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6607": {
      "op": "DUP6"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6611": {
      "op": "NOT"
    },
    "6612": {
      "op": "SWAP1"
    },
    "6613": {
      "op": "DUP2"
    },
    "6614": {
      "op": "AND"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "6617": {
      "op": "ADD"
    },
    "6618": {
      "op": "AND"
    },
    "6619": {
      "op": "DUP2"
    },
    "6620": {
      "op": "ADD"
    },
    "6621": {
      "op": "SWAP1"
    },
    "6622": {
      "op": "DUP3"
    },
    "6623": {
      "op": "DUP3"
    },
    "6624": {
      "op": "GT"
    },
    "6625": {
      "op": "DUP2"
    },
    "6626": {
      "op": "DUP4"
    },
    "6627": {
      "op": "LT"
    },
    "6628": {
      "op": "OR"
    },
    "6629": {
      "op": "ISZERO"
    },
    "6630": {
      "op": "PUSH2",
      "value": "0x19F1"
    },
    "6633": {
      "op": "JUMPI"
    },
    "6634": {
      "op": "PUSH2",
      "value": "0x19F1"
    },
    "6637": {
      "op": "PUSH2",
      "value": "0x194C"
    },
    "6640": {
      "jump": "i",
      "op": "JUMP"
    },
    "6641": {
      "op": "JUMPDEST"
    },
    "6642": {
      "op": "DUP2"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6645": {
      "op": "MSTORE"
    },
    "6646": {
      "op": "DUP1"
    },
    "6647": {
      "op": "SWAP4"
    },
    "6648": {
      "op": "POP"
    },
    "6649": {
      "op": "DUP6"
    },
    "6650": {
      "op": "DUP2"
    },
    "6651": {
      "op": "MSTORE"
    },
    "6652": {
      "op": "DUP7"
    },
    "6653": {
      "op": "DUP7"
    },
    "6654": {
      "op": "DUP7"
    },
    "6655": {
      "op": "ADD"
    },
    "6656": {
      "op": "GT"
    },
    "6657": {
      "op": "ISZERO"
    },
    "6658": {
      "op": "PUSH2",
      "value": "0x1A0A"
    },
    "6661": {
      "op": "JUMPI"
    },
    "6662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6664": {
      "op": "DUP1"
    },
    "6665": {
      "op": "REVERT"
    },
    "6666": {
      "op": "JUMPDEST"
    },
    "6667": {
      "op": "DUP6"
    },
    "6668": {
      "op": "DUP6"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6671": {
      "op": "DUP4"
    },
    "6672": {
      "op": "ADD"
    },
    "6673": {
      "op": "CALLDATACOPY"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6678": {
      "op": "DUP8"
    },
    "6679": {
      "op": "DUP4"
    },
    "6680": {
      "op": "ADD"
    },
    "6681": {
      "op": "ADD"
    },
    "6682": {
      "op": "MSTORE"
    },
    "6683": {
      "op": "POP"
    },
    "6684": {
      "op": "POP"
    },
    "6685": {
      "op": "POP"
    },
    "6686": {
      "op": "SWAP4"
    },
    "6687": {
      "op": "SWAP3"
    },
    "6688": {
      "op": "POP"
    },
    "6689": {
      "op": "POP"
    },
    "6690": {
      "op": "POP"
    },
    "6691": {
      "jump": "o",
      "op": "JUMP"
    },
    "6692": {
      "op": "JUMPDEST"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6695": {
      "op": "DUP3"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6698": {
      "op": "DUP4"
    },
    "6699": {
      "op": "ADD"
    },
    "6700": {
      "op": "SLT"
    },
    "6701": {
      "op": "PUSH2",
      "value": "0x1A35"
    },
    "6704": {
      "op": "JUMPI"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6707": {
      "op": "DUP1"
    },
    "6708": {
      "op": "REVERT"
    },
    "6709": {
      "op": "JUMPDEST"
    },
    "6710": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "6713": {
      "op": "DUP4"
    },
    "6714": {
      "op": "DUP4"
    },
    "6715": {
      "op": "CALLDATALOAD"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6718": {
      "op": "DUP6"
    },
    "6719": {
      "op": "ADD"
    },
    "6720": {
      "op": "PUSH2",
      "value": "0x19AE"
    },
    "6723": {
      "jump": "i",
      "op": "JUMP"
    },
    "6724": {
      "op": "JUMPDEST"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6729": {
      "op": "DUP3"
    },
    "6730": {
      "op": "DUP5"
    },
    "6731": {
      "op": "SUB"
    },
    "6732": {
      "op": "SLT"
    },
    "6733": {
      "op": "ISZERO"
    },
    "6734": {
      "op": "PUSH2",
      "value": "0x1A56"
    },
    "6737": {
      "op": "JUMPI"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6740": {
      "op": "DUP1"
    },
    "6741": {
      "op": "REVERT"
    },
    "6742": {
      "op": "JUMPDEST"
    },
    "6743": {
      "op": "PUSH2",
      "value": "0x1A5E"
    },
    "6746": {
      "op": "PUSH2",
      "value": "0x1962"
    },
    "6749": {
      "jump": "i",
      "op": "JUMP"
    },
    "6750": {
      "op": "JUMPDEST"
    },
    "6751": {
      "op": "SWAP1"
    },
    "6752": {
      "op": "POP"
    },
    "6753": {
      "op": "DUP2"
    },
    "6754": {
      "op": "CALLDATALOAD"
    },
    "6755": {
      "op": "DUP2"
    },
    "6756": {
      "op": "MSTORE"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6759": {
      "op": "DUP3"
    },
    "6760": {
      "op": "ADD"
    },
    "6761": {
      "op": "CALLDATALOAD"
    },
    "6762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6764": {
      "op": "DUP3"
    },
    "6765": {
      "op": "ADD"
    },
    "6766": {
      "op": "MSTORE"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6769": {
      "op": "DUP3"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "CALLDATALOAD"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6774": {
      "op": "DUP3"
    },
    "6775": {
      "op": "ADD"
    },
    "6776": {
      "op": "MSTORE"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6779": {
      "op": "DUP3"
    },
    "6780": {
      "op": "ADD"
    },
    "6781": {
      "op": "CALLDATALOAD"
    },
    "6782": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6791": {
      "op": "DUP1"
    },
    "6792": {
      "op": "DUP3"
    },
    "6793": {
      "op": "GT"
    },
    "6794": {
      "op": "ISZERO"
    },
    "6795": {
      "op": "PUSH2",
      "value": "0x1A93"
    },
    "6798": {
      "op": "JUMPI"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6801": {
      "op": "DUP1"
    },
    "6802": {
      "op": "REVERT"
    },
    "6803": {
      "op": "JUMPDEST"
    },
    "6804": {
      "op": "SWAP1"
    },
    "6805": {
      "op": "DUP4"
    },
    "6806": {
      "op": "ADD"
    },
    "6807": {
      "op": "SWAP1"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6810": {
      "op": "DUP3"
    },
    "6811": {
      "op": "DUP7"
    },
    "6812": {
      "op": "SUB"
    },
    "6813": {
      "op": "SLT"
    },
    "6814": {
      "op": "ISZERO"
    },
    "6815": {
      "op": "PUSH2",
      "value": "0x1AA7"
    },
    "6818": {
      "op": "JUMPI"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6821": {
      "op": "DUP1"
    },
    "6822": {
      "op": "REVERT"
    },
    "6823": {
      "op": "JUMPDEST"
    },
    "6824": {
      "op": "PUSH2",
      "value": "0x1AAF"
    },
    "6827": {
      "op": "PUSH2",
      "value": "0x198B"
    },
    "6830": {
      "jump": "i",
      "op": "JUMP"
    },
    "6831": {
      "op": "JUMPDEST"
    },
    "6832": {
      "op": "DUP3"
    },
    "6833": {
      "op": "CALLDATALOAD"
    },
    "6834": {
      "op": "DUP2"
    },
    "6835": {
      "op": "MSTORE"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6838": {
      "op": "DUP4"
    },
    "6839": {
      "op": "ADD"
    },
    "6840": {
      "op": "CALLDATALOAD"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6843": {
      "op": "DUP3"
    },
    "6844": {
      "op": "ADD"
    },
    "6845": {
      "op": "MSTORE"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6848": {
      "op": "DUP4"
    },
    "6849": {
      "op": "ADD"
    },
    "6850": {
      "op": "CALLDATALOAD"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6853": {
      "op": "DUP3"
    },
    "6854": {
      "op": "ADD"
    },
    "6855": {
      "op": "MSTORE"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6858": {
      "op": "DUP4"
    },
    "6859": {
      "op": "ADD"
    },
    "6860": {
      "op": "CALLDATALOAD"
    },
    "6861": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6863": {
      "op": "DUP3"
    },
    "6864": {
      "op": "ADD"
    },
    "6865": {
      "op": "MSTORE"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6868": {
      "op": "DUP4"
    },
    "6869": {
      "op": "ADD"
    },
    "6870": {
      "op": "CALLDATALOAD"
    },
    "6871": {
      "op": "DUP3"
    },
    "6872": {
      "op": "DUP2"
    },
    "6873": {
      "op": "GT"
    },
    "6874": {
      "op": "ISZERO"
    },
    "6875": {
      "op": "PUSH2",
      "value": "0x1AE3"
    },
    "6878": {
      "op": "JUMPI"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6881": {
      "op": "DUP1"
    },
    "6882": {
      "op": "REVERT"
    },
    "6883": {
      "op": "JUMPDEST"
    },
    "6884": {
      "op": "PUSH2",
      "value": "0x1AEF"
    },
    "6887": {
      "op": "DUP8"
    },
    "6888": {
      "op": "DUP3"
    },
    "6889": {
      "op": "DUP7"
    },
    "6890": {
      "op": "ADD"
    },
    "6891": {
      "op": "PUSH2",
      "value": "0x1A24"
    },
    "6894": {
      "jump": "i",
      "op": "JUMP"
    },
    "6895": {
      "op": "JUMPDEST"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6898": {
      "op": "DUP4"
    },
    "6899": {
      "op": "ADD"
    },
    "6900": {
      "op": "MSTORE"
    },
    "6901": {
      "op": "POP"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6904": {
      "op": "DUP5"
    },
    "6905": {
      "op": "ADD"
    },
    "6906": {
      "op": "MSTORE"
    },
    "6907": {
      "op": "POP"
    },
    "6908": {
      "op": "SWAP1"
    },
    "6909": {
      "op": "SWAP4"
    },
    "6910": {
      "op": "SWAP3"
    },
    "6911": {
      "op": "POP"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "op": "POP"
    },
    "6914": {
      "jump": "o",
      "op": "JUMP"
    },
    "6915": {
      "op": "JUMPDEST"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6918": {
      "op": "DUP1"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6921": {
      "op": "DUP4"
    },
    "6922": {
      "op": "DUP6"
    },
    "6923": {
      "op": "SUB"
    },
    "6924": {
      "op": "SLT"
    },
    "6925": {
      "op": "ISZERO"
    },
    "6926": {
      "op": "PUSH2",
      "value": "0x1B16"
    },
    "6929": {
      "op": "JUMPI"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6932": {
      "op": "DUP1"
    },
    "6933": {
      "op": "REVERT"
    },
    "6934": {
      "op": "JUMPDEST"
    },
    "6935": {
      "op": "DUP3"
    },
    "6936": {
      "op": "CALLDATALOAD"
    },
    "6937": {
      "op": "SWAP2"
    },
    "6938": {
      "op": "POP"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6941": {
      "op": "DUP4"
    },
    "6942": {
      "op": "ADD"
    },
    "6943": {
      "op": "CALLDATALOAD"
    },
    "6944": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6953": {
      "op": "DUP2"
    },
    "6954": {
      "op": "GT"
    },
    "6955": {
      "op": "ISZERO"
    },
    "6956": {
      "op": "PUSH2",
      "value": "0x1B34"
    },
    "6959": {
      "op": "JUMPI"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6962": {
      "op": "DUP1"
    },
    "6963": {
      "op": "REVERT"
    },
    "6964": {
      "op": "JUMPDEST"
    },
    "6965": {
      "op": "PUSH2",
      "value": "0x1B40"
    },
    "6968": {
      "op": "DUP6"
    },
    "6969": {
      "op": "DUP3"
    },
    "6970": {
      "op": "DUP7"
    },
    "6971": {
      "op": "ADD"
    },
    "6972": {
      "op": "PUSH2",
      "value": "0x1A44"
    },
    "6975": {
      "jump": "i",
      "op": "JUMP"
    },
    "6976": {
      "op": "JUMPDEST"
    },
    "6977": {
      "op": "SWAP2"
    },
    "6978": {
      "op": "POP"
    },
    "6979": {
      "op": "POP"
    },
    "6980": {
      "op": "SWAP3"
    },
    "6981": {
      "op": "POP"
    },
    "6982": {
      "op": "SWAP3"
    },
    "6983": {
      "op": "SWAP1"
    },
    "6984": {
      "op": "POP"
    },
    "6985": {
      "jump": "o",
      "op": "JUMP"
    },
    "6986": {
      "op": "JUMPDEST"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6989": {
      "op": "DUP1"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6992": {
      "op": "DUP4"
    },
    "6993": {
      "op": "DUP6"
    },
    "6994": {
      "op": "SUB"
    },
    "6995": {
      "op": "SLT"
    },
    "6996": {
      "op": "ISZERO"
    },
    "6997": {
      "op": "PUSH2",
      "value": "0x1B5D"
    },
    "7000": {
      "op": "JUMPI"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7003": {
      "op": "DUP1"
    },
    "7004": {
      "op": "REVERT"
    },
    "7005": {
      "op": "JUMPDEST"
    },
    "7006": {
      "op": "DUP3"
    },
    "7007": {
      "op": "CALLDATALOAD"
    },
    "7008": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7017": {
      "op": "DUP2"
    },
    "7018": {
      "op": "GT"
    },
    "7019": {
      "op": "ISZERO"
    },
    "7020": {
      "op": "PUSH2",
      "value": "0x1B74"
    },
    "7023": {
      "op": "JUMPI"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7026": {
      "op": "DUP1"
    },
    "7027": {
      "op": "REVERT"
    },
    "7028": {
      "op": "JUMPDEST"
    },
    "7029": {
      "op": "PUSH2",
      "value": "0x1B80"
    },
    "7032": {
      "op": "DUP6"
    },
    "7033": {
      "op": "DUP3"
    },
    "7034": {
      "op": "DUP7"
    },
    "7035": {
      "op": "ADD"
    },
    "7036": {
      "op": "PUSH2",
      "value": "0x1A24"
    },
    "7039": {
      "jump": "i",
      "op": "JUMP"
    },
    "7040": {
      "op": "JUMPDEST"
    },
    "7041": {
      "op": "SWAP3"
    },
    "7042": {
      "op": "POP"
    },
    "7043": {
      "op": "POP"
    },
    "7044": {
      "op": "PUSH2",
      "value": "0x1B8F"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7049": {
      "op": "DUP5"
    },
    "7050": {
      "op": "ADD"
    },
    "7051": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7054": {
      "jump": "i",
      "op": "JUMP"
    },
    "7055": {
      "op": "JUMPDEST"
    },
    "7056": {
      "op": "SWAP1"
    },
    "7057": {
      "op": "POP"
    },
    "7058": {
      "op": "SWAP3"
    },
    "7059": {
      "op": "POP"
    },
    "7060": {
      "op": "SWAP3"
    },
    "7061": {
      "op": "SWAP1"
    },
    "7062": {
      "op": "POP"
    },
    "7063": {
      "jump": "o",
      "op": "JUMP"
    },
    "7064": {
      "op": "JUMPDEST"
    },
    "7065": {
      "op": "DUP1"
    },
    "7066": {
      "op": "ISZERO"
    },
    "7067": {
      "op": "ISZERO"
    },
    "7068": {
      "op": "DUP2"
    },
    "7069": {
      "op": "EQ"
    },
    "7070": {
      "op": "PUSH2",
      "value": "0x81E"
    },
    "7073": {
      "op": "JUMPI"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7076": {
      "op": "DUP1"
    },
    "7077": {
      "op": "REVERT"
    },
    "7078": {
      "op": "JUMPDEST"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7081": {
      "op": "DUP1"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7084": {
      "op": "DUP4"
    },
    "7085": {
      "op": "DUP6"
    },
    "7086": {
      "op": "SUB"
    },
    "7087": {
      "op": "SLT"
    },
    "7088": {
      "op": "ISZERO"
    },
    "7089": {
      "op": "PUSH2",
      "value": "0x1BB9"
    },
    "7092": {
      "op": "JUMPI"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7095": {
      "op": "DUP1"
    },
    "7096": {
      "op": "REVERT"
    },
    "7097": {
      "op": "JUMPDEST"
    },
    "7098": {
      "op": "PUSH2",
      "value": "0x1BC2"
    },
    "7101": {
      "op": "DUP4"
    },
    "7102": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7105": {
      "jump": "i",
      "op": "JUMP"
    },
    "7106": {
      "op": "JUMPDEST"
    },
    "7107": {
      "op": "SWAP2"
    },
    "7108": {
      "op": "POP"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7111": {
      "op": "DUP4"
    },
    "7112": {
      "op": "ADD"
    },
    "7113": {
      "op": "CALLDATALOAD"
    },
    "7114": {
      "op": "PUSH2",
      "value": "0x1BD2"
    },
    "7117": {
      "op": "DUP2"
    },
    "7118": {
      "op": "PUSH2",
      "value": "0x1B98"
    },
    "7121": {
      "jump": "i",
      "op": "JUMP"
    },
    "7122": {
      "op": "JUMPDEST"
    },
    "7123": {
      "op": "DUP1"
    },
    "7124": {
      "op": "SWAP2"
    },
    "7125": {
      "op": "POP"
    },
    "7126": {
      "op": "POP"
    },
    "7127": {
      "op": "SWAP3"
    },
    "7128": {
      "op": "POP"
    },
    "7129": {
      "op": "SWAP3"
    },
    "7130": {
      "op": "SWAP1"
    },
    "7131": {
      "op": "POP"
    },
    "7132": {
      "jump": "o",
      "op": "JUMP"
    },
    "7133": {
      "op": "JUMPDEST"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7136": {
      "op": "DUP1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7139": {
      "op": "DUP4"
    },
    "7140": {
      "op": "DUP6"
    },
    "7141": {
      "op": "SUB"
    },
    "7142": {
      "op": "SLT"
    },
    "7143": {
      "op": "ISZERO"
    },
    "7144": {
      "op": "PUSH2",
      "value": "0x1BF0"
    },
    "7147": {
      "op": "JUMPI"
    },
    "7148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7150": {
      "op": "DUP1"
    },
    "7151": {
      "op": "REVERT"
    },
    "7152": {
      "op": "JUMPDEST"
    },
    "7153": {
      "op": "PUSH2",
      "value": "0x1BF9"
    },
    "7156": {
      "op": "DUP4"
    },
    "7157": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7160": {
      "jump": "i",
      "op": "JUMP"
    },
    "7161": {
      "op": "JUMPDEST"
    },
    "7162": {
      "op": "SWAP2"
    },
    "7163": {
      "op": "POP"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7166": {
      "op": "DUP4"
    },
    "7167": {
      "op": "ADD"
    },
    "7168": {
      "op": "CALLDATALOAD"
    },
    "7169": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7178": {
      "op": "DUP2"
    },
    "7179": {
      "op": "GT"
    },
    "7180": {
      "op": "ISZERO"
    },
    "7181": {
      "op": "PUSH2",
      "value": "0x1B34"
    },
    "7184": {
      "op": "JUMPI"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7187": {
      "op": "DUP1"
    },
    "7188": {
      "op": "REVERT"
    },
    "7189": {
      "op": "JUMPDEST"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7192": {
      "op": "DUP1"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7195": {
      "op": "DUP1"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7198": {
      "op": "DUP6"
    },
    "7199": {
      "op": "DUP8"
    },
    "7200": {
      "op": "SUB"
    },
    "7201": {
      "op": "SLT"
    },
    "7202": {
      "op": "ISZERO"
    },
    "7203": {
      "op": "PUSH2",
      "value": "0x1C2B"
    },
    "7206": {
      "op": "JUMPI"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7209": {
      "op": "DUP1"
    },
    "7210": {
      "op": "REVERT"
    },
    "7211": {
      "op": "JUMPDEST"
    },
    "7212": {
      "op": "PUSH2",
      "value": "0x1C34"
    },
    "7215": {
      "op": "DUP6"
    },
    "7216": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7219": {
      "jump": "i",
      "op": "JUMP"
    },
    "7220": {
      "op": "JUMPDEST"
    },
    "7221": {
      "op": "SWAP4"
    },
    "7222": {
      "op": "POP"
    },
    "7223": {
      "op": "PUSH2",
      "value": "0x1C42"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7228": {
      "op": "DUP7"
    },
    "7229": {
      "op": "ADD"
    },
    "7230": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7233": {
      "jump": "i",
      "op": "JUMP"
    },
    "7234": {
      "op": "JUMPDEST"
    },
    "7235": {
      "op": "SWAP3"
    },
    "7236": {
      "op": "POP"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7239": {
      "op": "DUP6"
    },
    "7240": {
      "op": "ADD"
    },
    "7241": {
      "op": "CALLDATALOAD"
    },
    "7242": {
      "op": "SWAP2"
    },
    "7243": {
      "op": "POP"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7246": {
      "op": "DUP6"
    },
    "7247": {
      "op": "ADD"
    },
    "7248": {
      "op": "CALLDATALOAD"
    },
    "7249": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7258": {
      "op": "DUP2"
    },
    "7259": {
      "op": "GT"
    },
    "7260": {
      "op": "ISZERO"
    },
    "7261": {
      "op": "PUSH2",
      "value": "0x1C65"
    },
    "7264": {
      "op": "JUMPI"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7267": {
      "op": "DUP1"
    },
    "7268": {
      "op": "REVERT"
    },
    "7269": {
      "op": "JUMPDEST"
    },
    "7270": {
      "op": "DUP6"
    },
    "7271": {
      "op": "ADD"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7274": {
      "op": "DUP2"
    },
    "7275": {
      "op": "ADD"
    },
    "7276": {
      "op": "DUP8"
    },
    "7277": {
      "op": "SGT"
    },
    "7278": {
      "op": "PUSH2",
      "value": "0x1C76"
    },
    "7281": {
      "op": "JUMPI"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7284": {
      "op": "DUP1"
    },
    "7285": {
      "op": "REVERT"
    },
    "7286": {
      "op": "JUMPDEST"
    },
    "7287": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7290": {
      "op": "DUP8"
    },
    "7291": {
      "op": "DUP3"
    },
    "7292": {
      "op": "CALLDATALOAD"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7295": {
      "op": "DUP5"
    },
    "7296": {
      "op": "ADD"
    },
    "7297": {
      "op": "PUSH2",
      "value": "0x19AE"
    },
    "7300": {
      "jump": "i",
      "op": "JUMP"
    },
    "7301": {
      "op": "JUMPDEST"
    },
    "7302": {
      "op": "SWAP2"
    },
    "7303": {
      "op": "POP"
    },
    "7304": {
      "op": "POP"
    },
    "7305": {
      "op": "SWAP3"
    },
    "7306": {
      "op": "SWAP6"
    },
    "7307": {
      "op": "SWAP2"
    },
    "7308": {
      "op": "SWAP5"
    },
    "7309": {
      "op": "POP"
    },
    "7310": {
      "op": "SWAP3"
    },
    "7311": {
      "op": "POP"
    },
    "7312": {
      "jump": "o",
      "op": "JUMP"
    },
    "7313": {
      "op": "JUMPDEST"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7316": {
      "op": "DUP1"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7319": {
      "op": "DUP4"
    },
    "7320": {
      "op": "DUP6"
    },
    "7321": {
      "op": "SUB"
    },
    "7322": {
      "op": "SLT"
    },
    "7323": {
      "op": "ISZERO"
    },
    "7324": {
      "op": "PUSH2",
      "value": "0x1CA4"
    },
    "7327": {
      "op": "JUMPI"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7330": {
      "op": "DUP1"
    },
    "7331": {
      "op": "REVERT"
    },
    "7332": {
      "op": "JUMPDEST"
    },
    "7333": {
      "op": "PUSH2",
      "value": "0x1CAD"
    },
    "7336": {
      "op": "DUP4"
    },
    "7337": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7340": {
      "jump": "i",
      "op": "JUMP"
    },
    "7341": {
      "op": "JUMPDEST"
    },
    "7342": {
      "op": "SWAP2"
    },
    "7343": {
      "op": "POP"
    },
    "7344": {
      "op": "PUSH2",
      "value": "0x1B8F"
    },
    "7347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7349": {
      "op": "DUP5"
    },
    "7350": {
      "op": "ADD"
    },
    "7351": {
      "op": "PUSH2",
      "value": "0x1795"
    },
    "7354": {
      "jump": "i",
      "op": "JUMP"
    },
    "7355": {
      "op": "JUMPDEST"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7358": {
      "op": "DUP2"
    },
    "7359": {
      "op": "MSTORE"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7362": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7367": {
      "op": "DUP4"
    },
    "7368": {
      "op": "ADD"
    },
    "7369": {
      "op": "DUP5"
    },
    "7370": {
      "op": "PUSH2",
      "value": "0x1882"
    },
    "7373": {
      "jump": "i",
      "op": "JUMP"
    },
    "7374": {
      "op": "JUMPDEST"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7377": {
      "op": "DUP2"
    },
    "7378": {
      "op": "DUP2"
    },
    "7379": {
      "op": "SHR"
    },
    "7380": {
      "op": "SWAP1"
    },
    "7381": {
      "op": "DUP3"
    },
    "7382": {
      "op": "AND"
    },
    "7383": {
      "op": "DUP1"
    },
    "7384": {
      "op": "PUSH2",
      "value": "0x1CE2"
    },
    "7387": {
      "op": "JUMPI"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7390": {
      "op": "DUP3"
    },
    "7391": {
      "op": "AND"
    },
    "7392": {
      "op": "SWAP2"
    },
    "7393": {
      "op": "POP"
    },
    "7394": {
      "op": "JUMPDEST"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7397": {
      "op": "DUP3"
    },
    "7398": {
      "op": "LT"
    },
    "7399": {
      "op": "DUP2"
    },
    "7400": {
      "op": "SUB"
    },
    "7401": {
      "op": "PUSH2",
      "value": "0x1D02"
    },
    "7404": {
      "op": "JUMPI"
    },
    "7405": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7412": {
      "op": "SHL"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7415": {
      "op": "MSTORE"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7420": {
      "op": "MSTORE"
    },
    "7421": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7425": {
      "op": "REVERT"
    },
    "7426": {
      "op": "JUMPDEST"
    },
    "7427": {
      "op": "POP"
    },
    "7428": {
      "op": "SWAP2"
    },
    "7429": {
      "op": "SWAP1"
    },
    "7430": {
      "op": "POP"
    },
    "7431": {
      "jump": "o",
      "op": "JUMP"
    },
    "7432": {
      "op": "JUMPDEST"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7435": {
      "op": "DUP1"
    },
    "7436": {
      "op": "DUP3"
    },
    "7437": {
      "op": "MSTORE"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "7440": {
      "op": "SWAP1"
    },
    "7441": {
      "op": "DUP3"
    },
    "7442": {
      "op": "ADD"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7479": {
      "op": "DUP3"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "MSTORE"
    },
    "7482": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "7502": {
      "op": "SHL"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7505": {
      "op": "DUP3"
    },
    "7506": {
      "op": "ADD"
    },
    "7507": {
      "op": "MSTORE"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7510": {
      "op": "ADD"
    },
    "7511": {
      "op": "SWAP1"
    },
    "7512": {
      "jump": "o",
      "op": "JUMP"
    },
    "7513": {
      "op": "JUMPDEST"
    },
    "7514": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7521": {
      "op": "SHL"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7524": {
      "op": "MSTORE"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7529": {
      "op": "MSTORE"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7534": {
      "op": "REVERT"
    },
    "7535": {
      "op": "JUMPDEST"
    },
    "7536": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7543": {
      "op": "SHL"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7546": {
      "op": "MSTORE"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7551": {
      "op": "MSTORE"
    },
    "7552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7556": {
      "op": "REVERT"
    },
    "7557": {
      "op": "JUMPDEST"
    },
    "7558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "DUP3"
    },
    "7563": {
      "op": "ADD"
    },
    "7564": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "7567": {
      "op": "JUMPI"
    },
    "7568": {
      "op": "PUSH2",
      "value": "0x1D97"
    },
    "7571": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7574": {
      "jump": "i",
      "op": "JUMP"
    },
    "7575": {
      "op": "JUMPDEST"
    },
    "7576": {
      "op": "POP"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7579": {
      "op": "ADD"
    },
    "7580": {
      "op": "SWAP1"
    },
    "7581": {
      "jump": "o",
      "op": "JUMP"
    },
    "7582": {
      "op": "JUMPDEST"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7585": {
      "op": "DUP3"
    },
    "7586": {
      "op": "NOT"
    },
    "7587": {
      "op": "DUP3"
    },
    "7588": {
      "op": "GT"
    },
    "7589": {
      "op": "ISZERO"
    },
    "7590": {
      "op": "PUSH2",
      "value": "0x1DB1"
    },
    "7593": {
      "op": "JUMPI"
    },
    "7594": {
      "op": "PUSH2",
      "value": "0x1DB1"
    },
    "7597": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7600": {
      "jump": "i",
      "op": "JUMP"
    },
    "7601": {
      "op": "JUMPDEST"
    },
    "7602": {
      "op": "POP"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "op": "SWAP1"
    },
    "7605": {
      "jump": "o",
      "op": "JUMP"
    },
    "7606": {
      "op": "JUMPDEST"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7609": {
      "op": "DUP2"
    },
    "7610": {
      "op": "MSTORE"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7613": {
      "op": "PUSH2",
      "value": "0x1DC9"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7618": {
      "op": "DUP4"
    },
    "7619": {
      "op": "ADD"
    },
    "7620": {
      "op": "DUP6"
    },
    "7621": {
      "op": "PUSH2",
      "value": "0x171C"
    },
    "7624": {
      "jump": "i",
      "op": "JUMP"
    },
    "7625": {
      "op": "JUMPDEST"
    },
    "7626": {
      "op": "SWAP1"
    },
    "7627": {
      "op": "POP"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "DUP1"
    },
    "7631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7633": {
      "op": "SHL"
    },
    "7634": {
      "op": "SUB"
    },
    "7635": {
      "op": "DUP4"
    },
    "7636": {
      "op": "AND"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7639": {
      "op": "DUP4"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "MSTORE"
    },
    "7642": {
      "op": "SWAP4"
    },
    "7643": {
      "op": "SWAP3"
    },
    "7644": {
      "op": "POP"
    },
    "7645": {
      "op": "POP"
    },
    "7646": {
      "op": "POP"
    },
    "7647": {
      "jump": "o",
      "op": "JUMP"
    },
    "7648": {
      "op": "JUMPDEST"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7653": {
      "op": "DUP3"
    },
    "7654": {
      "op": "DUP5"
    },
    "7655": {
      "op": "SUB"
    },
    "7656": {
      "op": "SLT"
    },
    "7657": {
      "op": "ISZERO"
    },
    "7658": {
      "op": "PUSH2",
      "value": "0x1DF2"
    },
    "7661": {
      "op": "JUMPI"
    },
    "7662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7664": {
      "op": "DUP1"
    },
    "7665": {
      "op": "REVERT"
    },
    "7666": {
      "op": "JUMPDEST"
    },
    "7667": {
      "op": "DUP2"
    },
    "7668": {
      "op": "MLOAD"
    },
    "7669": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "7672": {
      "op": "DUP2"
    },
    "7673": {
      "op": "PUSH2",
      "value": "0x1B98"
    },
    "7676": {
      "jump": "i",
      "op": "JUMP"
    },
    "7677": {
      "op": "JUMPDEST"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7684": {
      "op": "SHL"
    },
    "7685": {
      "op": "SUB"
    },
    "7686": {
      "op": "DUP6"
    },
    "7687": {
      "op": "AND"
    },
    "7688": {
      "op": "DUP2"
    },
    "7689": {
      "op": "MSTORE"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7692": {
      "op": "DUP1"
    },
    "7693": {
      "op": "DUP3"
    },
    "7694": {
      "op": "ADD"
    },
    "7695": {
      "op": "DUP6"
    },
    "7696": {
      "op": "SWAP1"
    },
    "7697": {
      "op": "MSTORE"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7700": {
      "op": "DUP3"
    },
    "7701": {
      "op": "ADD"
    },
    "7702": {
      "op": "DUP5"
    },
    "7703": {
      "op": "SWAP1"
    },
    "7704": {
      "op": "MSTORE"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7709": {
      "op": "DUP4"
    },
    "7710": {
      "op": "ADD"
    },
    "7711": {
      "op": "DUP2"
    },
    "7712": {
      "op": "SWAP1"
    },
    "7713": {
      "op": "MSTORE"
    },
    "7714": {
      "op": "DUP3"
    },
    "7715": {
      "op": "ADD"
    },
    "7716": {
      "op": "DUP2"
    },
    "7717": {
      "op": "SWAP1"
    },
    "7718": {
      "op": "MSTORE"
    },
    "7719": {
      "op": "DUP3"
    },
    "7720": {
      "op": "SLOAD"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7723": {
      "op": "DUP4"
    },
    "7724": {
      "op": "ADD"
    },
    "7725": {
      "op": "DUP2"
    },
    "7726": {
      "op": "SWAP1"
    },
    "7727": {
      "op": "MSTORE"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7730": {
      "op": "DUP5"
    },
    "7731": {
      "op": "DUP2"
    },
    "7732": {
      "op": "MSTORE"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "DUP2"
    },
    "7735": {
      "op": "KECCAK256"
    },
    "7736": {
      "op": "SWAP1"
    },
    "7737": {
      "op": "SWAP3"
    },
    "7738": {
      "op": "SWAP2"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7741": {
      "op": "DUP6"
    },
    "7742": {
      "op": "ADD"
    },
    "7743": {
      "op": "SWAP1"
    },
    "7744": {
      "op": "DUP5"
    },
    "7745": {
      "op": "JUMPDEST"
    },
    "7746": {
      "op": "DUP2"
    },
    "7747": {
      "op": "DUP2"
    },
    "7748": {
      "op": "LT"
    },
    "7749": {
      "op": "ISZERO"
    },
    "7750": {
      "op": "PUSH2",
      "value": "0x1E5D"
    },
    "7753": {
      "op": "JUMPI"
    },
    "7754": {
      "op": "DUP4"
    },
    "7755": {
      "op": "SLOAD"
    },
    "7756": {
      "op": "DUP4"
    },
    "7757": {
      "op": "MSTORE"
    },
    "7758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7760": {
      "op": "SWAP4"
    },
    "7761": {
      "op": "DUP5"
    },
    "7762": {
      "op": "ADD"
    },
    "7763": {
      "op": "SWAP4"
    },
    "7764": {
      "op": "SWAP3"
    },
    "7765": {
      "op": "DUP6"
    },
    "7766": {
      "op": "ADD"
    },
    "7767": {
      "op": "SWAP3"
    },
    "7768": {
      "op": "ADD"
    },
    "7769": {
      "op": "PUSH2",
      "value": "0x1E41"
    },
    "7772": {
      "op": "JUMP"
    },
    "7773": {
      "op": "JUMPDEST"
    },
    "7774": {
      "op": "POP"
    },
    "7775": {
      "op": "SWAP1"
    },
    "7776": {
      "op": "SWAP10"
    },
    "7777": {
      "op": "SWAP9"
    },
    "7778": {
      "op": "POP"
    },
    "7779": {
      "op": "POP"
    },
    "7780": {
      "op": "POP"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "op": "POP"
    },
    "7783": {
      "op": "POP"
    },
    "7784": {
      "op": "POP"
    },
    "7785": {
      "op": "POP"
    },
    "7786": {
      "op": "POP"
    },
    "7787": {
      "jump": "o",
      "op": "JUMP"
    },
    "7788": {
      "op": "JUMPDEST"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7791": {
      "op": "DUP3"
    },
    "7792": {
      "op": "DUP3"
    },
    "7793": {
      "op": "LT"
    },
    "7794": {
      "op": "ISZERO"
    },
    "7795": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7798": {
      "op": "JUMPI"
    },
    "7799": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7802": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7805": {
      "jump": "i",
      "op": "JUMP"
    },
    "7806": {
      "op": "JUMPDEST"
    },
    "7807": {
      "op": "POP"
    },
    "7808": {
      "op": "SUB"
    },
    "7809": {
      "op": "SWAP1"
    },
    "7810": {
      "jump": "o",
      "op": "JUMP"
    },
    "7811": {
      "op": "JUMPDEST"
    },
    "7812": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7819": {
      "op": "SHL"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7822": {
      "op": "MSTORE"
    },
    "7823": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7827": {
      "op": "MSTORE"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7832": {
      "op": "REVERT"
    },
    "7833": {
      "op": "JUMPDEST"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7836": {
      "op": "DUP2"
    },
    "7837": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7840": {
      "op": "JUMPI"
    },
    "7841": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7844": {
      "op": "PUSH2",
      "value": "0x1D6F"
    },
    "7847": {
      "jump": "i",
      "op": "JUMP"
    },
    "7848": {
      "op": "JUMPDEST"
    },
    "7849": {
      "op": "POP"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7852": {
      "op": "NOT"
    },
    "7853": {
      "op": "ADD"
    },
    "7854": {
      "op": "SWAP1"
    },
    "7855": {
      "jump": "o",
      "op": "JUMP"
    },
    "7856": {
      "op": "JUMPDEST"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7859": {
      "op": "DUP1"
    },
    "7860": {
      "op": "DUP3"
    },
    "7861": {
      "op": "MSTORE"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "7864": {
      "op": "SWAP1"
    },
    "7865": {
      "op": "DUP3"
    },
    "7866": {
      "op": "ADD"
    },
    "7867": {
      "op": "MSTORE"
    },
    "7868": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "7901": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7903": {
      "op": "DUP3"
    },
    "7904": {
      "op": "ADD"
    },
    "7905": {
      "op": "MSTORE"
    },
    "7906": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "7927": {
      "op": "SHL"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7930": {
      "op": "DUP3"
    },
    "7931": {
      "op": "ADD"
    },
    "7932": {
      "op": "MSTORE"
    },
    "7933": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7935": {
      "op": "ADD"
    },
    "7936": {
      "op": "SWAP1"
    },
    "7937": {
      "jump": "o",
      "op": "JUMP"
    },
    "7938": {
      "op": "JUMPDEST"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7945": {
      "op": "SHL"
    },
    "7946": {
      "op": "SUB"
    },
    "7947": {
      "op": "DUP6"
    },
    "7948": {
      "op": "DUP2"
    },
    "7949": {
      "op": "AND"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "MSTORE"
    },
    "7952": {
      "op": "DUP5"
    },
    "7953": {
      "op": "AND"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7956": {
      "op": "DUP3"
    },
    "7957": {
      "op": "ADD"
    },
    "7958": {
      "op": "MSTORE"
    },
    "7959": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7961": {
      "op": "DUP2"
    },
    "7962": {
      "op": "ADD"
    },
    "7963": {
      "op": "DUP4"
    },
    "7964": {
      "op": "SWAP1"
    },
    "7965": {
      "op": "MSTORE"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7970": {
      "op": "DUP3"
    },
    "7971": {
      "op": "ADD"
    },
    "7972": {
      "op": "DUP2"
    },
    "7973": {
      "op": "SWAP1"
    },
    "7974": {
      "op": "MSTORE"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7977": {
      "op": "SWAP1"
    },
    "7978": {
      "op": "PUSH2",
      "value": "0x1F35"
    },
    "7981": {
      "op": "SWAP1"
    },
    "7982": {
      "op": "DUP4"
    },
    "7983": {
      "op": "ADD"
    },
    "7984": {
      "op": "DUP5"
    },
    "7985": {
      "op": "PUSH2",
      "value": "0x171C"
    },
    "7988": {
      "jump": "i",
      "op": "JUMP"
    },
    "7989": {
      "op": "JUMPDEST"
    },
    "7990": {
      "op": "SWAP7"
    },
    "7991": {
      "op": "SWAP6"
    },
    "7992": {
      "op": "POP"
    },
    "7993": {
      "op": "POP"
    },
    "7994": {
      "op": "POP"
    },
    "7995": {
      "op": "POP"
    },
    "7996": {
      "op": "POP"
    },
    "7997": {
      "op": "POP"
    },
    "7998": {
      "jump": "o",
      "op": "JUMP"
    },
    "7999": {
      "op": "JUMPDEST"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8004": {
      "op": "DUP3"
    },
    "8005": {
      "op": "DUP5"
    },
    "8006": {
      "op": "SUB"
    },
    "8007": {
      "op": "SLT"
    },
    "8008": {
      "op": "ISZERO"
    },
    "8009": {
      "op": "PUSH2",
      "value": "0x1F51"
    },
    "8012": {
      "op": "JUMPI"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8015": {
      "op": "DUP1"
    },
    "8016": {
      "op": "REVERT"
    },
    "8017": {
      "op": "JUMPDEST"
    },
    "8018": {
      "op": "DUP2"
    },
    "8019": {
      "op": "MLOAD"
    },
    "8020": {
      "op": "PUSH2",
      "value": "0xA74"
    },
    "8023": {
      "op": "DUP2"
    },
    "8024": {
      "op": "PUSH2",
      "value": "0x16E9"
    },
    "8027": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "59b6ded386cbbac8bfa3f1e96608b3b66692e2ad",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport {IDepositNFT} from \"interfaces/model/portfolio/token/IDepositNFT.sol\";\nimport {IERC721Receiver} from \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n// import {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {AccessControlAdapter} from \"contracts/utils/access/AccessControlAdapter.sol\";\nimport {NFTOwnerState,NFTState, NFTContractState} from \"contracts/model/portfolio/token/Structs.sol\";\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\n\n\ncontract DepositNFT is Context, ERC165, IDepositNFT, AccessControlAdapter {\n    using Address for address;\n    using Strings for uint256;\n    // Token name\n    NFTContractState public state; \n    string public name;\n    // Token symbol\n    string public symbol;\n\n    uint256 nextTokenId = 0;\n\n    mapping(address=>NFTOwnerState) private  _ownerStates;\n    mapping(uint256=>NFTState) private  _tokenStates;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    // mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory _name, string memory _symbol) {\n        name = _name;\n        symbol = _symbol;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n\n    function ownerTokenCount(address owner) public override view returns (uint256) {\n        return _ownerStates[owner].tokenIds.length;\n    }\n\n    function getOwnerDepositValue(address owner) public override view returns (uint256) {\n        uint256[] storage tokenIds = _ownerStates[owner].tokenIds;\n\n        uint256 ownerDepositValue = 0;\n        for (uint i; i<tokenIds.length; i++) {\n            ownerDepositValue += _tokenStates[tokenIds[i]].depositValue;\n        }\n        return ownerDepositValue;\n    }\n\n    function getOwnerMarketValue(address owner) public override view returns (uint256) {\n        uint256[] storage tokenIds = _ownerStates[owner].tokenIds;\n\n        uint256 ownerMarketValue = 0;\n        for (uint i; i<tokenIds.length; i++) {\n            ownerMarketValue += _tokenStates[tokenIds[i]].marketValue;\n        }\n        return ownerMarketValue;\n    }\n\n    function getOwnerState(address owner) public override view returns(NFTOwnerState memory){\n        NFTOwnerState memory _ownerState=_ownerStates[owner];\n        return _ownerState;\n    }\n    function getTokenState(uint256 tokenId) public override view returns(NFTState memory){\n        NFTState memory _tokenState = _tokenStates[tokenId];\n        return _tokenState;\n    }\n\n    function updateTokenState(uint256 tokenId, NFTState memory tokenState ) public override{\n        _tokenStates[tokenId] = tokenState;\n    }\n\n    function getAllOwnerTokenStates(address owner) public override view returns(NFTState[] memory){\n        \n        uint256[] storage ownerTokenIds = _ownerStates[owner].tokenIds;\n        NFTState[] memory tokenStateList  = new NFTState[](ownerTokenIds.length);\n        for (uint i=0; i<ownerTokenIds.length; i++){\n            tokenStateList[i] = getTokenState(ownerTokenIds[i]);\n        }\n        return tokenStateList;\n    }\n         \n\n    // function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n    //     return\n    //         interfaceId == type(IERC721).interfaceId ||\n    //         interfaceId == type(IERC721Metadata).interfaceId ||\n    //         super.supportsInterface(interfaceId);\n    // }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _ownerStates[owner].tokenIds.length;\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override  {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom( address from, address to,uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to,uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n\n\n    event MintToken(address to, uint tokenId, uint256 blockNumber, NFTOwnerState ownerState);\n    function mint(address to, NFTState memory tokenState) public override{\n        nextTokenId += 1;\n        \n        _mint(to, nextTokenId);\n        _tokenStates[nextTokenId] = tokenState;\n        emit MintToken(to, nextTokenId, block.number, _ownerStates[to ]);\n\n    }\n\n    function burn(uint256 tokenId ) public override {\n        _burn(tokenId);\n    }\n\n    // function burnValue(uint256 tokenId, uint256 value ) public override {\n    //     NFTState storage nftState=  _tokenStates[tokenId];\n    //     _isApprovedOrOwner(msg.sender, tokenId);\n        \n    // }\n\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        \n        \n        \n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        \n\n        _ownerStates[to].tokenIds.push(tokenId);\n        _owners[tokenId] = to;\n\n\n\n        emit Transfer(address(0), to, tokenId);\n\n        if (_ownerStates[to].tokenIds.length == 1) {\n            state.ownerCount ++ ;\n        }\n        state.tokenCount ++;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n        require(owner != address(0), \"The token does not exsist\");\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n        emit Transfer(owner, address(0), tokenId);\n\n        /* we need to iterate through each of the tokens \n        and delete the one with the matching id */\n        bool tokenRemovedBool = false;\n\n\n        uint tokenIdsLength = _ownerStates[owner].tokenIds.length;\n        for (uint i=0; i<tokenIdsLength; i++) {\n            if (tokenId == _ownerStates[owner].tokenIds[i]){\n                _ownerStates[owner].tokenIds[i] = _ownerStates[owner].tokenIds[tokenIdsLength-1];\n                _ownerStates[owner].tokenIds.pop();\n\n                tokenRemovedBool = true;\n                break;\n        }\n        delete _owners[tokenId];\n\n\n        if (_ownerStates[owner].tokenIds.length == 0) {\n            state.ownerCount -- ;\n        }\n\n        state.tokenCount --;\n\n        }\n    }\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _ownerStates[to].tokenIds.push(tokenId);\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n\n  \n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "1047:15455:21:-:0;;;1336:1;1314:23;;1999:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2065:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2087:16:21;;;;:6;;:16;;;;;:::i;:::-;;1999:111;;1047:15455;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1047:15455:21;;;-1:-1:-1;1047:15455:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:39;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:39;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:39;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:39:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:39;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1047:15455:21;;;;;;",
  "sourcePath": "contracts/model/portfolio/token/DepositNFT.sol",
  "type": "contract"
}