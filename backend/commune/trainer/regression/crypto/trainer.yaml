module: "trainer.regression.crypto.trainer.RegressionOracleTrainer"

device: "cuda"
seed: 123

sub_module:
  experiment_manager: 
    cfg: experiment.manager.module
  
data: data.regression.crypto.sushiswap.dataset
model: model.regression.nbeats.base.module
  
num_epochs: 40 # number of epochs
max_batches_per_epoch: 10 # max batches per epoch
# chosen metric
metric: "MSE_future_tokenPriceUSD"
# batch size for updates (seperate from rollout)
es_criteria: 6 # number of epochs in which the score did not improve befor  Early Stopping
improvement_threshold: -0.005 # amount of improvement needed for registering best score
better_op: "<" # this operation compares the best result with the current epoch
default_best_score: 100 # what is the default best score (watch out for better_op)
# Reduce Learning Rate after
reduce_lr_criteria: 2
reduce_lr_factor: 0.5
eval_dropout_factor: 1.0 # scale the original dropout (inference only)
refresh_experiment: True # delete and create experiment with same name

save_state: True # save the model state
load_state: True # load the model state

debug: False # debug mode
verbose: True # verbosity

timescales: get_cfg(config.meta.crypto.timescales)
tokens: get_cfg(config.meta.crypto.tokens.commune_app)

client: get_cfg(client.manager)