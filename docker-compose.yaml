version: "3.9"
services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - ./dbdata/mongodb:/data/db
  postgres:
    image: postgres:12.2
    container_name: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - ./dbdata/postgresql:/var/lib/postgresql/data
  ipfs:
     image: ipfs/go-ipfs:v0.7.0
     container_name: "ipfs"
     ports:
       - 4001:4001
       - 5001:5001
       - 8080:8080
     volumes:
       - ./dbdata/ipfs:/data/ipfs/
  mlflow:
      container_name: mlflow
      restart: always
      build:
          context: ./mlflow
          dockerfile: Dockerfile
      ports:
          - 5000:5000
      environment:
          - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
          - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
      depends_on:
        - postgres
      entrypoint: ./wait-for-it.sh ${POSTGRES_HOST}:${POSTGRES_PORT} -t 90 -- mlflow server --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE} --default-artifact-root s3://${AWS_MLFLOW_BUCKET_NAME}/ -h 0.0.0.0
  s3:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    container_name: s3
    restart: always
    ports:
      - 9000:9000
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command:
      server /data
    volumes:
      - ./dbdata/s3:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8501:8501 # for the user streamlit app
      - 8265:8265
      - 8000:8000
      
    shm_size: 30gb
    container_name: backend
    volumes:
      - ./backend:${MODEL_WDIR}
      - ./backend/.brownie:/root/.brownie
    working_dir: ${MODEL_WDIR}
    env_file: 
      - .env
    deploy:
      resources:
         reservations:
           devices:
           - driver: nvidia
             count: 'all'
             capabilities: [gpu]
    command: bash -c "./scripts/startup.sh"
    links:
      - mongo
      - postgres
      - mlflow
      - s3
      - ganache

  ganache:
    container_name: ganache
    ports: 
      - ${GANACHE_PORT}:${GANACHE_PORT}
    restart: always
    build:
      context: ./ganache/.
    env_file: 
      - .env
    command: bash -c "./scripts/setup.sh"
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend/.
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - './frontend/src:/app/src'
      - './frontend/public:/app/public'
      - './backend/artifacts:/app/src/artifacts'
    ports:
      - 3000:3000
    command: "npm start"
